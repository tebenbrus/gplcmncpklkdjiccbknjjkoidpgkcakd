{"version":3,"mappings":"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,OACvC2C,WACAzC,gBACAA,gBAEA2J,SACA,MAAgBD,WAAU1J,KAC1B,gBAEA,YADAU,UAGA,MACAV,gBACA,MACAY,6BACA,YAEUN,aAEV,GADAN,gBACAY,GACA,kBACAN,gBAEA,uCC6BA,iBACA,aACAN,8BACAA,iCACAA,gDACAA,kDACAA,aAEA,+BACA,oBAA8BK,MAC9BL,mBACA4J,QACAC,aACAC,QAEAhK,6BACA,oBAA8BO,MAC9BL,mBACA4J,QACAG,kBACAD,QAEAhK,mBACA,IAEAY,EACAE,EACAC,EACAC,EALAT,aACAC,WAKA,QAAoBQ,IAAOA,KAG3B,IAFAF,MACAF,OACAG,IAAwBA,IAAOA,KAC/BP,wBACAI,OACAJ,wBACAI,OAGA,mBAEAZ,0BACA,WACAY,OACAE,OACAC,OASAH,IADAA,KADAE,IADAA,KADAC,IADAA,KADAP,IADAA,iCACA,eACAI,2BACA,gBACAJ,2BACA,gBACAO,4BACA,eAQAH,IADAA,KADAE,IADAA,KADAC,IADAA,KADAP,IADAA,iCACA,eACAI,4BACA,gBACAJ,4BACA,gBACAO,0BACA,eAQAH,IADAA,KADAE,IADAA,KADAC,IADAA,KADAP,IADAA,kCACA,eACAI,4BACA,gBACAJ,wBACA,gBACAO,6BACA,eAQAH,IADAA,KADAE,IADAA,KADAC,IADAA,KADAP,IADAA,mCACA,eACAI,2BACA,gBACAJ,6BACA,gBACAO,6BACA,eASAH,IADAA,KADAE,IADAA,KADAC,IADAA,KADAP,IADAA,iCACA,eACAM,4BACA,eACAF,4BACA,gBACAJ,2BACA,eAQAI,IADAA,KADAE,IADAA,KADAC,IADAA,KADAP,IADAA,iCACA,eACAM,2BACA,eACAF,4BACA,gBACAJ,2BACA,eAQAI,IADAA,KADAE,IADAA,KADAC,IADAA,KADAP,IADAA,iCACA,eACAM,6BACA,eACAF,2BACA,gBACAJ,4BACA,eAQAI,IADAA,KADAE,IADAA,KADAC,IADAA,KADAP,IADAA,mCACA,eACAM,0BACA,eACAF,4BACA,gBACAJ,6BACA,eASAI,IADAA,KADAE,IADAA,KADAC,IADAA,KADAP,IADAA,2BACA,eACAI,yBACA,gBACAJ,0BACA,gBACAO,wBACA,cAQAH,IADAA,KADAE,IADAA,KADAC,IADAA,KADAP,IADAA,+BACA,eACAI,yBACA,gBACAJ,wBACA,gBACAO,0BACA,cAQAH,IADAA,KADAE,IADAA,KADAC,IADAA,KADAP,IADAA,+BACA,eACAI,wBACA,gBACAJ,wBACA,gBACAO,uBACA,cAQAH,IADAA,KADAE,IADAA,KADAC,IADAA,KADAP,IADAA,8BACA,eACAI,yBACA,gBACAJ,yBACA,gBACAO,wBACA,cASAH,IADAA,KAHAG,IADAA,QADAP,IADAA,iCACA,gBACAM,wBACA,kBAEAA,IADAA,mCACA,iBACAN,sBACA,eAQAI,IADAA,KAHAG,IADAA,QADAP,IADAA,mCACA,gBACAM,wBACA,kBAEAA,IADAA,gCACA,iBACAN,wBACA,eAQAI,IADAA,KAHAG,IADAA,QADAP,IADAA,kCACA,gBACAM,uBACA,kBAEAA,IADAA,kCACA,iBACAN,yBACA,eAQAI,IADAA,KAHAG,IADAA,QADAP,IADAA,iCACA,gBACAM,yBACA,kBAEAA,IADAA,iCACA,iBACAN,uBACA,eACA2I,cACAA,cACAA,cACAA,eAEAnJ,6BACA,0BACAE,qBACAA,iCACAA,MAKAF,kCACA,IAGAc,EACAC,EAJAR,gBACAC,iBACAI,qBAGA,QAAoBG,WAAgBA,MAEpC,IADAD,mBACA,IACAP,iBAEAO,OACAP,mBACAA,wBAEAO,iBACAP,oBACAA,oBACAA,oBAEA,CAEA,IADAO,kDACA,QACA,wEAEAP,oBACAA,qBACAA,oBACAA,gBAEAK,QACAV,qBACAF,2BACAY,MACAJ,YAGA,4BACAN,MAEAF,uCAMA,QAFAc,EAHAP,gBACAC,iBACAI,qBAEAG,MACe,CAEf,IADAD,4BACAA,KACAP,yBAEA,QACA,MAEAL,qBACAF,2BACAY,IAEA,4BACAV,MAEAF,wCAMA,QAFAc,EAHAP,gBACAC,iBACAI,qBAEAG,MACe,CAEf,IADAD,4BACAA,KACAP,cAEA,QACA,MAEAL,q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","names":["a","O","constructor","this","suffix","value","Math","transform","o","v","isNaN","min","max","y","abs","_","x","F","powers","find","ce","te","oe","floor","trunc","pure","Ae","window","matches","L","fetchAvatarSource","FACEBOOK","GOOGLE","TWITTER","VKONTAKTE","SKYPE","GRAVATAR","GITHUB","CUSTOM","INITIALS","VALUE","getAvatar","M","getImageSize","super","processResponse","getInitials","constructInitials","filter","map","join","newInstance","G","token","getAvatarSources","Ue","pe","getAvatarColors","se","P","type","args","q","gt","fetchAvatar","getRandomColor","copmareSources","isSource","isTextAvatar","overrideAvatarSources","overrideAvatarColors","calculateAsciiCode","split","reduce","getSourcePriority","N","onAvatarClicked","ngOnChanges","ngOnDestroy","initializeAvatar","width","height","sortAvatarSources","buildTextAvatar","buildImageAvatar","getInitialsStyle","textAlign","getImageStyle","maxWidth","fetchAndProcessAsyncAvatar","pipe","Dt","subscribe","console","addSource","isSourceExist","W","round","outputs","clickOnAvatar","features","decls","directives","styles","size","textSizeRatio","bgColor","fgColor","borderColor","style","cornerRadius","facebook","twitter","google","vkontakte","skype","gravatar","github","custom","initials","placeholder","initialsSize","ngModule","providers","provide","de","asyncScheduler","AsyncScheduler","AsyncAction","dueTime","scheduler","operate","source","subscriber","activeTask","lastValue","lastTime","emit","unsubscribe","next","targetTime","now","schedule","undefined","add","createOperatorSubscriber","emitWhenIdle","complete","k","setInterval","delegate","clearInterval","requestAsyncId","recycleAsyncId","execute","_execute","id","actions","flush","start","appendStr","end","appendAsciiStr","buffer","buflen","length","state","J","he","pagesLeftAsString","_numeralPipe","pagesLeft","pagesLeftPercentage","planPages","userPlanType","userBalance","accountType","canShowCredits","ee","current","ngOnInit","_paymentService","userBalance$","_initSubscription","isLoading","document","documentElement","setProperty","canShowTag","userSubscription","getExtensionSubscriptionStateAsync","selectors","j","userEmail","user","emailAddress","triggerMenuItemAction","De","_authService","logoutAsync","chrome","tabs","create","url","clickout","target","parentElement","toggleMenu","actionsMenu","nativeElement","contains","Be","goToLink","Me","setImmediate","s","clearImmediate","We","i","bt","f","Q","ze","d","l","T","display","Xs","BROWSER_PROVIDER","APP_BOOTSTRAP_LISTENER","useFactory","_document","platformId","isPlatformBrowser","elements","Array","from","querySelectorAll","CLASS_NAME","classRegex","forEach","el","classList","parentNode","removeChild","className","replace","deps","DOCUMENT","PLATFORM_ID","multi","CoreModule","ɵfac","ɵmod","i0","ɵinj","mediaQuery","mqAlias","priority","property","clone","MediaChange","stylesheet","Map","addStyleToElement","element","get","set","clearStyles","clear","getStyleForElement","styleName","StylesheetMap","ɵprov","factory","DEFAULT_CONFIG","addFlexToParent","addOrientationBps","disableDefaultBps","disableVendorPrefixes","serverLoaded","useColumnBasisZero","printWithBreakpoints","mediaTriggerAutoRestore","ssrObserveBreakpoints","LAYOUT_CONFIG","InjectionToken","providedIn","SERVER_TOKEN","BREAKPOINT","dest","alias","shouldCache","sideEffect","_input","_styles","_parent","_serverStylesheet","_serverModuleLoaded","_platformId","layoutConfig","applyStyleToElement","applyCssPrefixes","_applyMultiValueStyleToElement","applyStyleToElements","getFlowDirection","query","lookupStyle","lookupInlineStyle","isPlatformServer","hasWrap","lookupAttributeValue","attribute","getAttribute","getPropertyValue","_getServerStyle","inlineOnly","getComputedStyle","trim","Object","keys","sort","key","values","isArray","_setServerStyle","styleValue","toLowerCase","styleMap","_readStyleAttribute","_writeStyleAttribute","styleAttribute","styleList","colonIndex","indexOf","Error","substr","styleAttrValue","newValue","setAttribute","b","priorityA","StyleUtils","_zone","BehaviorSubject","registry","pendingRemoveListenerFns","_observable$","asObservable","activations","results","mql","push","isActive","registerQuery","some","m","observe","mqList","filterOthers","matchMedia$","change","registration$","Observable","observer","lastChange","pop","e","merge","list","buildQueryCss","mediaQueries","it","ALL_STYLES","styleEl","createElement","styleSheet","cssText","appendChild","createTextNode","head","mq","error","onMQLEvent","run","buildMQL","addListener","removeListener","fn","isBrowser","matchMedia","media","onchange","addEventListener","removeEventListener","dispatchEvent","constructMql","MatchMedia","DEFAULT_BREAKPOINTS","overlapping","HANDSET_PORTRAIT","HANDSET_LANDSCAPE","TABLET_PORTRAIT","TABLET_LANDSCAPE","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","TABLET","WEB","ORIENTATION_BREAKPOINTS","ALIAS_DELIMITERS","part","first","charAt","remainder","slice","toUpperCase","bp","name","firstUpperCase","camelCase","BREAKPOINTS","breakpoints","inject","bpFlattenArray","concat","apply","defaults","dict","extendObject","validateSuffixes","mergeByAlias","findByMap","items","sortAscendingPriority","findByAlias","findWithPredicate","findByQuery","overlappings","aliases","suffixes","searchFn","response","BreakPointRegistry","PRINT","BREAKPOINT_PRINT","registeredBeforeAfterPrintHooks","isPrintingBeforeAfterEvent","beforePrintEventListeners","afterPrintEventListeners","isPrinting","queue","PrintQueue","deactivations","withPrintQuery","queries","isPrintEvent","startsWith","printAlias","printBreakPoints","getEventBreakpoints","sortDescendingPriority","updateEvent","event","mergeAlias","registerBeforeAfterPrintHooks","defaultView","beforePrintListener","startPrinting","updateStyles","afterPrintListener","stopPrinting","interceptEvents","collectActivations","blockPropagation","bpList","activatedBreakpoints","addPrintBreakpoints","PrintHook","printBreakpoints","addBreakpoint","bpInList","hook","elementMap","elementKeyMap","WeakMap","watcherMap","updateMap","clearMap","subject","Subject","observeActivations","activatedAlias","onMediaChange","mc","splice","init","updateFn","clearFn","extraTriggers","initBuilderMap","buildElementKeyMap","watchExtraTriggers","getValue","bpMap","getActivatedValues","hasValue","setValue","val","updateElement","trackValue","keyMap","Set","valueMap","delete","clearElement","builders","releaseElement","triggerUpdate","triggers","watchers","newSubscription","currentValue","activatedBp","has","lastHope","tap","bind","input","oldMap","MediaMarshaller","elementRef","styleBuilder","styler","marshal","DIRECTIVE_KEY","inputs","mru","destroySubject","styleCache","activatedValue","changes","updateWithValue","addStyles","parent","builder","useCache","genStyles","buildStyles","be","getFlexFlowDirection","addIfMissing","hasInlineValue","buildLayoutCSS","BaseDirective2","StyleBuilder","ɵdir","_breakpoints","autoRegisterQueries","useOverlaps","clearAll","destroy","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","deactivate","MockMediaQueryList","MockMatchMedia","_mediaQuery","_isActive","_listeners","callback","call","listener","__","___","filterOverlaps","destroyed$","_media$","watchActivations","media$","a1","a2","locator","toMediaQuery","buildObservable","debounceTime","asapScheduler","switchMap","of","findAllActivations","takeUntil","MediaObserver","hasCachedRegistryMatches","originalActivations","originalRegistry","saveActivations","deactivateAll","setActivations","prepareAutoRestore","restore","extractQuery","restoreRegistryMatches","resizeSubscription","resize$","fromEvent","take","currentActivations","forceRegistryMatches","simulateMediaChanges","toMediaChange","mergeMQAlias","cacheRegistryMatches","emitChangeEvent","basis","grow","shrink","parts","_validateCalcValue","substring","calc","MediaTrigger","content","ImgSrcStyleBuilder","serverModuleLoaded","defaultSrc","imgSrcCache","src","ImgSrcDirective","i1","inputs$3","arguments","DefaultImgSrcDirective","iterableDiffers","keyValueDiffers","renderer2","ngClassInstance","NgClass","klass","ngClass","ngDoCheck","ClassDirective","i2","inputs$2","DefaultClassDirective","show","shouldShow","isServer","ShowHideStyleBuilder","hasLayout","hasFlexChild","ngAfterViewInit","trackExtraTriggers","children","DISPLAY_MAP","getDisplayStyle","defaultValue","inputKey","inputValue","coerceBooleanProperty","ShowHideDirective","inputs$1","DefaultShowHideDirective","noQuotes","what","sanitize","getType","entry","stringToKeyValue","keyValuesToMap","buildMapFromList$1","vals","NgStyleKeyValue","sanitizer","differs","ngStyleInstance","NgStyle","fallbackStyles","buildStyleMap","ngStyle","SecurityContext","buildMapFromList","delimiter","String","buildRawList","buildMapFromSet","StyleDirective","i2$1","DefaultStyleDirective","ExtendedModule","LayoutStyleBuilder","inputs$6","elRef","styleUtils","layoutCache","LayoutDirective","DefaultLayoutDirective","CLEAR_MARGIN_CSS","_styler","gapValue","endsWith","GRID_SPECIFIER","directionality","between","below","minus","str","marginRight","marginBottom","marginLeft","margin","buildGridMargin","paddingStyles","paddingRight","paddingLeft","padding","buildGridPadding","lastItem","gapCss","getMarginType","layout","margins","buildGapCSS","LayoutGapStyleBuilder","inputs$5","zone","observerSubject","onLayoutChange","childrenNodes","obj","ngAfterContentInit","buildChildObservable","disconnect","matcher","direction","LAYOUT_VALUES","nodeType","willDisplay","orderA","orderB","layoutGapCacheRowRtl","layoutGapCacheRowLtr","layoutGapCacheColumnRtl","layoutGapCacheColumnLtr","gridMode","childrenStyle","runOutsideAngular","MutationObserver","mutations","addedNodes","removedNodes","childList","LayoutGapDirective","DefaultLayoutGapDirective","basisParts","isFlowHorizontal","hasCalc","usingCalc","isPercent","hasUnits","isValue","isFixed","css","flex","Xt","FlexStyleBuilder","inputs$4","wrap","flexGrow","flexShrink","triggerReflow","layoutParts","isHorizontal","flexRowWrapCache","flexRowCache","flexColumnWrapCache","flexColumnCache","validateBasis","FlexDirective","DefaultFlexDirective","order","parseInt","FlexOrderStyleBuilder","flexOrderCache","FlexOrderDirective","DefaultFlexOrderDirective","offset","horizontalLayoutKey","isRtl","FlexOffsetStyleBuilder","flexOffsetCacheRowRtl","flexOffsetCacheColumnRtl","flexOffsetCacheColumnLtr","flexOffsetCacheRowLtr","FlexOffsetDirective","DefaultFlexOffsetDirective","FlexAlignStyleBuilder","flexAlignCache","FlexAlignDirective","DefaultFlexAlignDirective","FLEX_FILL_CSS","FlexFillStyleBuilder","flexFillCache","FlexFillDirective","align","mainAxis","crossAxis","inline","vs","LayoutAlignStyleBuilder","layoutAlignHorizontalInlineCache","layoutAlignHorizontalRevInlineCache","layoutAlignVerticalInlineCache","layoutAlignVerticalRevInlineCache","layoutAlignVerticalRevCache","layoutAlignVerticalCache","layoutAlignHorizontalRevCache","layoutAlignHorizontalCache","layoutKeys","includes","LayoutAlignDirective","DefaultLayoutAlignDirective","FlexModule","BidiModule","ROW_DEFAULT","COL_DEFAULT","rowAxis","columnAxis","buildCss$2","GridAlignStyleBuilder","alignCache","GridAlignDirective","inputs$a","DefaultGridAlignDirective","DEFAULT_MAIN$1","DEFAULT_CROSS$1","buildCss$1","GridAlignColumnsStyleBuilder","_inline","alignColumnsInlineCache","alignColumnsCache","GridAlignColumnsDirective","inputs$9","DefaultGridAlignColumnsDirective","DEFAULT_MAIN","DEFAULT_CROSS","buildCss","GridAlignRowsStyleBuilder","alignRowsInlineCache","alignRowsCache","GridAlignRowsDirective","inputs$8","DefaultGridAlignRowsDirective","GridAreaStyleBuilder","gridAreaCache","GridAreaDirective","inputs$7","DefaultGridAreaDirective","areas","GridAreasStyleBuiler","areasInlineCache","areasCache","GridAreasDirective","DefaultGridAreasDirective","dense","GridAutoStyleBuilder","autoInlineCache","autoCache","GridAutoDirective","DefaultGridAutoDirective","GridColumnStyleBuilder","columnCache","GridColumnDirective","DefaultGridColumnDirective","auto","GridColumnsStyleBuilder","columnsInlineCache","columnsCache","GridColumnsDirective","DefaultGridColumnsDirective","GridGapStyleBuilder","gapInlineCache","gapCache","GridGapDirective","DefaultGridGapDirective","GridRowStyleBuilder","rowCache","GridRowDirective","DefaultGridRowDirective","GridRowsStyleBuilder","rowsInlineCache","rowsCache","GridRowsDirective","DefaultGridRowsDirective","GridModule","Version","warn","configOptions","FlexLayoutModule","useValue","_MatProgressSpinnerBase","mixinColor","_elementRef","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","diameter","INDETERMINATE_ANIMATION_TEMPLATE","_platform","animationMode","_diameter","_value","mode","trackedDiameters","MatProgressSpinner","_diameters","_spinnerAnimationLabel","_getSpinnerAnimationLabel","_noopAnimations","_forceAnimations","strokeWidth","coerceNumberProperty","_styleRoot","_attachStyleNode","_strokeWidth","_getShadowRoot","_getCircleRadius","_getViewBox","viewBox","_getStrokeCircumference","PI","_getStrokeDashOffset","_getCircleStrokeWidth","styleRoot","currentDiameter","diameters","diametersForElement","styleTag","textContent","_getAnimationText","strokeCircumference","toString","ANIMATION_MODULE_TYPE","ɵcmp","platform","MatSpinner","MatProgressSpinnerModule","MatCommonModule","CommonModule","ei","Sr","imports","Qs","Jn","ti","si","_userBalance$","userSubscription$","_userSubscription$","getExtensionUserBalanceAsync","_http","toPromise","getExtensionProductsPlansAsync","sendCreditsRequestToOwnerAsync","post","DIR_DOCUMENT","EventEmitter","bodyDir","body","dir","htmlDir","Directionality","_dir","_isInitialized","old","normalizedValue","_rawDir","Dir","useExisting","hasV8BreakIterator","Intl","v8BreakIterator","EDGE","test","navigator","userAgent","TRIDENT","BLINK","CSS","WEBKIT","IOS","FIREFOX","ANDROID","SAFARI","Platform","PlatformModule","supportsPassiveEvents","shadowDomIsSupported","options","defineProperty","supportsPassiveEventListeners","capture","createShadowRoot","attachShadow","_supportsShadowDom","rootNode","getRootNode","ShadowRoot","activeElement","shadowRoot","newActiveElement","composedPath","__karma__","jasmine","jest","Mocha","MutationObserverFactory","_mutationObserverFactory","_observedElements","_cleanupObserver","elementOrRef","coerceElement","subscription","stream","_observeElement","_unobserveElement","count","characterData","subtree","ContentObserver","_contentObserver","_ngZone","_disabled","_currentSubscription","disabled","_unsubscribe","_subscribe","debounce","_debounce","n","CdkObserveContent","ObserversModule","attr","match","MESSAGES_CONTAINER_ID","CDK_DESCRIBEDBY_ID_PREFIX","CDK_DESCRIBEDBY_HOST_ATTRIBUTE","nextId","messageRegistry","messagesContainer","describe","hostElement","message","role","_canBeDescribed","getKey","setMessageId","messageElement","referenceCount","_createMessageElement","_isElementDescribedByMessage","_addMessageReference","removeDescription","_isElementNode","_removeMessageReference","registeredMessage","_deleteMessageElement","childNodes","_deleteMessagesContainer","describedElements","_removeCdkDescribedByReferenceIds","removeAttribute","_createMessagesContainer","remove","preExistingContainer","getElementById","visibility","originalReferenceIds","getAriaReferenceIds","ids","existingId","addAriaReferencedId","filteredIds","removeAriaReferencedId","referenceIds","messageId","trimmedMessage","ariaLabel","ELEMENT_NODE","AriaDescriber","isDisabled","hasAttribute","isVisible","offsetWidth","offsetHeight","getClientRects","isTabbable","frameElement","getFrameElement","node","ownerDocument","getTabIndexValue","nodeName","tabIndexValue","inputType","isPotentiallyTabbableIOS","tabIndex","isFocusable","config","isInputElement","isHiddenInput","isNativeFormElement","isAnchorElement","isAnchorWithHref","hasValidTabIndex","ignoreVisibility","InteractivityChecker","_element","_checker","deferAnchors","_hasAttached","startAnchorListener","focusLastTabbableElement","endAnchorListener","focusFirstTabbableElement","_enabled","attachAnchors","enabled","_startAnchor","_endAnchor","_toggleAnchorTabIndex","startAnchor","endAnchor","_createAnchor","insertBefore","nextSibling","focusInitialElementWhenReady","Promise","resolve","_executeOnStable","focusInitialElement","focusFirstTabbableElementWhenReady","focusLastTabbableElementWhenReady","_getRegionBoundary","bound","markers","_getFirstTabbableElement","_getLastTabbableElement","redirectToElement","querySelector","focusableChild","focus","hasAttached","root","tabbableChild","anchor","isEnabled","toggleAnchors","isStable","onStable","deferCaptureElements","FocusTrap","FocusTrapFactory","_focusTrapFactory","_previouslyFocusedElement","focusTrap","autoCapture","_autoCapture","_captureFocus","autoCaptureChange","firstChange","_getFocusedElementPierceShadowDom","CdkTrapFocus","_focusTrapManager","_inertStrategy","defer","register","deregister","_enable","preventFocus","_disable","allowFocus","FOCUS_TRAP_INERT_STRATEGY","_listener","_trapFocus","focusTrapRoot","closest","setTimeout","_focusTrapStack","ft","stack","FocusTrapManager","EventListenerFocusTrapInertStrategy","configObject","ConfigurableFocusTrap","offsetX","offsetY","touch","touches","changedTouches","identifier","radiusX","radiusY","ConfigurableFocusTrapFactory","INPUT_MODALITY_DETECTOR_OPTIONS","INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS","ignoreKeys","modalityEventListenerOptions","normalizePassiveListenerOptions","passive","ngZone","_mostRecentTarget","_modality","_lastTouchMs","_onKeydown","_options","keyCode","_getEventTarget","_onMousedown","Date","isFakeMousedownFromScreenReader","_onTouchstart","isFakeTouchstartFromScreenReader","modalityDetected","S","modalityChanged","mi","z","c","p","C","distinctUntilChanged","mostRecentModality","InputModalityDetector","LIVE_ANNOUNCER_ELEMENT_TOKEN","LIVE_ANNOUNCER_DEFAULT_OPTIONS","elementToken","_defaultOptions","_liveElement","_createLiveElement","announce","defaultOptions","politeness","duration","clearTimeout","_previousTimeout","elementClass","previousElements","getElementsByClassName","liveEl","LiveAnnouncer","_liveAnnouncer","_politeness","_subscription","elementText","_previousAnnouncedText","CdkAriaLive","i1$1","FOCUS_MONITOR_DEFAULT_OPTIONS","captureEventListenerOptions","_inputModalityDetector","_origin","_windowFocused","_originFromTouchInteraction","_elementInfo","_monitoredElementCount","_rootNodeFocusListenerCount","_windowFocusListener","_windowFocusTimeoutId","_stopInputModalityDetector","_rootNodeFocusAndBlurListener","handler","_onFocus","_onBlur","_detectionMode","detectionMode","monitor","checkChildren","_getDocument","cachedInfo","info","_registerGlobalListeners","stopMonitoring","elementInfo","_setClasses","_removeGlobalListeners","focusVia","origin","_getClosestElementsInfo","currentElement","_originChanged","_setOrigin","_info","_getWindow","_getFocusOrigin","focusEventTarget","_shouldBeAttributedToTouch","_lastFocusOrigin","toggle","isFromInteraction","_originTimeoutId","ms","relatedTarget","Node","_emitOrigin","rootNodeFocusListeners","modality","FocusMonitor","_focusMonitor","cdkFocusChange","_monitorSubscription","CdkMonitorFocus","BLACK_ON_WHITE_CSS_CLASS","WHITE_ON_BLACK_CSS_CLASS","HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS","getHighContrastMode","testElement","backgroundColor","position","documentWindow","computedStyle","computedColor","_applyBodyHighContrastModeCssClasses","_hasCheckedHighContrastMode","bodyClasses","HighContrastModeDetector","highContrastModeDetector","A11yModule","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","MATERIAL_SANITY_CHECKS","_sanityChecks","_hasDoneGlobalChecks","_checkIsEnabled","_isTestEnvironment","base","defaultColor","color","_color","colorPalette","MAT_DATE_LOCALE","LOCALE_ID","_localeChanges","localeChanges","getValidDateOrNull","isDateInstance","isValid","deserialize","invalid","setLocale","locale","compareDate","second","getYear","getMonth","getDate","sameDate","firstValid","secondValid","clampDate","date","MAT_DATE_FORMATS","ISO_8601_REGEX","valueFunction","valuesArray","DateAdapter","matDateLocale","useUtcForDisplay","getFullYear","getDayOfWeek","getDay","getMonthNames","dtf","DateTimeFormat","month","timeZone","range","_format","getDateNames","day","getDayOfWeekNames","weekday","getYearName","year","getFirstDayOfWeek","getNumDaysInMonth","_createDateWithOverflow","getTime","createDate","result","today","parse","format","displayFormat","nr","addCalendarYears","years","addCalendarMonths","months","newDate","addCalendarDays","days","toIso8601","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","NaN","setFullYear","setHours","setUTCFullYear","setUTCHours","getHours","getMinutes","getSeconds","getMilliseconds","NativeDateAdapter","NativeDateModule","useClass","MatNativeDateModule","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","isErrorState","control","form","dirty","submitted","ShowOnDirtyErrorStateMatcher","touched","ErrorStateMatcher","MatLine","MatLineModule","_renderer","fadeOut","fadeOutRipple","defaultRippleAnimationConfig","enterDuration","exitDuration","passiveEventOptions","pointerDownEvents","pointerUpEvents","_target","elementOrElementRef","_isPointerDown","_activeRipples","_pointerUpEventsRegistered","_containerElement","fadeInRipple","containerRect","_containerRect","getBoundingClientRect","animationConfig","animation","centered","left","top","radius","rect","distX","right","distY","bottom","sqrt","distanceToFurthestCorner","ripple","transitionDuration","rippleRef","RippleRef","persistent","_mostRecentTransientRipple","_runTimeoutOutsideZone","isMostRecentTransientRipple","wasActive","rippleEl","opacity","fadeOutAll","fadeOutAllNonPersistent","setupTriggerEvents","_triggerElement","_removeTriggerEvents","_registerEvents","handleEvent","_onTouchStart","_onPointerUp","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","rippleDisabled","clientX","clientY","rippleConfig","terminateOnPointerUp","delay","eventTypes","MAT_RIPPLE_GLOBAL_OPTIONS","globalOptions","_animationMode","_globalOptions","_rippleRenderer","RippleRenderer","_setupTriggerEventsIfEnabled","trigger","_trigger","launch","configOrX","MatRipple","MatRippleModule","MatPseudoCheckbox","MatPseudoCheckboxModule","MAT_OPTION_PARENT_COMPONENT","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","_labelId","_inert","inertGroups","_MatOptgroupBase","MAT_OPTGROUP","MatOptgroup","ngContentSelectors","Qn","_uniqueIdCounter","isUserInput","_changeDetectorRef","group","_selected","_active","_mostRecentViewValue","onSelectionChange","_stateChanges","multiple","selected","disableRipple","active","viewValue","_getHostElement","select","markForCheck","_emitSelectionChangeEvent","deselect","setActiveStyles","setInactiveStyles","getLabel","_handleKeydown","hasModifierKey","_selectViaInteraction","preventDefault","_getAriaSelected","_getTabIndex","ngAfterViewChecked","MatOptionSelectionChange","_MatOptionBase","changeDetectorRef","MatOption","i3","MatOptionModule","_onFinish","onStart","onDone","onDestroy","hasStarted","play","triggerMicrotask","_onStart","pause","restart","finish","reset","setPosition","getPosition","triggerCallback","t","r","h","_onDestroy","beforeDestroy","process","players","NoopAnimationPlayer","ɵAnimationGroupPlayer","driver","normalizer","keyframes","preStyles","postStyles","errors","normalizedKeyframes","previousOffset","previousKeyframe","kf","isSameOffset","normalizedKeyframe","prop","normalizedProp","normalizePropertyName","AUTO_STYLE","normalizeStyleValue","LINE_START","player","eventName","copyAnimationEvent","phaseName","totalTime","makeAnimationEvent","triggerName","fromState","toState","data","_data","command","separatorPos","_contains","elm1","elm2","_matches","selector","_query","_isNode","isNode","Element","host","prototype","proto","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","elems","elm","_CACHED_BODY","_IS_WEBKIT","containsVendorPrefix","matchesElement","containsElement","invokeQuery","object","newObj","newProp","validateStyleProperty","computeStyle","animate","easing","previousPlayers","scrubberAccessRequested","NoopAnimationDriver","AnimationDriver","NOOP","ENTER_CLASSNAME","LEAVE_CLASSNAME","NG_TRIGGER_CLASSNAME","NG_TRIGGER_SELECTOR","NG_ANIMATING_CLASSNAME","NG_ANIMATING_SELECTOR","_convertTimeValueToMS","parseFloat","unit","timings","allowNegativeValues","hasOwnProperty","exp","regex","delayMatch","easingVal","containsErrors","startIndex","parseTimeExpression","destination","readPrototype","copyObj","item","getStyleAttributeString","camelCaseToDashCase","formerStyles","camelProp","dashCaseToCamelCase","writeStyleAttribute","steps","sequence","PARAM_REGEX","RegExp","params","exec","lastIndex","original","varName","localVal","iterator","arr","done","DASH_CASE_REGEXP","previousStyles","previousStyleProps","startingKeyframe","missingStyleProps","visitor","context","visitTrigger","visitState","visitTransition","visitSequence","visitGroup","visitAnimate","visitKeyframes","visitStyle","visitReference","visitAnimateChild","visitAnimateRef","visitQuery","visitStagger","transitionValue","expressions","eventStr","parseAnimationAlias","separator","makeLambdaFromStates","isFullAnyStateExpr","parseInnerTransitionStr","TRUE_BOOLEAN_VALUES","FALSE_BOOLEAN_VALUES","lhs","rhs","LHS_MATCH_BOOLEAN","RHS_MATCH_BOOLEAN","lhsMatch","rhsMatch","SELF_TOKEN","SELF_TOKEN_REGEX","metadata","AnimationAstBuilderVisitor","build","_driver","AnimationAstBuilderContext","_resetContextStyleTimingState","visitDslNode","normalizeAnimationEntry","currentQuerySelector","collectedStyles","currentTime","queryCount","depCount","states","transitions","definitions","def","stateDef","transition","styleAst","astParams","containsDynamicStyles","missingSubs","isObject","stylesObj","extractStyleParams","sub","missingSubsArr","iteratorToArray","matchers","parseTransitionExpr","expr","normalizeAnimationOptions","furthestTime","step","innerAst","timingAst","makeTimingAst","resolveTiming","strValue","ast","dynamic","constructTimingAst","currentAnimateTimings","styleMetadata","isEmpty","newStyleData","_styleAst","isEmptyStep","_makeStyleAst","_validateStyleAst","styleTuple","collectedEasing","styleData","endTime","startTime","tuple","collectedEntry","updateCollectedStyle","validateStyleParams","totalKeyframesWithOffsets","offsets","offsetsOutOfOrder","keyframesOutOfRange","offsetVal","consumeOffset","generatedOffset","limit","animateDuration","durationUpToThisFrame","parentSelector","currentQuery","includeSelf","hasAmpersand","normalizeSelector","getOrSetAsInMap","optional","originalSelector","currentTransition","normalizeParams","preStyleProps","postStyleProps","subTimeline","_map","consume","instructions","append","existingInstructions","ENTER_TOKEN_REGEX","LEAVE_TOKEN_REGEX","rootElement","enterClassName","leaveClassName","startingStyles","finalStyles","subInstructions","AnimationTimelineBuilderVisitor","buildKeyframes","ElementInstructionMap","AnimationTimelineContext","currentTimeline","setStyles","timelines","timeline","containsAnimation","tl","allowOnlyTimelineStyles","createTimelineInstruction","elementInstructions","innerContext","createSubContext","_visitSubInstructions","transformIntoNewTimeline","previousNode","resolveTimingValue","instruction","instructionTimings","appendInstructionToTimeline","updateOptions","subContextCount","ctx","snapshotCurrentStyles","DEFAULT_NOOP_PREVIOUS_NODE","delayNextStep","applyStylesToKeyframe","innerTimelines","mergeTimelineCollectedStyles","_visitTiming","interpolateParams","incrementTime","getCurrentStyleProperties","forwardFrame","applyEmptyStep","innerTimeline","forwardTime","elms","currentQueryTotal","sameElementTimeline","currentQueryIndex","parentContext","maxTime","currentStaggerTime","startingTime","_enterClassName","_leaveClassName","initialTimeline","TimelineBuilder","skipIfExists","newOptions","optionsToUpdate","newParams","paramsToUpdate","_copyOptions","oldParams","newTime","fork","updatedTimings","SubTimelineBuilder","stretchStartingKeyframe","time","_elementTimelineStylesLookup","_previousKeyframe","_currentKeyframe","_keyframes","_styleSummary","_pendingStyles","_backFill","_currentEmptyStepKeyframe","_localTimelineStyles","_globalTimelineStyles","_loadKeyframe","hasPreStyleStep","_updateStyle","allStyles","allProperties","copyStyles","flattenStyles","props","getFinalKeyframe","properties","details0","details1","finalKeyframes","keyframe","finalKeyframe","preProps","postProps","kf0","kf1","_stretchStartingKeyframe","newKeyframes","startingGap","newFirstKeyframe","oldFirstKeyframe","roundOffset","timeAtKeyframe","decimalPoints","mult","pow","AnimationStyleNormalizer","propertyName","userProvidedProperty","normalizedProperty","strVal","DIMENSIONAL_PROP_MAP","valAndSuffixMatch","makeBooleanMap","isRemovalTransition","fromStyles","toStyles","queriedElements","EMPTY_OBJECT","_triggerName","_stateStyles","currentState","nextState","matchFns","oneOrMoreTransitionsMatch","stateName","backupStateStyler","stateStyler","backupStyles","currentOptions","nextOptions","skipAstBuild","transitionAnimationParams","currentAnimationParams","currentStateStyles","nextAnimationParams","nextStateStyles","preStyleMap","postStyleMap","isRemoval","animationOptions","buildAnimationTimelines","createTransitionInstruction","queriedElementsList","defaultParams","combinedParams","styleObj","_normalizer","transitionFactories","AnimationStateStyles","balanceProperties","AnimationTransitionFactory","fallbackTransition","createFallbackTransition","containsQueries","matchTransition","matchStyles","key1","key2","EMPTY_INSTRUCTION_MAP","bodyNode","_animations","_playersById","buildAnimationAst","_buildPlayer","normalizeKeyframes","autoStylesMap","g","inst","optimizeGroupPlayer","_getPlayer","index","listen","baseEvent","listenOnPlayer","QUEUED_CLASSNAME","DISABLED_CLASSNAME","DISABLED_SELECTOR","EMPTY_PLAYER_ARRAY","NULL_REMOVAL_STATE","namespaceId","setForRemoval","setForMove","hasAnimation","removedBeforeQueried","NULL_REMOVED_QUERIED_STATE","REMOVAL_FLAG","isObj","absorbOptions","VOID_VALUE","DEFAULT_STATE_VALUE","StateValue","_engine","_triggers","_queue","_elementListeners","_hostClassName","addClass","phase","listeners","triggersWithStates","statesByElement","afterFlush","_getTrigger","defaultToFallback","TransitionAnimationPlayer","k1","k2","objEquals","reportError","eraseStyles","playersOnElement","playersByElement","queued","isFallbackTransition","totalQueuedPlayers","removeClass","stateMap","clearElementCache","elementPlayers","_signalRemovalForInnerTriggers","namespaces","fetchNamespacesByElement","ns","triggerLeaveAnimation","afterFlushAnimationsDone","destroyAfterComplete","triggerStates","markElementAsRemoved","processLeaveNode","prepareLeaveAnimationListeners","elementStates","visitedTriggers","removeNode","engine","childElementCount","containsPotentialParentTransition","totalAnimations","currentPlayers","playersByQueriedElement","removalFlag","destroyInnerAnimations","_onRemovalComplete","insertNode","drainQueuedTransitions","microtaskId","destroyed","markedForDestroy","d0","d1","elementContainsData","containsData","newHostElements","disabledNodes","_namespaceLookup","_namespaceList","_flushFns","_whenQuietFns","namespacesByHostElement","collectedEnterElements","collectedLeaveElements","onRemovalComplete","queuedPlayers","createNamespace","AnimationTransitionNamespace","_balanceNamespaceList","collectEnterElement","found","nextNamespace","registerTrigger","_fetchNamespace","nsId","isElementNode","details","markElementAsDisabled","isHostElement","hostNS","_buildInstruction","subTimelines","skipBuildAst","containerElement","destroyActiveAnimationsForElement","finishActiveQueriedAnimationOnElement","whenRenderingDone","cleanupFns","_flushAnimations","quietFns","skippedPlayers","skippedPlayersMap","queuedInstructions","allPreStyleElements","allPostStyleElements","disabledElementsSet","nodesThatAreDisabled","allTriggerElements","enterNodeMap","buildRootMap","enterNodeMapIds","nodes","allLeaveNodes","mergedLeaveNodes","leaveNodesWithoutAnimations","H","leaveNodeMapIds","leaveNodeMap","allPlayers","erroneousTransitions","nodeIsOrphaned","stringMap","setVal","allPreviousPlayersMap","animationElementMap","_beforeAnimationBuild","_getPreviousPlayers","prevPlayer","replaceNodes","replacePostStylesAsPre","postStylesMap","cloakAndComputeStyles","preStylesMap","pre","rootPlayers","subPlayers","NO_PARENT_ANIMATION_ELEMENT_DETECTED","overrideTotalTime","parentWithAnimation","parentsToAdd","detectedParent","innerPlayer","_buildAnimation","setRealPlayer","parentPlayers","parentPlayer","playersForElement","syncPlayerEvents","queriedPlayerResults","queriedInnerElements","queriedPlayers","activePlayers","removeNodesAfterAnimationDone","isQueriedElement","toStateValue","queriedElementPlayers","isRemovalAnimation","targetNameSpaceId","targetTriggerName","timelineInstruction","realPlayer","getRealPlayer","allQueriedPlayers","allConsumedElements","allSubElements","allNewPlayers","finalPlayers","_flattenGroupPlayersRecur","flattenGroupPlayers","pp","wrappedPlayer","currentValues","deleteOrUnsetInMap","_player","_containsRealPlayer","_queuedCallbacks","_queueEvent","oldValue","valuesMap","elementPropsMap","defaultStyle","cloakVals","cloakElement","failedElements","roots","rootMap","nodeSet","localRootMap","getRoot","CLASSES_CACHE_KEY","classes","postEntry","preEntry","_triggerCache","_transitionEngine","TransitionAnimationEngine","_timelineEngine","TimelineAnimationEngine","componentId","cacheKey","AnimationTrigger","buildTrigger","onInsert","onRemove","disableAnimations","disable","action","parseTimelineCommand","eventPhase","startStyles","endStyles","filterNonAnimatableStyles","SpecialCasedStyles","_startStyles","_endStyles","_state","initialStyles","initialStylesByElement","_initialStyles","isNonAnimatableStyle","ANIMATION_PROP","ANIMATIONEND_EVENT","_name","_duration","_delay","_easing","_fillMode","_onDoneFn","_finished","_destroyed","_startTime","_position","_eventFn","_handleCallback","anim","getAnimationStyle","char","countChars","setAnimationStyle","applyKeyframeAnimation","addRemoveAnimationEvent","playPauseAnimation","resume","findIndexForAnimation","timestamp","_ngTestManualTimestamp","elapsedTime","toFixed","animationName","tokens","findMatchingTokenIndex","removeKeyframeAnimation","status","searchToken","doRemove","_finalStyles","_specialStyles","_onDoneFns","_onStartFns","_onDestroyFns","currentSnapshot","_buildStyler","_flushStartFns","_flushDoneFns","ElementAnimationStyleHandler","methods","finished","_startingStyles","__initialized","hypenatePropsObject","removeProperty","_count","buildKeyframeElement","keyframeStr","tab","kfElm","previousCssKeyframePlayers","CssKeyframesPlayer","allowPreviousPlayerStylesMerge","flatKeyframes","flattenKeyframesIntoStyles","balancePreviousStylesIntoKeyframes","DirectStylePlayer","findNodeToAppendKeyframeElement","specialStyles","packageNonAnimatableStyles","_initialized","_started","_preparePlayerBeforeStart","domPlayer","_triggerWebAnimation","_finalKeyframe","_resetDomPlayerState","cancel","_isNativeImpl","getElementAnimateFn","_cssKeyframesDriver","CssKeyframesDriver","overrideWebAnimationsSupport","supported","playerOptions","fill","previousWebAnimationPlayers","WebAnimationsPlayer","AnimationBuilder","rootRenderer","doc","_nextAnimationId","typeData","encapsulation","ViewEncapsulation","createRenderer","issueAnimationCommand","BrowserAnimationFactory","BrowserAnimationBuilder","_id","RendererAnimationPlayer","_command","_listen","renderer","DISABLE_ANIMATIONS_FLAG","_currentId","_microtaskId","_animationCallbacksBuffer","_rendererCache","_cdRecurDepth","promise","BaseAnimationRenderer","animationTriggers","AnimationRenderer","begin","_scheduleCountTask","then","scheduleListenerCallback","AnimationRendererFactory","destroyNode","namespace","createComment","createText","newChild","refChild","isMove","oldChild","selectRootElement","selectorOrNode","preserveContent","setStyle","flags","removeStyle","resolveElementFromTarget","dotIndex","parseTriggerCallbackName","countId","ɵAnimationEngine","InjectableAnimationEngine","SHARED_ANIMATION_PROVIDERS","ɵAnimationStyleNormalizer","ɵWebAnimationsStyleNormalizer","RendererFactory2","ɵDomRendererFactory2","NgZone","BROWSER_ANIMATIONS_PROVIDERS","ɵWebAnimationsDriver","ɵCssKeyframesDriver","BROWSER_NOOP_ANIMATIONS_PROVIDERS","ɵNoopAnimationDriver","static","BrowserAnimationsModule","BrowserModule","NoopAnimationsModule","Symbol","Le","tt","V"],"sources":["./ngx-common/enums/payment-plan-type.enum.ts","./ngx-common/pipes/numeral/numeral.pipe.ts","./node_modules/is-retina/index.js","./node_modules/ngx-avatar/__ivy_ngcc__/fesm2015/ngx-avatar.js","./node_modules/rxjs/dist/esm/internal/operators/takeWhile.js","./node_modules/rxjs/dist/esm/internal/scheduler/async.js","./node_modules/rxjs/dist/esm/internal/operators/debounceTime.js","./node_modules/rxjs/dist/esm/internal/operators/takeUntil.js","./node_modules/rxjs/dist/esm/internal/scheduler/Action.js","./node_modules/rxjs/dist/esm/internal/scheduler/intervalProvider.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncAction.js","./node_modules/rxjs/dist/esm/internal/scheduler/dateTimestampProvider.js","./node_modules/rxjs/dist/esm/internal/Scheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncScheduler.js","./node_modules/ts-md5/dist/md5.js","./projects/browser-extension/src/app/components/user-plan/user-plan.component.html","./projects/browser-extension/src/app/components/user-plan/user-plan.component.ts","./projects/browser-extension/src/app/enums/user-menu-actions.enum.ts","./projects/browser-extension/src/app/components/user-menu/user-menu.component.html","./projects/browser-extension/src/app/components/user-menu/user-menu.component.ts","./projects/browser-extension/src/app/components/ext-header/ext-header.component.ts","./projects/browser-extension/src/app/components/ext-header/ext-header.component.html","./projects/browser-extension/src/app/components/user-menu/user-menu.module.ts","./node_modules/rxjs/dist/esm/internal/util/Immediate.js","./node_modules/rxjs/dist/esm/internal/scheduler/immediateProvider.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsapAction.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsapScheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/asap.js","./node_modules/rxjs/dist/esm/internal/observable/fromEvent.js","./node_modules/@angular/flex-layout/fesm2020/angular-flex-layout-_private-utils.mjs","./node_modules/@angular/flex-layout/fesm2020/angular-flex-layout-core.mjs","./node_modules/@angular/flex-layout/fesm2020/angular-flex-layout-extended.mjs","./node_modules/@angular/flex-layout/fesm2020/angular-flex-layout-flex.mjs","./node_modules/@angular/flex-layout/fesm2020/angular-flex-layout-grid.mjs","./node_modules/@angular/flex-layout/fesm2020/angular-flex-layout.mjs","./node_modules/@angular/material/fesm2020/progress-spinner.mjs","./ngx-common-v2/components/cls-circular-progress-bar/cls-circular-progress-bar.module.ts","./projects/browser-extension/src/app/components/user-plan/user-plan.module.ts","./projects/browser-extension/src/app/components/ext-header/ext-header.module.ts","./projects/browser-extension/src/app/services/ext-payment.service.ts","./node_modules/@angular/cdk/fesm2020/bidi.mjs","./node_modules/@angular/cdk/fesm2020/coercion.mjs","./node_modules/@angular/cdk/fesm2020/platform.mjs","./node_modules/rxjs/dist/esm/internal/operators/distinctUntilChanged.js","./node_modules/@angular/cdk/fesm2020/observers.mjs","./node_modules/@angular/cdk/fesm2020/a11y.mjs","./node_modules/@angular/cdk/fesm2020/keycodes.mjs","./node_modules/rxjs/dist/esm/internal/operators/skip.js","./node_modules/@angular/cdk/fesm2020/cdk.mjs","./node_modules/@angular/material/fesm2020/core.mjs","./node_modules/@angular/animations/fesm2020/animations.mjs","./node_modules/@angular/animations/fesm2020/browser.mjs","./node_modules/@angular/platform-browser/fesm2020/animations.mjs","./node_modules/@ngneat/until-destroy/fesm2020/ngneat-until-destroy.mjs"],"sourcesContent":["export enum EPaymentPlanType {\r\n\tTrial,\r\n\tSubscription,\r\n\tPrepaid,\r\n\tSharedAccount,\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n\tname: 'numeral',\r\n})\r\nexport class NumeralPipe implements PipeTransform {\r\n\tprivate readonly powers = [\r\n\t\t{ suffix: 'B', value: 10 ** 9 },\r\n\t\t{ suffix: 'M', value: 10 ** 6 },\r\n\t\t{ suffix: 'K', value: 10 ** 3 },\r\n\t];\r\n\t/**\r\n\t * A pipe that transforms a number into a human readable string.\r\n\t * For example: `1024 => 1K`, `1,111,111 => 1.1M`\r\n\t * @param value the number to transform\r\n\t * @param precision decimal percision\r\n\t */\r\n\ttransform(value: any, precision: number = 1) {\r\n\t\tif (!value || isNaN(value)) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\tprecision = Math.min(Math.max(precision, 0), 3);\r\n\t\tconst abs = Math.abs(value);\r\n\t\tconst negative = value < 0;\r\n\t\tlet rounder = 10 ** precision;\r\n\t\tconst power = this.powers.find(elem => abs >= elem.value);\r\n\t\tlet result = abs;\r\n\t\tlet key = '';\r\n\t\tif (power) {\r\n\t\t\tif (result > 100000 && result < 1000000) rounder = 1;\r\n\t\t\tresult = abs / power.value;\r\n\t\t\tif (power.value > 100) {\r\n\t\t\t\tresult = Math.floor(result * 10) / 10;\r\n\t\t\t}\r\n\r\n\t\t\tresult = Math.trunc(result * rounder) / rounder;\r\n\t\t\tkey = power.suffix;\r\n\t\t}\r\n\t\treturn (negative ? '-' : '') + result + key;\r\n\t}\r\n}\r\n","module.exports = function() {\n  var mediaQuery;\n  if (typeof window !== \"undefined\" && window !== null) {\n    mediaQuery = \"(-webkit-min-device-pixel-ratio: 1.25), (min--moz-device-pixel-ratio: 1.25), (-o-min-device-pixel-ratio: 5/4), (min-resolution: 1.25dppx)\";\n    if (window.devicePixelRatio > 1.25) {\n      return true;\n    }\n    if (window.matchMedia && window.matchMedia(mediaQuery).matches) {\n      return true;\n    }\n  }\n  return false;\n};\n","import { Injectable, InjectionToken, Optional, Inject, EventEmitter, Component, ElementRef, Input, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport isRetina from 'is-retina';\nimport { Md5 } from 'ts-md5/dist/md5';\nimport { HttpClient } from '@angular/common/http';\nimport { takeWhile, map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Contract of all async sources.\n * Every async source must implement the processResponse method that extracts the avatar url from the data\n * @abstract\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction AvatarComponent_img_1_Template(rf, ctx) { if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"img\", 3);\n    ɵngcc0.ɵɵlistener(\"error\", function AvatarComponent_img_1_Template_img_error_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.fetchAvatarSource($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"src\", ctx_r0.avatarSrc, ɵngcc0.ɵɵsanitizeUrl)(\"width\", ctx_r0.size)(\"height\", ctx_r0.size)(\"ngStyle\", ctx_r0.avatarStyle);\n} }\nfunction AvatarComponent_ng_template_2_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r5.avatarStyle);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r5.avatarText, \" \");\n} }\nfunction AvatarComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, AvatarComponent_ng_template_2_div_0_Template, 2, 2, \"div\", 4);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.avatarText);\n} }\nclass AsyncSource {\n    /**\n     * @param {?} sourceId\n     */\n    constructor(sourceId) {\n        this.sourceId = sourceId;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nconst AvatarSource = {\n    FACEBOOK: 'facebook',\n    GOOGLE: 'google',\n    TWITTER: 'twitter',\n    VKONTAKTE: 'vkontakte',\n    SKYPE: 'skype',\n    GRAVATAR: 'gravatar',\n    GITHUB: 'github',\n    CUSTOM: 'custom',\n    INITIALS: 'initials',\n    VALUE: 'value',\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n *  Facebook source impelementation.\n *  Fetch avatar source based on facebook identifier\n *  and image size\n */\nclass Facebook {\n    /**\n     * @param {?} sourceId\n     */\n    constructor(sourceId) {\n        this.sourceId = sourceId;\n        this.sourceType = AvatarSource.FACEBOOK;\n    }\n    /**\n     * @param {?} size\n     * @return {?}\n     */\n    getAvatar(size) {\n        return ('https://graph.facebook.com/' +\n            `${this.sourceId}/picture?width=${size}&height=${size}`);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n *  Twitter source impelementation.\n *  Fetch avatar source based on google identifier\n *  and image size\n */\nclass Twitter {\n    /**\n     * @param {?} sourceId\n     */\n    constructor(sourceId) {\n        this.sourceId = sourceId;\n        this.sourceType = AvatarSource.TWITTER;\n    }\n    /**\n     * @param {?} size\n     * @return {?}\n     */\n    getAvatar(size) {\n        /** @type {?} */\n        const twitterImgSize = this.getImageSize(size);\n        return `https://twitter.com/${this.sourceId}/profile_image?size=${twitterImgSize}`;\n    }\n    /**\n     * @private\n     * @param {?} size\n     * @return {?}\n     */\n    getImageSize(size) {\n        if (size <= 24) {\n            return 'mini';\n        }\n        if (size <= 48) {\n            return 'normal';\n        }\n        if (size <= 73) {\n            return 'bigger';\n        }\n        return 'original';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n *  Google source impelementation.\n *  Fetch avatar source based on google identifier\n *  and image size\n */\nclass Google extends AsyncSource {\n    /**\n     * @param {?} sourceId\n     */\n    constructor(sourceId) {\n        super(sourceId);\n        this.sourceType = AvatarSource.GOOGLE;\n    }\n    /**\n     * @return {?}\n     */\n    getAvatar() {\n        return `https://picasaweb.google.com/data/entry/api/user/${this.sourceId}?alt=json`;\n    }\n    /**\n     * Extract google avatar from json data\n     * @param {?} data\n     * @param {?=} size\n     * @return {?}\n     */\n    processResponse(data, size) {\n        /** @type {?} */\n        const avatarSrc = data.entry.gphoto$thumbnail.$t;\n        if (avatarSrc) {\n            return avatarSrc.replace('s64', 's' + size);\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n *  Custom source impelementation.\n *  return custom image as an avatar\n *\n */\nclass Custom {\n    /**\n     * @param {?} sourceId\n     */\n    constructor(sourceId) {\n        this.sourceId = sourceId;\n        this.sourceType = AvatarSource.CUSTOM;\n    }\n    /**\n     * @return {?}\n     */\n    getAvatar() {\n        return this.sourceId;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Initials source impelementation.\n * return the initals of the given value\n */\nclass Initials {\n    /**\n     * @param {?} sourceId\n     */\n    constructor(sourceId) {\n        this.sourceId = sourceId;\n        this.sourceType = AvatarSource.INITIALS;\n    }\n    /**\n     * @param {?} initialsSize\n     * @return {?}\n     */\n    getAvatar(initialsSize) {\n        return this.getInitials(this.sourceId, initialsSize);\n    }\n    /**\n     * Returns the initial letters of a name in a string.\n     * @private\n     * @param {?} name\n     * @param {?} size\n     * @return {?}\n     */\n    getInitials(name, size) {\n        name = name ? name.trim() : null;\n        if (!name) {\n            return '';\n        }\n        /** @type {?} */\n        const initials = name.split(' ');\n        if (size && size < initials.length) {\n            return this.constructInitials(initials.slice(0, size));\n        }\n        else {\n            return this.constructInitials(initials);\n        }\n    }\n    /**\n     * Iterates a person's name string to get the initials of each word in uppercase.\n     * @private\n     * @param {?} elements\n     * @return {?}\n     */\n    constructInitials(elements) {\n        if (!elements || !elements.length) {\n            return '';\n        }\n        return elements\n            .filter((/**\n         * @param {?} element\n         * @return {?}\n         */\n        element => element && element.length > 0))\n            .map((/**\n         * @param {?} element\n         * @return {?}\n         */\n        element => element[0].toUpperCase()))\n            .join('');\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n *  Gravatar source impelementation.\n *  Fetch avatar source based on gravatar email\n */\nclass Gravatar {\n    /**\n     * @param {?} value\n     */\n    constructor(value) {\n        this.value = value;\n        this.sourceType = AvatarSource.GRAVATAR;\n        this.sourceId = value.match('^[a-f0-9]{32}$')\n            ? value\n            : Md5.hashStr(value).toString();\n    }\n    /**\n     * @param {?} size\n     * @return {?}\n     */\n    getAvatar(size) {\n        /** @type {?} */\n        const avatarSize = isRetina() ? size * 2 : size;\n        return `https://secure.gravatar.com/avatar/${this.sourceId}?s=${avatarSize}&d=404`;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n *  Skype source impelementation.\n *  Fetch avatar source based on skype identifier\n */\nclass Skype {\n    /**\n     * @param {?} sourceId\n     */\n    constructor(sourceId) {\n        this.sourceId = sourceId;\n        this.sourceType = AvatarSource.SKYPE;\n    }\n    /**\n     * @return {?}\n     */\n    getAvatar() {\n        return `https://api.skype.com/users/${this.sourceId}/profile/avatar`;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n *  Value source impelementation.\n *  return the value as avatar\n */\nclass Value {\n    /**\n     * @param {?} sourceId\n     */\n    constructor(sourceId) {\n        this.sourceId = sourceId;\n        this.sourceType = AvatarSource.VALUE;\n    }\n    /**\n     * @return {?}\n     */\n    getAvatar() {\n        return this.sourceId;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n *  Vkontakte source impelementation.\n *  Fetch avatar source based on vkontakte identifier\n *  and image size\n * @type {?}\n */\nconst apiVersion = 5.8;\nclass Vkontakte extends AsyncSource {\n    /**\n     * @param {?} sourceId\n     */\n    constructor(sourceId) {\n        super(sourceId);\n        this.sourceType = AvatarSource.VKONTAKTE;\n    }\n    /**\n     * @param {?} size\n     * @return {?}\n     */\n    getAvatar(size) {\n        /** @type {?} */\n        const imgSize = this.getImageSize(size);\n        return `https://api.vk.com/method/users.get?user_id=${this.sourceId}&v=${apiVersion}&fields=${imgSize}`;\n    }\n    /**\n     * extract vkontakte avatar from json data\n     * @param {?} data\n     * @return {?}\n     */\n    processResponse(data) {\n        // avatar key property is the size used to generate avatar url\n        // size property is always the last key in the response object\n        /** @type {?} */\n        const sizeProperty = Object.keys(data['response'][0]).pop();\n        // return avatar src\n        return data['response'][0][sizeProperty];\n    }\n    /**\n     * Returns image size related to vkontakte API\n     * @private\n     * @param {?} size\n     * @return {?}\n     */\n    getImageSize(size) {\n        if (size <= 50) {\n            return 'photo_50';\n        }\n        if (size <= 100) {\n            return 'photo_100';\n        }\n        if (size <= 200) {\n            return 'photo_200';\n        }\n        return 'photo_max';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n *  Github source impelementation.\n *  Fetch avatar source based on github identifier\n */\nclass Github extends AsyncSource {\n    /**\n     * @param {?} sourceId\n     */\n    constructor(sourceId) {\n        super(sourceId);\n        this.sourceType = AvatarSource.GITHUB;\n    }\n    /**\n     * @return {?}\n     */\n    getAvatar() {\n        return `https://api.github.com/users/${this.sourceId}`;\n    }\n    /**\n     * extract github avatar from json data\n     * @param {?} data\n     * @param {?=} size\n     * @return {?}\n     */\n    processResponse(data, size) {\n        if (size) {\n            return `${data.avatar_url}&s=${size}`;\n        }\n        return data.avatar_url;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Factory class that implements factory method pattern.\n * Used to create Source implementation class based\n * on the source Type\n */\nclass SourceFactory {\n    constructor() {\n        this.sources = {};\n        this.sources[AvatarSource.FACEBOOK] = Facebook;\n        this.sources[AvatarSource.TWITTER] = Twitter;\n        this.sources[AvatarSource.GOOGLE] = Google;\n        this.sources[AvatarSource.SKYPE] = Skype;\n        this.sources[AvatarSource.GRAVATAR] = Gravatar;\n        this.sources[AvatarSource.CUSTOM] = Custom;\n        this.sources[AvatarSource.INITIALS] = Initials;\n        this.sources[AvatarSource.VALUE] = Value;\n        this.sources[AvatarSource.VKONTAKTE] = Vkontakte;\n        this.sources[AvatarSource.GITHUB] = Github;\n    }\n    /**\n     * @param {?} sourceType\n     * @param {?} sourceValue\n     * @return {?}\n     */\n    newInstance(sourceType, sourceValue) {\n        return new this.sources[sourceType](sourceValue);\n    }\n}\nSourceFactory.ɵfac = function SourceFactory_Factory(t) { return new (t || SourceFactory)(); };\nSourceFactory.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: SourceFactory, factory: SourceFactory.ɵfac });\n/** @nocollapse */\nSourceFactory.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SourceFactory, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Token used to inject the AvatarConfig object\n * @type {?}\n */\nconst AVATAR_CONFIG = new InjectionToken('avatar.config');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AvatarConfigService {\n    /**\n     * @param {?} userConfig\n     */\n    constructor(userConfig) {\n        this.userConfig = userConfig;\n    }\n    /**\n     * @param {?} defaultSources\n     * @return {?}\n     */\n    getAvatarSources(defaultSources) {\n        if (this.userConfig &&\n            this.userConfig.sourcePriorityOrder &&\n            this.userConfig.sourcePriorityOrder.length) {\n            /** @type {?} */\n            const uniqueSources = [...new Set(this.userConfig.sourcePriorityOrder)];\n            /** @type {?} */\n            const validSources = uniqueSources.filter((/**\n             * @param {?} source\n             * @return {?}\n             */\n            source => defaultSources.includes(source)));\n            return [\n                ...validSources,\n                ...defaultSources.filter((/**\n                 * @param {?} source\n                 * @return {?}\n                 */\n                source => !validSources.includes(source)))\n            ];\n        }\n        return defaultSources;\n    }\n    /**\n     * @param {?} defaultColors\n     * @return {?}\n     */\n    getAvatarColors(defaultColors) {\n        return ((this.userConfig &&\n            this.userConfig.colors &&\n            this.userConfig.colors.length &&\n            this.userConfig.colors) ||\n            defaultColors);\n    }\n}\nAvatarConfigService.ɵfac = function AvatarConfigService_Factory(t) { return new (t || AvatarConfigService)(ɵngcc0.ɵɵinject(AVATAR_CONFIG, 8)); };\nAvatarConfigService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: AvatarConfigService, factory: AvatarConfigService.ɵfac });\n/** @nocollapse */\nAvatarConfigService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [AVATAR_CONFIG,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AvatarConfigService, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [AVATAR_CONFIG]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * list of Supported avatar sources\n * @type {?}\n */\nconst defaultSources = [\n    AvatarSource.FACEBOOK,\n    AvatarSource.GOOGLE,\n    AvatarSource.TWITTER,\n    AvatarSource.VKONTAKTE,\n    AvatarSource.SKYPE,\n    AvatarSource.GRAVATAR,\n    AvatarSource.GITHUB,\n    AvatarSource.CUSTOM,\n    AvatarSource.INITIALS,\n    AvatarSource.VALUE\n];\n/**\n * list of default colors\n * @type {?}\n */\nconst defaultColors = [\n    '#1abc9c',\n    '#3498db',\n    '#f1c40f',\n    '#8e44ad',\n    '#e74c3c',\n    '#d35400',\n    '#2c3e50',\n    '#7f8c8d'\n];\n/**\n * Provides utilities methods related to Avatar component\n */\nclass AvatarService {\n    /**\n     * @param {?} http\n     * @param {?} avatarConfigService\n     */\n    constructor(http, avatarConfigService) {\n        this.http = http;\n        this.avatarConfigService = avatarConfigService;\n        this.avatarSources = defaultSources;\n        this.avatarColors = defaultColors;\n        this.overrideAvatarSources();\n        this.overrideAvatarColors();\n    }\n    /**\n     * @param {?} avatarUrl\n     * @return {?}\n     */\n    fetchAvatar(avatarUrl) {\n        return this.http.get(avatarUrl);\n    }\n    /**\n     * @param {?} avatarText\n     * @return {?}\n     */\n    getRandomColor(avatarText) {\n        if (!avatarText) {\n            return 'transparent';\n        }\n        /** @type {?} */\n        const asciiCodeSum = this.calculateAsciiCode(avatarText);\n        return this.avatarColors[asciiCodeSum % this.avatarColors.length];\n    }\n    /**\n     * @param {?} sourceType1\n     * @param {?} sourceType2\n     * @return {?}\n     */\n    copmareSources(sourceType1, sourceType2) {\n        return (this.getSourcePriority(sourceType1) - this.getSourcePriority(sourceType2));\n    }\n    /**\n     * @param {?} source\n     * @return {?}\n     */\n    isSource(source) {\n        return this.avatarSources.includes((/** @type {?} */ (source)));\n    }\n    /**\n     * @param {?} sourceType\n     * @return {?}\n     */\n    isTextAvatar(sourceType) {\n        return [AvatarSource.INITIALS, AvatarSource.VALUE].includes(sourceType);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    overrideAvatarSources() {\n        this.avatarSources = this.avatarConfigService.getAvatarSources(defaultSources);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    overrideAvatarColors() {\n        this.avatarColors = this.avatarConfigService.getAvatarColors(defaultColors);\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    calculateAsciiCode(value) {\n        return value\n            .split('')\n            .map((/**\n         * @param {?} letter\n         * @return {?}\n         */\n        letter => letter.charCodeAt(0)))\n            .reduce((/**\n         * @param {?} previous\n         * @param {?} current\n         * @return {?}\n         */\n        (previous, current) => previous + current));\n    }\n    /**\n     * @private\n     * @param {?} sourceType\n     * @return {?}\n     */\n    getSourcePriority(sourceType) {\n        return this.avatarSources.indexOf(sourceType);\n    }\n}\nAvatarService.ɵfac = function AvatarService_Factory(t) { return new (t || AvatarService)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient), ɵngcc0.ɵɵinject(AvatarConfigService)); };\nAvatarService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: AvatarService, factory: AvatarService.ɵfac });\n/** @nocollapse */\nAvatarService.ctorParameters = () => [\n    { type: HttpClient },\n    { type: AvatarConfigService }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AvatarService, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc1.HttpClient }, { type: AvatarConfigService }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Universal avatar component that\n * generates avatar from different sources\n *\n * export\n * class AvatarComponent\n * implements {OnChanges}\n */\nclass AvatarComponent {\n    /**\n     * @param {?} elementRef\n     * @param {?} sourceFactory\n     * @param {?} avatarService\n     */\n    constructor(elementRef, sourceFactory, avatarService) {\n        this.elementRef = elementRef;\n        this.sourceFactory = sourceFactory;\n        this.avatarService = avatarService;\n        this.round = true;\n        this.size = 50;\n        this.textSizeRatio = 3;\n        this.fgColor = '#FFF';\n        this.style = {};\n        this.cornerRadius = 0;\n        this.clickOnAvatar = new EventEmitter();\n        this.isAlive = true;\n        this.avatarStyle = {};\n        this.hostStyle = {};\n        this.currentSource = 0;\n        this.sources = Array();\n    }\n    /**\n     * @return {?}\n     */\n    onAvatarClicked() {\n        this.clickOnAvatar.emit(this.sources[this.currentSource - 1]);\n    }\n    /**\n     * Detect inputs change\n     *\n     * param {{ [propKey: string]: SimpleChange }} changes\n     *\n     * memberof AvatarComponent\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        for (const propName in changes) {\n            if (this.avatarService.isSource(propName) &&\n                changes[propName].currentValue) {\n                /** @type {?} */\n                const currentValue = changes[propName].currentValue;\n                this.addSource(AvatarSource[propName.toUpperCase()], currentValue);\n            }\n        }\n        // reintialize the avatar component when a source property value has changed\n        // the fallback system must be re-invoked with the new values.\n        this.initializeAvatar();\n    }\n    /**\n     * Fetch avatar source\n     *\n     * param {any} event\n     *\n     * memberOf AvatarComponent\n     * @param {?=} event\n     * @return {?}\n     */\n    fetchAvatarSource(event) {\n        /** @type {?} */\n        const avatarSource = this.sources[this.currentSource];\n        if (!avatarSource) {\n            return;\n        }\n        if (this.avatarService.isTextAvatar(avatarSource.sourceType)) {\n            this.buildTextAvatar(avatarSource);\n            // TODO: check if this is needed\n            this.avatarSrc = undefined;\n        }\n        else {\n            this.buildImageAvatar(avatarSource);\n        }\n        this.currentSource++;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.isAlive = false;\n    }\n    /**\n     * Initialize the avatar component and its fallback system\n     * @private\n     * @return {?}\n     */\n    initializeAvatar() {\n        this.currentSource = 0;\n        if (this.sources.length > 0 && this.sources[this.currentSource]) {\n            this.sortAvatarSources();\n            this.fetchAvatarSource();\n            this.hostStyle = {\n                width: this.size + 'px',\n                height: this.size + 'px'\n            };\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    sortAvatarSources() {\n        this.sources.sort((/**\n         * @param {?} source1\n         * @param {?} source2\n         * @return {?}\n         */\n        (source1, source2) => this.avatarService.copmareSources(source1.sourceType, source2.sourceType)));\n    }\n    /**\n     * @private\n     * @param {?} avatarSource\n     * @return {?}\n     */\n    buildTextAvatar(avatarSource) {\n        this.avatarText = avatarSource.getAvatar(this.initialsSize);\n        this.avatarStyle = this.getInitialsStyle(avatarSource.sourceId);\n    }\n    /**\n     * @private\n     * @param {?} avatarSource\n     * @return {?}\n     */\n    buildImageAvatar(avatarSource) {\n        this.avatarStyle = this.getImageStyle();\n        if (avatarSource instanceof AsyncSource) {\n            this.fetchAndProcessAsyncAvatar(avatarSource);\n        }\n        else {\n            this.avatarSrc = avatarSource.getAvatar(this.size);\n        }\n    }\n    /**\n     *\n     * returns initials style\n     *\n     * memberOf AvatarComponent\n     * @private\n     * @param {?} avatarValue\n     * @return {?}\n     */\n    getInitialsStyle(avatarValue) {\n        return Object.assign({ textAlign: 'center', borderRadius: this.round ? '100%' : this.cornerRadius + 'px', border: this.borderColor ? '1px solid ' + this.borderColor : '', textTransform: 'uppercase', color: this.fgColor, backgroundColor: this.bgColor\n                ? this.bgColor\n                : this.avatarService.getRandomColor(avatarValue), font: Math.floor(this.size / this.textSizeRatio) +\n                'px Helvetica, Arial, sans-serif', lineHeight: this.size + 'px' }, this.style);\n    }\n    /**\n     *\n     * returns image style\n     *\n     * memberOf AvatarComponent\n     * @private\n     * @return {?}\n     */\n    getImageStyle() {\n        return Object.assign({ maxWidth: '100%', borderRadius: this.round ? '50%' : this.cornerRadius + 'px', border: this.borderColor ? '1px solid ' + this.borderColor : '', width: this.size, height: this.size }, this.style);\n    }\n    /**\n     * Fetch avatar image asynchrounsly.\n     *\n     * param {Source} source represents avatar source\n     * memberof AvatarComponent\n     * @private\n     * @param {?} source\n     * @return {?}\n     */\n    fetchAndProcessAsyncAvatar(source) {\n        this.avatarService\n            .fetchAvatar(source.getAvatar())\n            .pipe(takeWhile((/**\n         * @return {?}\n         */\n        () => this.isAlive)), map((/**\n         * @param {?} response\n         * @return {?}\n         */\n        response => source.processResponse(response, this.size))))\n            .subscribe((/**\n         * @param {?} avatarSrc\n         * @return {?}\n         */\n        avatarSrc => (this.avatarSrc = avatarSrc)), (/**\n         * @param {?} err\n         * @return {?}\n         */\n        err => {\n            console.error(`ngx-avatar: error while fetching ${source.sourceType} avatar `);\n        }));\n    }\n    /**\n     * Add avatar source\n     *\n     * param sourceType avatar source type e.g facebook,twitter, etc.\n     * param sourceValue  source value e.g facebookId value, etc.\n     * @private\n     * @param {?} sourceType\n     * @param {?} sourceValue\n     * @return {?}\n     */\n    addSource(sourceType, sourceValue) {\n        if (!this.isSourceExist(sourceType)) {\n            this.sources.push(this.sourceFactory.newInstance(sourceType, sourceValue));\n        }\n        else {\n            /** @type {?} */\n            const index = this.sources.findIndex((/**\n             * @param {?} source\n             * @return {?}\n             */\n            source => source.sourceType === sourceType));\n            this.sources[index].sourceId = sourceValue;\n        }\n    }\n    /**\n     * @private\n     * @param {?} avatarSource\n     * @return {?}\n     */\n    isSourceExist(avatarSource) {\n        return this.sources.map((/**\n         * @param {?} source\n         * @return {?}\n         */\n        source => source.sourceType)).includes(avatarSource);\n    }\n}\nAvatarComponent.ɵfac = function AvatarComponent_Factory(t) { return new (t || AvatarComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(SourceFactory), ɵngcc0.ɵɵdirectiveInject(AvatarService)); };\nAvatarComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AvatarComponent, selectors: [[\"ngx-avatar\"]], inputs: { round: \"round\", size: \"size\", textSizeRatio: \"textSizeRatio\", fgColor: \"fgColor\", style: \"style\", cornerRadius: \"cornerRadius\", bgColor: \"bgColor\", borderColor: \"borderColor\", facebook: [\"facebookId\", \"facebook\"], twitter: [\"twitterId\", \"twitter\"], google: [\"googleId\", \"google\"], vkontakte: [\"vkontakteId\", \"vkontakte\"], skype: [\"skypeId\", \"skype\"], gravatar: [\"gravatarId\", \"gravatar\"], github: [\"githubId\", \"github\"], custom: [\"src\", \"custom\"], initials: [\"name\", \"initials\"], value: \"value\", placeholder: \"placeholder\", initialsSize: \"initialsSize\" }, outputs: { clickOnAvatar: \"clickOnAvatar\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 4, vars: 3, consts: [[1, \"avatar-container\", 3, \"ngStyle\", \"click\"], [\"class\", \"avatar-content\", 3, \"src\", \"width\", \"height\", \"ngStyle\", \"error\", 4, \"ngIf\", \"ngIfElse\"], [\"textAvatar\", \"\"], [1, \"avatar-content\", 3, \"src\", \"width\", \"height\", \"ngStyle\", \"error\"], [\"class\", \"avatar-content\", 3, \"ngStyle\", 4, \"ngIf\"], [1, \"avatar-content\", 3, \"ngStyle\"]], template: function AvatarComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function AvatarComponent_Template_div_click_0_listener() { return ctx.onAvatarClicked(); });\n        ɵngcc0.ɵɵtemplate(1, AvatarComponent_img_1_Template, 1, 4, \"img\", 1);\n        ɵngcc0.ɵɵtemplate(2, AvatarComponent_ng_template_2_Template, 1, 1, \"ng-template\", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r1 = ɵngcc0.ɵɵreference(3);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.hostStyle);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.avatarSrc)(\"ngIfElse\", _r1);\n    } }, directives: [ɵngcc2.NgStyle, ɵngcc2.NgIf], styles: [\"[_nghost-%COMP%] {\\n        border-radius: '50%';\\n      }\"] });\n/** @nocollapse */\nAvatarComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: SourceFactory },\n    { type: AvatarService }\n];\nAvatarComponent.propDecorators = {\n    round: [{ type: Input }],\n    size: [{ type: Input }],\n    textSizeRatio: [{ type: Input }],\n    bgColor: [{ type: Input }],\n    fgColor: [{ type: Input }],\n    borderColor: [{ type: Input }],\n    style: [{ type: Input }],\n    cornerRadius: [{ type: Input }],\n    facebook: [{ type: Input, args: ['facebookId',] }],\n    twitter: [{ type: Input, args: ['twitterId',] }],\n    google: [{ type: Input, args: ['googleId',] }],\n    vkontakte: [{ type: Input, args: ['vkontakteId',] }],\n    skype: [{ type: Input, args: ['skypeId',] }],\n    gravatar: [{ type: Input, args: ['gravatarId',] }],\n    github: [{ type: Input, args: ['githubId',] }],\n    custom: [{ type: Input, args: ['src',] }],\n    initials: [{ type: Input, args: ['name',] }],\n    value: [{ type: Input, args: ['value',] }],\n    placeholder: [{ type: Input, args: ['placeholder',] }],\n    initialsSize: [{ type: Input, args: ['initialsSize',] }],\n    clickOnAvatar: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AvatarComponent, [{\n        type: Component,\n        args: [{\n                // tslint:disable-next-line:component-selector\n                selector: 'ngx-avatar',\n                template: `\n    <div\n      (click)=\"onAvatarClicked()\"\n      class=\"avatar-container\"\n      [ngStyle]=\"hostStyle\"\n    >\n      <img\n        *ngIf=\"avatarSrc; else textAvatar\"\n        [src]=\"avatarSrc\"\n        [width]=\"size\"\n        [height]=\"size\"\n        [ngStyle]=\"avatarStyle\"\n        (error)=\"fetchAvatarSource($event)\"\n        class=\"avatar-content\"\n      />\n      <ng-template #textAvatar>\n        <div *ngIf=\"avatarText\" class=\"avatar-content\" [ngStyle]=\"avatarStyle\">\n          {{ avatarText }}\n        </div>\n      </ng-template>\n    </div>\n  `,\n                styles: [`\n      :host {\n        border-radius: '50%';\n      }\n    `]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: SourceFactory }, { type: AvatarService }]; }, { round: [{\n            type: Input\n        }], size: [{\n            type: Input\n        }], textSizeRatio: [{\n            type: Input\n        }], fgColor: [{\n            type: Input\n        }], style: [{\n            type: Input\n        }], cornerRadius: [{\n            type: Input\n        }], clickOnAvatar: [{\n            type: Output\n        }], bgColor: [{\n            type: Input\n        }], borderColor: [{\n            type: Input\n        }], facebook: [{\n            type: Input,\n            args: ['facebookId']\n        }], twitter: [{\n            type: Input,\n            args: ['twitterId']\n        }], google: [{\n            type: Input,\n            args: ['googleId']\n        }], vkontakte: [{\n            type: Input,\n            args: ['vkontakteId']\n        }], skype: [{\n            type: Input,\n            args: ['skypeId']\n        }], gravatar: [{\n            type: Input,\n            args: ['gravatarId']\n        }], github: [{\n            type: Input,\n            args: ['githubId']\n        }], custom: [{\n            type: Input,\n            args: ['src']\n        }], initials: [{\n            type: Input,\n            args: ['name']\n        }], value: [{\n            type: Input,\n            args: ['value']\n        }], placeholder: [{\n            type: Input,\n            args: ['placeholder']\n        }], initialsSize: [{\n            type: Input,\n            args: ['initialsSize']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AvatarModule {\n    /**\n     * @param {?=} avatarConfig\n     * @return {?}\n     */\n    static forRoot(avatarConfig) {\n        return {\n            ngModule: AvatarModule,\n            providers: [\n                { provide: AVATAR_CONFIG, useValue: avatarConfig ? avatarConfig : {} }\n            ]\n        };\n    }\n}\nAvatarModule.ɵfac = function AvatarModule_Factory(t) { return new (t || AvatarModule)(); };\nAvatarModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: AvatarModule });\nAvatarModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [SourceFactory, AvatarService, AvatarConfigService], imports: [[CommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AvatarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [AvatarComponent],\n                providers: [SourceFactory, AvatarService, AvatarConfigService],\n                exports: [AvatarComponent]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AvatarModule, { declarations: function () { return [AvatarComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [AvatarComponent]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { AvatarComponent, AvatarModule, AvatarService, AvatarSource, defaultColors, defaultSources, SourceFactory as ɵa, AvatarConfigService as ɵb, AVATAR_CONFIG as ɵc };\n\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function takeWhile(predicate, inclusive = false) {\n    return operate((source, subscriber) => {\n        let index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            const result = predicate(value, index++);\n            (result || inclusive) && subscriber.next(value);\n            !result && subscriber.complete();\n        }));\n    });\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\nexport const async = asyncScheduler;\n","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler = asyncScheduler) {\n    return operate((source, subscriber) => {\n        let activeTask = null;\n        let lastValue = null;\n        let lastTime = null;\n        const emit = () => {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                const value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            const targetTime = lastTime + dueTime;\n            const now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, () => {\n            emit();\n            subscriber.complete();\n        }, undefined, () => {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\nexport function takeUntil(notifier) {\n    return operate((source, subscriber) => {\n        innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n        !subscriber.closed && source.subscribe(subscriber);\n    });\n}\n","import { Subscription } from '../Subscription';\nexport class Action extends Subscription {\n    constructor(scheduler, work) {\n        super();\n    }\n    schedule(state, delay = 0) {\n        return this;\n    }\n}\n","export const intervalProvider = {\n    setInterval(handler, timeout, ...args) {\n        const { delegate } = intervalProvider;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {\n            return delegate.setInterval(handler, timeout, ...args);\n        }\n        return setInterval(handler, timeout, ...args);\n    },\n    clearInterval(handle) {\n        const { delegate } = intervalProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);\n    },\n    delegate: undefined,\n};\n","import { Action } from './Action';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        var _a;\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = (_a = this.id) !== null && _a !== void 0 ? _a : this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, _id, delay = 0) {\n        return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(_scheduler, id, delay = 0) {\n        if (delay != null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        if (id != null) {\n            intervalProvider.clearInterval(id);\n        }\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, _delay) {\n        let errored = false;\n        let errorValue;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = e ? e : new Error('Scheduled action threw falsy error');\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    unsubscribe() {\n        if (!this.closed) {\n            const { id, scheduler } = this;\n            const { actions } = scheduler;\n            this.work = this.state = this.scheduler = null;\n            this.pending = false;\n            arrRemove(actions, this);\n            if (id != null) {\n                this.id = this.recycleAsyncId(scheduler, id, null);\n            }\n            this.delay = null;\n            super.unsubscribe();\n        }\n    }\n}\n","export const dateTimestampProvider = {\n    now() {\n        return (dateTimestampProvider.delegate || Date).now();\n    },\n    delegate: undefined,\n};\n","import { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class Scheduler {\n    constructor(schedulerActionCtor, now = Scheduler.now) {\n        this.schedulerActionCtor = schedulerActionCtor;\n        this.now = now;\n    }\n    schedule(work, delay = 0, state) {\n        return new this.schedulerActionCtor(this, work).schedule(state, delay);\n    }\n}\nScheduler.now = dateTimestampProvider.now;\n","import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        super(SchedulerAction, now);\n        this.actions = [];\n        this._active = false;\n    }\n    flush(action) {\n        const { actions } = this;\n        if (this._active) {\n            actions.push(action);\n            return;\n        }\n        let error;\n        this._active = true;\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions.shift()));\n        this._active = false;\n        if (error) {\n            while ((action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","\"use strict\";\n/*\n\nTypeScript Md5\n==============\n\nBased on work by\n* Joseph Myers: http://www.myersdaily.org/joseph/javascript/md5-text.html\n* André Cruz: https://github.com/satazor/SparkMD5\n* Raymond Hill: https://github.com/gorhill/yamd5.js\n\nEffectively a TypeScrypt re-write of Raymond Hill JS Library\n\nThe MIT License (MIT)\n\nCopyright (C) 2014 Raymond Hill\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n                    Version 2, December 2004\n\n Copyright (C) 2015 André Cruz <amdfcruz@gmail.com>\n\n Everyone is permitted to copy and distribute verbatim or modified\n copies of this license document, and changing it is allowed as long\n as the name is changed.\n\n            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. You just DO WHAT THE FUCK YOU WANT TO.\n\n\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Md5 = /** @class */ (function () {\n    function Md5() {\n        this._state = new Int32Array(4);\n        this._buffer = new ArrayBuffer(68);\n        this._buffer8 = new Uint8Array(this._buffer, 0, 68);\n        this._buffer32 = new Uint32Array(this._buffer, 0, 17);\n        this.start();\n    }\n    Md5.hashStr = function (str, raw) {\n        if (raw === void 0) { raw = false; }\n        return this.onePassHasher\n            .start()\n            .appendStr(str)\n            .end(raw);\n    };\n    Md5.hashAsciiStr = function (str, raw) {\n        if (raw === void 0) { raw = false; }\n        return this.onePassHasher\n            .start()\n            .appendAsciiStr(str)\n            .end(raw);\n    };\n    Md5._hex = function (x) {\n        var hc = Md5.hexChars;\n        var ho = Md5.hexOut;\n        var n;\n        var offset;\n        var j;\n        var i;\n        for (i = 0; i < 4; i += 1) {\n            offset = i * 8;\n            n = x[i];\n            for (j = 0; j < 8; j += 2) {\n                ho[offset + 1 + j] = hc.charAt(n & 0x0F);\n                n >>>= 4;\n                ho[offset + 0 + j] = hc.charAt(n & 0x0F);\n                n >>>= 4;\n            }\n        }\n        return ho.join('');\n    };\n    Md5._md5cycle = function (x, k) {\n        var a = x[0];\n        var b = x[1];\n        var c = x[2];\n        var d = x[3];\n        // ff()\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        // gg()\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        // hh()\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        // ii()\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    };\n    Md5.prototype.start = function () {\n        this._dataLength = 0;\n        this._bufferLength = 0;\n        this._state.set(Md5.stateIdentity);\n        return this;\n    };\n    // Char to code point to to array conversion:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\n    // #Example.3A_Fixing_charCodeAt_to_handle_non-Basic-Multilingual-Plane_characters_if_their_presence_earlier_in_the_string_is_unknown\n    Md5.prototype.appendStr = function (str) {\n        var buf8 = this._buffer8;\n        var buf32 = this._buffer32;\n        var bufLen = this._bufferLength;\n        var code;\n        var i;\n        for (i = 0; i < str.length; i += 1) {\n            code = str.charCodeAt(i);\n            if (code < 128) {\n                buf8[bufLen++] = code;\n            }\n            else if (code < 0x800) {\n                buf8[bufLen++] = (code >>> 6) + 0xC0;\n                buf8[bufLen++] = code & 0x3F | 0x80;\n            }\n            else if (code < 0xD800 || code > 0xDBFF) {\n                buf8[bufLen++] = (code >>> 12) + 0xE0;\n                buf8[bufLen++] = (code >>> 6 & 0x3F) | 0x80;\n                buf8[bufLen++] = (code & 0x3F) | 0x80;\n            }\n            else {\n                code = ((code - 0xD800) * 0x400) + (str.charCodeAt(++i) - 0xDC00) + 0x10000;\n                if (code > 0x10FFFF) {\n                    throw new Error('Unicode standard supports code points up to U+10FFFF');\n                }\n                buf8[bufLen++] = (code >>> 18) + 0xF0;\n                buf8[bufLen++] = (code >>> 12 & 0x3F) | 0x80;\n                buf8[bufLen++] = (code >>> 6 & 0x3F) | 0x80;\n                buf8[bufLen++] = (code & 0x3F) | 0x80;\n            }\n            if (bufLen >= 64) {\n                this._dataLength += 64;\n                Md5._md5cycle(this._state, buf32);\n                bufLen -= 64;\n                buf32[0] = buf32[16];\n            }\n        }\n        this._bufferLength = bufLen;\n        return this;\n    };\n    Md5.prototype.appendAsciiStr = function (str) {\n        var buf8 = this._buffer8;\n        var buf32 = this._buffer32;\n        var bufLen = this._bufferLength;\n        var i;\n        var j = 0;\n        for (;;) {\n            i = Math.min(str.length - j, 64 - bufLen);\n            while (i--) {\n                buf8[bufLen++] = str.charCodeAt(j++);\n            }\n            if (bufLen < 64) {\n                break;\n            }\n            this._dataLength += 64;\n            Md5._md5cycle(this._state, buf32);\n            bufLen = 0;\n        }\n        this._bufferLength = bufLen;\n        return this;\n    };\n    Md5.prototype.appendByteArray = function (input) {\n        var buf8 = this._buffer8;\n        var buf32 = this._buffer32;\n        var bufLen = this._bufferLength;\n        var i;\n        var j = 0;\n        for (;;) {\n            i = Math.min(input.length - j, 64 - bufLen);\n            while (i--) {\n                buf8[bufLen++] = input[j++];\n            }\n            if (bufLen < 64) {\n                break;\n            }\n            this._dataLength += 64;\n            Md5._md5cycle(this._state, buf32);\n            bufLen = 0;\n        }\n        this._bufferLength = bufLen;\n        return this;\n    };\n    Md5.prototype.getState = function () {\n        var self = this;\n        var s = self._state;\n        return {\n            buffer: String.fromCharCode.apply(null, self._buffer8),\n            buflen: self._bufferLength,\n            length: self._dataLength,\n            state: [s[0], s[1], s[2], s[3]]\n        };\n    };\n    Md5.prototype.setState = function (state) {\n        var buf = state.buffer;\n        var x = state.state;\n        var s = this._state;\n        var i;\n        this._dataLength = state.length;\n        this._bufferLength = state.buflen;\n        s[0] = x[0];\n        s[1] = x[1];\n        s[2] = x[2];\n        s[3] = x[3];\n        for (i = 0; i < buf.length; i += 1) {\n            this._buffer8[i] = buf.charCodeAt(i);\n        }\n    };\n    Md5.prototype.end = function (raw) {\n        if (raw === void 0) { raw = false; }\n        var bufLen = this._bufferLength;\n        var buf8 = this._buffer8;\n        var buf32 = this._buffer32;\n        var i = (bufLen >> 2) + 1;\n        var dataBitsLen;\n        this._dataLength += bufLen;\n        buf8[bufLen] = 0x80;\n        buf8[bufLen + 1] = buf8[bufLen + 2] = buf8[bufLen + 3] = 0;\n        buf32.set(Md5.buffer32Identity.subarray(i), i);\n        if (bufLen > 55) {\n            Md5._md5cycle(this._state, buf32);\n            buf32.set(Md5.buffer32Identity);\n        }\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        dataBitsLen = this._dataLength * 8;\n        if (dataBitsLen <= 0xFFFFFFFF) {\n            buf32[14] = dataBitsLen;\n        }\n        else {\n            var matches = dataBitsLen.toString(16).match(/(.*?)(.{0,8})$/);\n            if (matches === null) {\n                return;\n            }\n            var lo = parseInt(matches[2], 16);\n            var hi = parseInt(matches[1], 16) || 0;\n            buf32[14] = lo;\n            buf32[15] = hi;\n        }\n        Md5._md5cycle(this._state, buf32);\n        return raw ? this._state : Md5._hex(this._state);\n    };\n    // Private Static Variables\n    Md5.stateIdentity = new Int32Array([1732584193, -271733879, -1732584194, 271733878]);\n    Md5.buffer32Identity = new Int32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    Md5.hexChars = '0123456789abcdef';\n    Md5.hexOut = [];\n    // Permanent instance is to use for one-call hashing\n    Md5.onePassHasher = new Md5();\n    return Md5;\n}());\nexports.Md5 = Md5;\nif (Md5.hashStr('hello') !== '5d41402abc4b2a76b9719d911017c592') {\n    console.error('Md5 self test failed.');\n}\n","<div *ngIf=\"!isLoading\" class=\"user-plan-container\">\r\n\t<div *ngIf=\"canShowTag\" class=\"user-plan-tag-container\">\r\n\t\t<span>{{ userPlanType }}</span>\r\n\t</div>\r\n\t<!-- <cls-circular-progress-bar\r\n\t\tdiameter=\"40\"\r\n\t\t[isLoading]=\"isLoading\"\r\n\t\t[currentAmount]=\"pagesLeft\"\r\n\t\t[maxAmount]=\"planPages\"></cls-circular-progress-bar> -->\r\n\t<div\r\n\t\t*ngIf=\"canShowCredits\"\r\n\t\tclass=\"progress-bar-container\"\r\n\t\tfxLayoutAlign=\"center center\"\r\n\t\ttitle=\"{{ pagesLeft }} Credits left\">\r\n\t\t<div class=\"progress-bar\">\r\n\t\t\t<progress [value]=\"pagesLeft\" min=\"0\" [max]=\"planPages\">\r\n\t\t\t\t{{ pagesLeftAsString }}\r\n\t\t\t</progress>\r\n\t\t</div>\r\n\t\t<cls-spinner *ngIf=\"isLoading\" width=\"20px\"></cls-spinner>\r\n\t\t<span class=\"progress-bar-percentage\">\r\n\t\t\t{{ pagesLeftAsString }}\r\n\t\t</span>\r\n\t</div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { IUserBalance } from '@ngx-common/models/user-balance.models';\r\nimport { ExtPaymentService } from '../../services/ext-payment.service';\r\nimport { EPaymentPlanType } from '@ngx-common/enums/payment-plan-type.enum';\r\nimport { IExtUserSubscriptionState } from '@ngx-common/models/ext-payment.model';\r\nimport { NumeralPipe } from '@ngx-common/pipes/numeral/numeral.pipe';\r\n\r\n@UntilDestroy(this)\r\n@Component({\r\n\tselector: 'app-user-plan',\r\n\ttemplateUrl: './user-plan.component.html',\r\n\tstyleUrls: ['./user-plan.component.scss'],\r\n})\r\nexport class UserPlanComponent implements OnInit {\r\n\tuserBalance: IUserBalance;\r\n\tuserSubscription: IExtUserSubscriptionState;\r\n\tisLoading: boolean = true;\r\n\tpagesLeft: number;\r\n\tplanPages: number;\r\n\tcanShowTag: boolean;\r\n\r\n\tget pagesLeftAsString() {\r\n\t\treturn this._numeralPipe.transform(this.pagesLeft, 1);\r\n\t}\r\n\r\n\tget pagesLeftPercentage() {\r\n\t\treturn (this.pagesLeft / this.planPages) * 100;\r\n\t}\r\n\r\n\tget userPlanType() {\r\n\t\tswitch (this.userBalance?.accountType) {\r\n\t\t\tcase EPaymentPlanType.Trial:\r\n\t\t\t\treturn 'Trial';\r\n\t\t\tcase EPaymentPlanType.Prepaid:\r\n\t\t\t\treturn 'Prepaid';\r\n\t\t\tcase EPaymentPlanType.SharedAccount:\r\n\t\t\t\treturn `Org Member`;\r\n\t\t}\r\n\t}\r\n\r\n\tget canShowCredits() {\r\n\t\tif (\r\n\t\t\tthis.userBalance?.accountType == EPaymentPlanType.Subscription ||\r\n\t\t\tthis.userBalance?.accountType == EPaymentPlanType.Prepaid ||\r\n\t\t\tthis.userBalance?.accountType == EPaymentPlanType.Trial\r\n\t\t) {\r\n\t\t\tif (this.userBalance?.current == 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconstructor(private _paymentService: ExtPaymentService, private _numeralPipe: NumeralPipe) {}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis._paymentService.userBalance$.pipe(untilDestroyed(this)).subscribe(async balance => {\r\n\t\t\tif (balance) {\r\n\t\t\t\tthis.userBalance = balance;\r\n\t\t\t\tthis.pagesLeft = balance.current;\r\n\t\t\t\tthis.planPages = balance.max;\r\n\t\t\t\tthis._initSubscription();\r\n\t\t\t\tthis.isLoading = false;\r\n\t\t\t\tdocument.documentElement.style.setProperty('--progress-bar-percentage', this.pagesLeftPercentage + `%`);\r\n\t\t\t\tif (this.pagesLeftPercentage < 15) {\r\n\t\t\t\t\tdocument.documentElement.style.setProperty('--progress-bar-color', '#f44336');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdocument.documentElement.style.setProperty('--progress-bar-color', '#3f9af5');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tasync _initSubscription() {\r\n\t\tif (\r\n\t\t\tthis.userBalance.accountType == EPaymentPlanType.Subscription ||\r\n\t\t\tthis.userBalance.accountType == EPaymentPlanType.Trial\r\n\t\t) {\r\n\t\t\tthis.canShowTag = false;\r\n\t\t\tif (this.userBalance.accountType == EPaymentPlanType.Subscription) {\r\n\t\t\t\tthis.userSubscription = await this._paymentService.getExtensionSubscriptionStateAsync();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.canShowTag = true;\r\n\t\t}\r\n\t}\r\n}\r\n","export enum EUserMenuActions {\r\n\tMyAccount,\r\n\tBilling,\r\n\tTermsOfUse,\r\n\tHowDoWeKnow,\r\n\tLogOut,\r\n}\r\n","<div class=\"user-menu-container\">\r\n\t<button class=\"user-avatar-btn\" id=\"menu-toggle-button\" (click)=\"toggleMenu = true\">\r\n\t\t<ngx-avatar *ngIf=\"userEmail\" [gravatarId]=\"userEmail\" [name]=\"userEmail\" size=\"32\"></ngx-avatar>\r\n\t\t<cls-spinner *ngIf=\"!user\" width=\"20px\"></cls-spinner>\r\n\t</button>\r\n\t<div class=\"user-menu\" *ngIf=\"toggleMenu\" #actionsMenu>\r\n\t\t<ng-container *ngIf=\"user && user.emailAddress\">\r\n\t\t\t<a class=\"menu-item\" (click)=\"triggerMenuItemAction(eUserMenuActions.MyAccount)\">\r\n\t\t\t\t<img src=\"assets/icons/my-account-icon.png\" />\r\n\t\t\t\t<span class=\"menu-item-txt\">My Account</span>\r\n\t\t\t</a>\r\n\t\t\t<div class=\"menu-item-divider\"></div>\r\n\t\t</ng-container>\r\n\t\t<a class=\"menu-item\" (click)=\"triggerMenuItemAction(eUserMenuActions.TermsOfUse)\">\r\n\t\t\t<img src=\"assets/icons/terms-of-use-icon.png\" />\r\n\t\t\t<span class=\"menu-item-txt\">Terms of use</span>\r\n\t\t</a>\r\n\t\t<div class=\"menu-item-divider\"></div>\r\n\t\t<a class=\"menu-item\" (click)=\"triggerMenuItemAction(eUserMenuActions.HowDoWeKnow)\">\r\n\t\t\t<img style=\"width: 14px; margin-left: 1px\" src=\"assets/icons/question-mark-icon.png\" />\r\n\t\t\t<span class=\"menu-item-txt\">How do we know?</span>\r\n\t\t</a>\r\n\t\t<div class=\"menu-item-divider\"></div>\r\n\t\t<ng-container *ngIf=\"user && user.emailAddress && !isOrganizationMember\">\r\n\t\t\t<a class=\"menu-item\" (click)=\"triggerMenuItemAction(eUserMenuActions.Billing)\">\r\n\t\t\t\t<img src=\"assets/icons/my-account-icon.png\" />\r\n\t\t\t\t<span class=\"menu-item-txt\">Billing</span>\r\n\t\t\t</a>\r\n\t\t\t<div class=\"menu-item-divider\"></div>\r\n\t\t</ng-container>\r\n\t\t<a class=\"menu-item\" (click)=\"triggerMenuItemAction(eUserMenuActions.LogOut)\">\r\n\t\t\t<img src=\"assets/icons/log-out-icon.png\" />\r\n\t\t\t<span class=\"menu-item-txt\">Log out</span>\r\n\t\t</a>\r\n\t</div>\r\n</div>\r\n","import { Component, ElementRef, HostListener, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { environment } from 'projects/browser-extension/src/environments/environment';\r\nimport { EUserMenuActions } from '../../enums/user-menu-actions.enum';\r\nimport { ExtAuthService } from '../../services/ext-auth.service';\r\nimport { IExtUser } from '@shared/interfaces';\r\n\r\n@Component({\r\n\tselector: 'app-user-menu',\r\n\ttemplateUrl: './user-menu.component.html',\r\n\tstyleUrls: ['./user-menu.component.scss'],\r\n})\r\nexport class UserMenuComponent implements OnInit {\r\n\t@Input() user: IExtUser;\r\n\t@Input() isOrganizationMember: boolean;\r\n\t@ViewChild('actionsMenu', { static: false }) actionsMenu: ElementRef<HTMLInputElement>;\r\n\r\n\tget userEmail() {\r\n\t\treturn this.user ? (this.user.emailAddress ? this.user.emailAddress : 'Guest') : '';\r\n\t}\r\n\r\n\ttoggleMenu = false;\r\n\teUserMenuActions = EUserMenuActions;\r\n\tconstructor(private _authService: ExtAuthService) {}\r\n\r\n\tngOnInit(): void {}\r\n\r\n\tasync triggerMenuItemAction(menuItemClick: EUserMenuActions) {\r\n\t\tlet tabURl: string;\r\n\t\tswitch (menuItemClick) {\r\n\t\t\tcase EUserMenuActions.MyAccount:\r\n\t\t\t\ttabURl = `${environment.identityWebsite}/personal-information`;\r\n\t\t\t\tbreak;\r\n\t\t\tcase EUserMenuActions.Billing:\r\n\t\t\t\ttabURl = `${environment.identityWebsite}/billing`;\r\n\t\t\t\tbreak;\r\n\t\t\tcase EUserMenuActions.TermsOfUse:\r\n\t\t\t\ttabURl = `https://copyleaks.com/legal/termsofuse`;\r\n\t\t\t\tbreak;\r\n\t\t\tcase EUserMenuActions.HowDoWeKnow:\r\n\t\t\t\ttabURl = `https://help.copyleaks.com/kb-search-results?term=Ai+Content+detector`;\r\n\t\t\t\tbreak;\r\n\t\t\tcase EUserMenuActions.LogOut:\r\n\t\t\t\ttabURl = `${environment.dashboardWebsite}/login-redirect?isLogout=true`;\r\n\t\t\t\tawait this._authService.logoutAsync();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn;\r\n\t\t}\r\n\t\tchrome.tabs.create({ url: tabURl });\r\n\t}\r\n\r\n\t@HostListener('document:click', ['$event'])\r\n\tclickout(event) {\r\n\t\tif (event?.target.parentElement?.parentElement?.parentElement?.id == 'menu-toggle-button') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.toggleMenu) {\r\n\t\t\tif (!this.actionsMenu?.nativeElement.contains(event.target)) {\r\n\t\t\t\tthis.toggleMenu = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { IExtUser } from '@shared/interfaces';\r\n\r\n@Component({\r\n\tselector: 'app-ext-header',\r\n\ttemplateUrl: './ext-header.component.html',\r\n\tstyleUrls: ['./ext-header.component.scss'],\r\n})\r\nexport class ExtHeaderComponent implements OnInit {\r\n\t@Input() user: IExtUser;\r\n\t@Input() isOrganizationMember: boolean;\r\n\r\n\tconstructor() {}\r\n\r\n\tngOnInit(): void {}\r\n\r\n\tgoToLink() {\r\n\t\tlet tabURl = 'https://copyleaks.com';\r\n\t\tchrome.tabs.create({ url: tabURl });\r\n\t}\r\n}\r\n","<div class=\"header-container\">\r\n\t<div class=\"logo-title-container\">\r\n\t\t<img\r\n\t\t\twidth=\"135px\"\r\n\t\t\theight=\"35px\"\r\n\t\t\tstyle=\"cursor: pointer\"\r\n\t\t\tsrc=\"assets/images/logo.svg\"\r\n\t\t\talt=\"dashboard-logo\"\r\n\t\t\t(click)=\"goToLink()\" />\r\n\t\t<div class=\"title-container\">\r\n\t\t\t<span class=\"title\">AI Content Detector</span>\r\n\t\t\t<!-- <sub class=\"beta-tag\">beta</sub> -->\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"user-info-container\">\r\n\t\t<app-user-plan></app-user-plan>\r\n\t\t<app-user-menu [user]=\"user\" [isOrganizationMember]=\"isOrganizationMember\"></app-user-menu>\r\n\t</div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UserMenuComponent } from './user-menu.component';\r\nimport { AvatarModule } from 'ngx-avatar';\r\nimport { SpinnerModule } from '@ngx-common/components/spinner/spinner.module';\r\n\r\n@NgModule({\r\n\tdeclarations: [UserMenuComponent],\r\n\texports: [UserMenuComponent],\r\n\timports: [CommonModule, AvatarModule, SpinnerModule],\r\n})\r\nexport class UserMenuModule {}\r\n","let nextHandle = 1;\nlet resolved;\nconst activeHandles = {};\nfunction findAndClearHandle(handle) {\n    if (handle in activeHandles) {\n        delete activeHandles[handle];\n        return true;\n    }\n    return false;\n}\nexport const Immediate = {\n    setImmediate(cb) {\n        const handle = nextHandle++;\n        activeHandles[handle] = true;\n        if (!resolved) {\n            resolved = Promise.resolve();\n        }\n        resolved.then(() => findAndClearHandle(handle) && cb());\n        return handle;\n    },\n    clearImmediate(handle) {\n        findAndClearHandle(handle);\n    },\n};\nexport const TestTools = {\n    pending() {\n        return Object.keys(activeHandles).length;\n    }\n};\n","import { Immediate } from '../util/Immediate';\nconst { setImmediate, clearImmediate } = Immediate;\nexport const immediateProvider = {\n    setImmediate(...args) {\n        const { delegate } = immediateProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.setImmediate) || setImmediate)(...args);\n    },\n    clearImmediate(handle) {\n        const { delegate } = immediateProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearImmediate) || clearImmediate)(handle);\n    },\n    delegate: undefined,\n};\n","import { AsyncAction } from './AsyncAction';\nimport { immediateProvider } from './immediateProvider';\nexport class AsapAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler._scheduled || (scheduler._scheduled = immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        var _a;\n        if (delay != null ? delay > 0 : this.delay > 0) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        const { actions } = scheduler;\n        if (id != null && ((_a = actions[actions.length - 1]) === null || _a === void 0 ? void 0 : _a.id) !== id) {\n            immediateProvider.clearImmediate(id);\n            if (scheduler._scheduled === id) {\n                scheduler._scheduled = undefined;\n            }\n        }\n        return undefined;\n    }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\nexport class AsapScheduler extends AsyncScheduler {\n    flush(action) {\n        this._active = true;\n        const flushId = this._scheduled;\n        this._scheduled = undefined;\n        const { actions } = this;\n        let error;\n        action = action || actions.shift();\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions[0]) && action.id === flushId && actions.shift());\n        this._active = false;\n        if (error) {\n            while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\nexport const asapScheduler = new AsapScheduler(AsapAction);\nexport const asap = asapScheduler;\n","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'];\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'];\nconst jqueryMethods = ['on', 'off'];\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(mapOneOrManyArgs(resultSelector));\n    }\n    const [add, remove] = isEventTarget(target)\n        ? eventTargetMethods.map((methodName) => (handler) => target[methodName](eventName, handler, options))\n        :\n            isNodeStyleEventEmitter(target)\n                ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n                : isJQueryStyleEventEmitter(target)\n                    ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n                    : [];\n    if (!add) {\n        if (isArrayLike(target)) {\n            return mergeMap((subTarget) => fromEvent(subTarget, eventName, options))(innerFrom(target));\n        }\n    }\n    if (!add) {\n        throw new TypeError('Invalid event target');\n    }\n    return new Observable((subscriber) => {\n        const handler = (...args) => subscriber.next(1 < args.length ? args : args[0]);\n        add(handler);\n        return () => remove(handler);\n    });\n}\nfunction toCommonHandlerRegistry(target, eventName) {\n    return (methodName) => (handler) => target[methodName](eventName, handler);\n}\nfunction isNodeStyleEventEmitter(target) {\n    return isFunction(target.addListener) && isFunction(target.removeListener);\n}\nfunction isJQueryStyleEventEmitter(target) {\n    return isFunction(target.on) && isFunction(target.off);\n}\nfunction isEventTarget(target) {\n    return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nfunction applyCssPrefixes(target) {\n    for (let key in target) {\n        let value = target[key] || '';\n        switch (key) {\n            case 'display':\n                if (value === 'flex') {\n                    target['display'] = [\n                        '-webkit-flex',\n                        'flex'\n                    ];\n                }\n                else if (value === 'inline-flex') {\n                    target['display'] = [\n                        '-webkit-inline-flex',\n                        'inline-flex'\n                    ];\n                }\n                else {\n                    target['display'] = value;\n                }\n                break;\n            case 'align-items':\n            case 'align-self':\n            case 'align-content':\n            case 'flex':\n            case 'flex-basis':\n            case 'flex-flow':\n            case 'flex-grow':\n            case 'flex-shrink':\n            case 'flex-wrap':\n            case 'justify-content':\n                target['-webkit-' + key] = value;\n                break;\n            case 'flex-direction':\n                value = value || 'row';\n                target['-webkit-flex-direction'] = value;\n                target['flex-direction'] = value;\n                break;\n            case 'order':\n                target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n                break;\n        }\n    }\n    return target;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst INLINE = 'inline';\nconst LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nfunction buildLayoutCSS(value) {\n    let [direction, wrap, isInline] = validateValue(value);\n    return buildCSS(direction, wrap, isInline);\n}\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nfunction validateValue(value) {\n    value = value ? value.toLowerCase() : '';\n    let [direction, wrap, inline] = value.split(' ');\n    // First value must be the `flex-direction`\n    if (!LAYOUT_VALUES.find(x => x === direction)) {\n        direction = LAYOUT_VALUES[0];\n    }\n    if (wrap === INLINE) {\n        wrap = (inline !== INLINE) ? inline : '';\n        inline = INLINE;\n    }\n    return [direction, validateWrapValue(wrap), !!inline];\n}\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nfunction isFlowHorizontal(value) {\n    let [flow,] = validateValue(value);\n    return flow.indexOf('row') > -1;\n}\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nfunction validateWrapValue(value) {\n    if (!!value) {\n        switch (value.toLowerCase()) {\n            case 'reverse':\n            case 'wrap-reverse':\n            case 'reverse-wrap':\n                value = 'wrap-reverse';\n                break;\n            case 'no':\n            case 'none':\n            case 'nowrap':\n                value = 'nowrap';\n                break;\n            // All other values fallback to 'wrap'\n            default:\n                value = 'wrap';\n                break;\n        }\n    }\n    return value;\n}\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction, wrap = null, inline = false) {\n    return {\n        'display': inline ? 'inline-flex' : 'flex',\n        'box-sizing': 'border-box',\n        'flex-direction': direction,\n        'flex-wrap': !!wrap ? wrap : null\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nfunction extendObject(dest, ...sources) {\n    if (dest == null) {\n        throw TypeError('Cannot convert undefined or null to object');\n    }\n    for (let source of sources) {\n        if (source != null) {\n            for (let key in source) {\n                if (source.hasOwnProperty(key)) {\n                    dest[key] = source[key];\n                }\n            }\n        }\n    }\n    return dest;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { INLINE, LAYOUT_VALUES, applyCssPrefixes, buildLayoutCSS, extendObject, isFlowHorizontal, validateValue, validateWrapValue };\n","import * as i0 from '@angular/core';\nimport { APP_BOOTSTRAP_LISTENER, PLATFORM_ID, NgModule, Injectable, InjectionToken, Inject, inject, Directive } from '@angular/core';\nimport { isPlatformBrowser, DOCUMENT, isPlatformServer } from '@angular/common';\nimport { BehaviorSubject, Observable, merge, Subject, asapScheduler, of, fromEvent } from 'rxjs';\nimport { applyCssPrefixes, extendObject, buildLayoutCSS } from '@angular/flex-layout/_private-utils';\nimport { filter, tap, map, debounceTime, switchMap, takeUntil, take } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nfunction removeStyles(_document, platformId) {\n    return () => {\n        if (isPlatformBrowser(platformId)) {\n            const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n            // RegExp constructor should only be used if passing a variable to the constructor.\n            // When using static regular expression it is more performant to use reg exp literal.\n            // This is also needed to provide Safari 9 compatibility, please see\n            // https://stackoverflow.com/questions/37919802 for more discussion.\n            const classRegex = /\\bflex-layout-.+?\\b/g;\n            elements.forEach(el => {\n                el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n                    el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n            });\n        }\n    };\n}\n/**\n *  Provider to remove SSR styles on the browser\n */\nconst BROWSER_PROVIDER = {\n    provide: APP_BOOTSTRAP_LISTENER,\n    useFactory: removeStyles,\n    deps: [DOCUMENT, PLATFORM_ID],\n    multi: true\n};\nconst CLASS_NAME = 'flex-layout-';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * *****************************************************************\n * Define module for common Angular Layout utilities\n * *****************************************************************\n */\nclass CoreModule {\n}\nCoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: CoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: CoreModule });\nCoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: CoreModule, providers: [BROWSER_PROVIDER] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: CoreModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [BROWSER_PROVIDER]\n                }]\n        }] });\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nclass MediaChange {\n    /**\n     * @param matches whether the mediaQuery is currently activated\n     * @param mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n     * @param mqAlias e.g. gt-sm, md, gt-lg\n     * @param suffix e.g. GtSM, Md, GtLg\n     * @param priority the priority of activation for the given breakpoint\n     */\n    constructor(matches = false, mediaQuery = 'all', mqAlias = '', suffix = '', priority = 0) {\n        this.matches = matches;\n        this.mediaQuery = mediaQuery;\n        this.mqAlias = mqAlias;\n        this.suffix = suffix;\n        this.priority = priority;\n        this.property = '';\n    }\n    /** Create an exact copy of the MediaChange */\n    clone() {\n        return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\nclass StylesheetMap {\n    constructor() {\n        this.stylesheet = new Map();\n    }\n    /**\n     * Add an individual style to an HTML element\n     */\n    addStyleToElement(element, style, value) {\n        const stylesheet = this.stylesheet.get(element);\n        if (stylesheet) {\n            stylesheet.set(style, value);\n        }\n        else {\n            this.stylesheet.set(element, new Map([[style, value]]));\n        }\n    }\n    /**\n     * Clear the virtual stylesheet\n     */\n    clearStyles() {\n        this.stylesheet.clear();\n    }\n    /**\n     * Retrieve a given style for an HTML element\n     */\n    getStyleForElement(el, styleName) {\n        const styles = this.stylesheet.get(el);\n        let value = '';\n        if (styles) {\n            const style = styles.get(styleName);\n            if (typeof style === 'number' || typeof style === 'string') {\n                value = style + '';\n            }\n        }\n        return value;\n    }\n}\nStylesheetMap.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: StylesheetMap, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nStylesheetMap.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: StylesheetMap, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: StylesheetMap, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_CONFIG = {\n    addFlexToParent: true,\n    addOrientationBps: false,\n    disableDefaultBps: false,\n    disableVendorPrefixes: false,\n    serverLoaded: false,\n    useColumnBasisZero: true,\n    printWithBreakpoints: [],\n    mediaTriggerAutoRestore: true,\n    ssrObserveBreakpoints: [],\n};\nconst LAYOUT_CONFIG = new InjectionToken('Flex Layout token, config options for the library', {\n    providedIn: 'root',\n    factory: () => DEFAULT_CONFIG\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nconst SERVER_TOKEN = new InjectionToken('FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst BREAKPOINT = new InjectionToken('Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nfunction mergeAlias(dest, source) {\n    dest = dest ? dest.clone() : new MediaChange();\n    if (source) {\n        dest.mqAlias = source.alias;\n        dest.mediaQuery = source.mediaQuery;\n        dest.suffix = source.suffix;\n        dest.priority = source.priority;\n    }\n    return dest;\n}\n\n/** A class that encapsulates CSS style generation for common directives */\nclass StyleBuilder {\n    constructor() {\n        /** Whether to cache the generated output styles */\n        this.shouldCache = true;\n    }\n    /**\n     * Run a side effect computation given the input string and the computed styles\n     * from the build task and the host configuration object\n     * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n     */\n    sideEffect(_input, _styles, _parent) {\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass StyleUtils {\n    constructor(_serverStylesheet, _serverModuleLoaded, _platformId, layoutConfig) {\n        this._serverStylesheet = _serverStylesheet;\n        this._serverModuleLoaded = _serverModuleLoaded;\n        this._platformId = _platformId;\n        this.layoutConfig = layoutConfig;\n    }\n    /**\n     * Applies styles given via string pair or object map to the directive element\n     */\n    applyStyleToElement(element, style, value = null) {\n        let styles = {};\n        if (typeof style === 'string') {\n            styles[style] = value;\n            style = styles;\n        }\n        styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n        this._applyMultiValueStyleToElement(styles, element);\n    }\n    /**\n     * Applies styles given via string pair or object map to the directive's element\n     */\n    applyStyleToElements(style, elements = []) {\n        const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n        elements.forEach(el => {\n            this._applyMultiValueStyleToElement(styles, el);\n        });\n    }\n    /**\n     * Determine the DOM element's Flexbox flow (flex-direction)\n     *\n     * Check inline style first then check computed (stylesheet) style\n     */\n    getFlowDirection(target) {\n        const query = 'flex-direction';\n        let value = this.lookupStyle(target, query);\n        const hasInlineValue = this.lookupInlineStyle(target, query) ||\n            (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n        return [value || 'row', hasInlineValue];\n    }\n    hasWrap(target) {\n        const query = 'flex-wrap';\n        return this.lookupStyle(target, query) === 'wrap';\n    }\n    /**\n     * Find the DOM element's raw attribute value (if any)\n     */\n    lookupAttributeValue(element, attribute) {\n        return element.getAttribute(attribute) || '';\n    }\n    /**\n     * Find the DOM element's inline style value (if any)\n     */\n    lookupInlineStyle(element, styleName) {\n        return isPlatformBrowser(this._platformId) ?\n            element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n    }\n    /**\n     * Determine the inline or inherited CSS style\n     * NOTE: platform-server has no implementation for getComputedStyle\n     */\n    lookupStyle(element, styleName, inlineOnly = false) {\n        let value = '';\n        if (element) {\n            let immediateValue = value = this.lookupInlineStyle(element, styleName);\n            if (!immediateValue) {\n                if (isPlatformBrowser(this._platformId)) {\n                    if (!inlineOnly) {\n                        value = getComputedStyle(element).getPropertyValue(styleName);\n                    }\n                }\n                else {\n                    if (this._serverModuleLoaded) {\n                        value = this._serverStylesheet.getStyleForElement(element, styleName);\n                    }\n                }\n            }\n        }\n        // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n        //       in which case getComputedStyle() should determine a valid value.\n        return value ? value.trim() : '';\n    }\n    /**\n     * Applies the styles to the element. The styles object map may contain an array of values\n     * Each value will be added as element style\n     * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n     */\n    _applyMultiValueStyleToElement(styles, element) {\n        Object.keys(styles).sort().forEach(key => {\n            const el = styles[key];\n            const values = Array.isArray(el) ? el : [el];\n            values.sort();\n            for (let value of values) {\n                value = value ? value + '' : '';\n                if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n                    isPlatformBrowser(this._platformId) ?\n                        element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n                }\n                else {\n                    this._serverStylesheet.addStyleToElement(element, key, value);\n                }\n            }\n        });\n    }\n    _setServerStyle(element, styleName, styleValue) {\n        styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n        const styleMap = this._readStyleAttribute(element);\n        styleMap[styleName] = styleValue || '';\n        this._writeStyleAttribute(element, styleMap);\n    }\n    _getServerStyle(element, styleName) {\n        const styleMap = this._readStyleAttribute(element);\n        return styleMap[styleName] || '';\n    }\n    _readStyleAttribute(element) {\n        const styleMap = {};\n        const styleAttribute = element.getAttribute('style');\n        if (styleAttribute) {\n            const styleList = styleAttribute.split(/;+/g);\n            for (let i = 0; i < styleList.length; i++) {\n                const style = styleList[i].trim();\n                if (style.length > 0) {\n                    const colonIndex = style.indexOf(':');\n                    if (colonIndex === -1) {\n                        throw new Error(`Invalid CSS style: ${style}`);\n                    }\n                    const name = style.substr(0, colonIndex).trim();\n                    styleMap[name] = style.substr(colonIndex + 1).trim();\n                }\n            }\n        }\n        return styleMap;\n    }\n    _writeStyleAttribute(element, styleMap) {\n        let styleAttrValue = '';\n        for (const key in styleMap) {\n            const newValue = styleMap[key];\n            if (newValue) {\n                styleAttrValue += key + ':' + styleMap[key] + ';';\n            }\n        }\n        element.setAttribute('style', styleAttrValue);\n    }\n}\nStyleUtils.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: StyleUtils, deps: [{ token: StylesheetMap }, { token: SERVER_TOKEN }, { token: PLATFORM_ID }, { token: LAYOUT_CONFIG }], target: i0.ɵɵFactoryTarget.Injectable });\nStyleUtils.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: StyleUtils, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: StyleUtils, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: StylesheetMap }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [SERVER_TOKEN]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LAYOUT_CONFIG]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** HOF to sort the breakpoints by descending priority */\nfunction sortDescendingPriority(a, b) {\n    const priorityA = a ? a.priority || 0 : 0;\n    const priorityB = b ? b.priority || 0 : 0;\n    return priorityB - priorityA;\n}\n/** HOF to sort the breakpoints by ascending priority */\nfunction sortAscendingPriority(a, b) {\n    const pA = a.priority || 0;\n    const pB = b.priority || 0;\n    return pA - pB;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\nclass MatchMedia {\n    constructor(_zone, _platformId, _document) {\n        this._zone = _zone;\n        this._platformId = _platformId;\n        this._document = _document;\n        /** Initialize source with 'all' so all non-responsive APIs trigger style updates */\n        this.source = new BehaviorSubject(new MediaChange(true));\n        this.registry = new Map();\n        this.pendingRemoveListenerFns = [];\n        this._observable$ = this.source.asObservable();\n    }\n    /**\n     * Publish list of all current activations\n     */\n    get activations() {\n        const results = [];\n        this.registry.forEach((mql, key) => {\n            if (mql.matches) {\n                results.push(key);\n            }\n        });\n        return results;\n    }\n    /**\n     * For the specified mediaQuery?\n     */\n    isActive(mediaQuery) {\n        const mql = this.registry.get(mediaQuery);\n        return !!mql ? mql.matches : this.registerQuery(mediaQuery).some(m => m.matches);\n    }\n    /**\n     * External observers can watch for all (or a specific) mql changes.\n     * Typically used by the MediaQueryAdaptor; optionally available to components\n     * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n     *\n     * Use deferred registration process to register breakpoints only on subscription\n     * This logic also enforces logic to register all mediaQueries BEFORE notify\n     * subscribers of notifications.\n     */\n    observe(mqList, filterOthers = false) {\n        if (mqList && mqList.length) {\n            const matchMedia$ = this._observable$.pipe(filter((change) => !filterOthers ? true : (mqList.indexOf(change.mediaQuery) > -1)));\n            const registration$ = new Observable((observer) => {\n                const matches = this.registerQuery(mqList);\n                if (matches.length) {\n                    const lastChange = matches.pop();\n                    matches.forEach((e) => {\n                        observer.next(e);\n                    });\n                    this.source.next(lastChange); // last match is cached\n                }\n                observer.complete();\n            });\n            return merge(registration$, matchMedia$);\n        }\n        return this._observable$;\n    }\n    /**\n     * Based on the BreakPointRegistry provider, register internal listeners for each unique\n     * mediaQuery. Each listener emits specific MediaChange data to observers\n     */\n    registerQuery(mediaQuery) {\n        const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n        const matches = [];\n        buildQueryCss(list, this._document);\n        list.forEach((query) => {\n            const onMQLEvent = (e) => {\n                this._zone.run(() => this.source.next(new MediaChange(e.matches, query)));\n            };\n            let mql = this.registry.get(query);\n            if (!mql) {\n                mql = this.buildMQL(query);\n                mql.addListener(onMQLEvent);\n                this.pendingRemoveListenerFns.push(() => mql.removeListener(onMQLEvent));\n                this.registry.set(query, mql);\n            }\n            if (mql.matches) {\n                matches.push(new MediaChange(true, query));\n            }\n        });\n        return matches;\n    }\n    ngOnDestroy() {\n        let fn;\n        while (fn = this.pendingRemoveListenerFns.pop()) {\n            fn();\n        }\n    }\n    /**\n     * Call window.matchMedia() to build a MediaQueryList; which\n     * supports 0..n listeners for activation/deactivation\n     */\n    buildMQL(query) {\n        return constructMql(query, isPlatformBrowser(this._platformId));\n    }\n}\nMatchMedia.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: MatchMedia, deps: [{ token: i0.NgZone }, { token: PLATFORM_ID }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nMatchMedia.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: MatchMedia, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: MatchMedia, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES = {};\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries, _document) {\n    const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n    if (list.length > 0) {\n        const query = list.join(', ');\n        try {\n            const styleEl = _document.createElement('style');\n            styleEl.setAttribute('type', 'text/css');\n            if (!styleEl.styleSheet) {\n                const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n                styleEl.appendChild(_document.createTextNode(cssText));\n            }\n            _document.head.appendChild(styleEl);\n            // Store in private global registry\n            list.forEach(mq => ALL_STYLES[mq] = styleEl);\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n}\nfunction constructMql(query, isBrowser) {\n    const canListen = isBrowser && !!window.matchMedia('all').addListener;\n    return canListen ? window.matchMedia(query) : {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => {\n        },\n        removeListener: () => {\n        },\n        onchange: null,\n        addEventListener() {\n        },\n        removeEventListener() {\n        },\n        dispatchEvent() {\n            return false;\n        }\n    };\n}\n\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n */\nconst DEFAULT_BREAKPOINTS = [\n    {\n        alias: 'xs',\n        mediaQuery: 'screen and (min-width: 0px) and (max-width: 599.98px)',\n        priority: 1000,\n    },\n    {\n        alias: 'sm',\n        mediaQuery: 'screen and (min-width: 600px) and (max-width: 959.98px)',\n        priority: 900,\n    },\n    {\n        alias: 'md',\n        mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279.98px)',\n        priority: 800,\n    },\n    {\n        alias: 'lg',\n        mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919.98px)',\n        priority: 700,\n    },\n    {\n        alias: 'xl',\n        mediaQuery: 'screen and (min-width: 1920px) and (max-width: 4999.98px)',\n        priority: 600,\n    },\n    {\n        alias: 'lt-sm',\n        overlapping: true,\n        mediaQuery: 'screen and (max-width: 599.98px)',\n        priority: 950,\n    },\n    {\n        alias: 'lt-md',\n        overlapping: true,\n        mediaQuery: 'screen and (max-width: 959.98px)',\n        priority: 850,\n    },\n    {\n        alias: 'lt-lg',\n        overlapping: true,\n        mediaQuery: 'screen and (max-width: 1279.98px)',\n        priority: 750,\n    },\n    {\n        alias: 'lt-xl',\n        overlapping: true,\n        priority: 650,\n        mediaQuery: 'screen and (max-width: 1919.98px)',\n    },\n    {\n        alias: 'gt-xs',\n        overlapping: true,\n        mediaQuery: 'screen and (min-width: 600px)',\n        priority: -950,\n    },\n    {\n        alias: 'gt-sm',\n        overlapping: true,\n        mediaQuery: 'screen and (min-width: 960px)',\n        priority: -850,\n    }, {\n        alias: 'gt-md',\n        overlapping: true,\n        mediaQuery: 'screen and (min-width: 1280px)',\n        priority: -750,\n    },\n    {\n        alias: 'gt-lg',\n        overlapping: true,\n        mediaQuery: 'screen and (min-width: 1920px)',\n        priority: -650,\n    }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/* tslint:disable */\nconst HANDSET_PORTRAIT = '(orientation: portrait) and (max-width: 599.98px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959.98px)';\nconst TABLET_PORTRAIT = '(orientation: portrait) and (min-width: 600px) and (max-width: 839.98px)';\nconst TABLET_LANDSCAPE = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279.98px)';\nconst WEB_PORTRAIT = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE = '(orientation: landscape) and (min-width: 1280px)';\nconst ScreenTypes = {\n    'HANDSET': `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n    'TABLET': `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n    'WEB': `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n    'HANDSET_PORTRAIT': `${HANDSET_PORTRAIT}`,\n    'TABLET_PORTRAIT': `${TABLET_PORTRAIT} `,\n    'WEB_PORTRAIT': `${WEB_PORTRAIT}`,\n    'HANDSET_LANDSCAPE': `${HANDSET_LANDSCAPE}`,\n    'TABLET_LANDSCAPE': `${TABLET_LANDSCAPE}`,\n    'WEB_LANDSCAPE': `${WEB_LANDSCAPE}`\n};\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nconst ORIENTATION_BREAKPOINTS = [\n    { 'alias': 'handset', priority: 2000, 'mediaQuery': ScreenTypes.HANDSET },\n    { 'alias': 'handset.landscape', priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE },\n    { 'alias': 'handset.portrait', priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_PORTRAIT },\n    { 'alias': 'tablet', priority: 2100, 'mediaQuery': ScreenTypes.TABLET },\n    { 'alias': 'tablet.landscape', priority: 2100, 'mediaQuery': ScreenTypes.TABLET_LANDSCAPE },\n    { 'alias': 'tablet.portrait', priority: 2100, 'mediaQuery': ScreenTypes.TABLET_PORTRAIT },\n    { 'alias': 'web', priority: 2200, 'mediaQuery': ScreenTypes.WEB, overlapping: true },\n    { 'alias': 'web.landscape', priority: 2200, 'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping: true },\n    { 'alias': 'web.portrait', priority: 2200, 'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping: true }\n];\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part) {\n    let first = part.length > 0 ? part.charAt(0) : '';\n    let remainder = (part.length > 1) ? part.slice(1) : '';\n    return first.toUpperCase() + remainder;\n}\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name) {\n    return name\n        .replace(ALIAS_DELIMITERS, '|')\n        .split('|')\n        .map(firstUpperCase)\n        .join('');\n}\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nfunction validateSuffixes(list) {\n    list.forEach((bp) => {\n        if (!bp.suffix) {\n            bp.suffix = camelCase(bp.alias); // create Suffix value based on alias\n            bp.overlapping = !!bp.overlapping; // ensure default value\n        }\n    });\n    return list;\n}\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nfunction mergeByAlias(defaults, custom = []) {\n    const dict = {};\n    defaults.forEach(bp => {\n        dict[bp.alias] = bp;\n    });\n    // Merge custom breakpoints\n    custom.forEach((bp) => {\n        if (dict[bp.alias]) {\n            extendObject(dict[bp.alias], bp);\n        }\n        else {\n            dict[bp.alias] = bp;\n        }\n    });\n    return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nconst BREAKPOINTS = new InjectionToken('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n        const breakpoints = inject(BREAKPOINT);\n        const layoutConfig = inject(LAYOUT_CONFIG);\n        const bpFlattenArray = [].concat.apply([], (breakpoints || [])\n            .map((v) => Array.isArray(v) ? v : [v]));\n        const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n            .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n        return mergeByAlias(builtIns, bpFlattenArray);\n    }\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\nclass BreakPointRegistry {\n    constructor(list) {\n        /**\n         * Memoized BreakPoint Lookups\n         */\n        this.findByMap = new Map();\n        this.items = [...list].sort(sortAscendingPriority);\n    }\n    /**\n     * Search breakpoints by alias (e.g. gt-xs)\n     */\n    findByAlias(alias) {\n        return !alias ? null : this.findWithPredicate(alias, (bp) => bp.alias == alias);\n    }\n    findByQuery(query) {\n        return this.findWithPredicate(query, (bp) => bp.mediaQuery == query);\n    }\n    /**\n     * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n     * e.g. gt-sm overlaps md, lg, and xl\n     */\n    get overlappings() {\n        return this.items.filter(it => it.overlapping == true);\n    }\n    /**\n     * Get list of all registered (non-empty) breakpoint aliases\n     */\n    get aliases() {\n        return this.items.map(it => it.alias);\n    }\n    /**\n     * Aliases are mapped to properties using suffixes\n     * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n     * for property layoutGtSM.\n     */\n    get suffixes() {\n        return this.items.map(it => !!it.suffix ? it.suffix : '');\n    }\n    /**\n     * Memoized lookup using custom predicate function\n     */\n    findWithPredicate(key, searchFn) {\n        let response = this.findByMap.get(key);\n        if (!response) {\n            response = this.items.find(searchFn) || null;\n            this.findByMap.set(key, response);\n        }\n        return response || null;\n    }\n}\nBreakPointRegistry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: BreakPointRegistry, deps: [{ token: BREAKPOINTS }], target: i0.ɵɵFactoryTarget.Injectable });\nBreakPointRegistry.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: BreakPointRegistry, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: BreakPointRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [BREAKPOINTS]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst PRINT = 'print';\nconst BREAKPOINT_PRINT = {\n    alias: PRINT,\n    mediaQuery: PRINT,\n    priority: 1000\n};\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\nclass PrintHook {\n    constructor(breakpoints, layoutConfig, _document) {\n        this.breakpoints = breakpoints;\n        this.layoutConfig = layoutConfig;\n        this._document = _document;\n        // registeredBeforeAfterPrintHooks tracks if we registered the `beforeprint`\n        //  and `afterprint` event listeners.\n        this.registeredBeforeAfterPrintHooks = false;\n        // isPrintingBeforeAfterEvent is used to track if we are printing from within\n        // a `beforeprint` event handler. This prevents the typicall `stopPrinting`\n        // form `interceptEvents` so that printing is not stopped while the dialog\n        // is still open. This is an extension of the `isPrinting` property on\n        // browsers which support `beforeprint` and `afterprint` events.\n        this.isPrintingBeforeAfterEvent = false;\n        this.beforePrintEventListeners = [];\n        this.afterPrintEventListeners = [];\n        /** Is this service currently in Print-mode ? */\n        this.isPrinting = false;\n        this.queue = new PrintQueue();\n        this.deactivations = [];\n    }\n    /** Add 'print' mediaQuery: to listen for matchMedia activations */\n    withPrintQuery(queries) {\n        return [...queries, PRINT];\n    }\n    /** Is the MediaChange event for any 'print' @media */\n    isPrintEvent(e) {\n        return e.mediaQuery.startsWith(PRINT);\n    }\n    /** What is the desired mqAlias to use while printing? */\n    get printAlias() {\n        return this.layoutConfig.printWithBreakpoints || [];\n    }\n    /** Lookup breakpoints associated with print aliases. */\n    get printBreakPoints() {\n        return this.printAlias\n            .map(alias => this.breakpoints.findByAlias(alias))\n            .filter(bp => bp !== null);\n    }\n    /** Lookup breakpoint associated with mediaQuery */\n    getEventBreakpoints({ mediaQuery }) {\n        const bp = this.breakpoints.findByQuery(mediaQuery);\n        const list = bp ? [...this.printBreakPoints, bp] : this.printBreakPoints;\n        return list.sort(sortDescendingPriority);\n    }\n    /** Update event with printAlias mediaQuery information */\n    updateEvent(event) {\n        let bp = this.breakpoints.findByQuery(event.mediaQuery);\n        if (this.isPrintEvent(event)) {\n            // Reset from 'print' to first (highest priority) print breakpoint\n            bp = this.getEventBreakpoints(event)[0];\n            event.mediaQuery = bp ? bp.mediaQuery : '';\n        }\n        return mergeAlias(event, bp);\n    }\n    // registerBeforeAfterPrintHooks registers a `beforeprint` event hook so we can\n    // trigger print styles synchronously and apply proper layout styles.\n    // It is a noop if the hooks have already been registered or if the document's\n    // `defaultView` is not available.\n    registerBeforeAfterPrintHooks(target) {\n        // `defaultView` may be null when rendering on the server or in other contexts.\n        if (!this._document.defaultView || this.registeredBeforeAfterPrintHooks) {\n            return;\n        }\n        this.registeredBeforeAfterPrintHooks = true;\n        const beforePrintListener = () => {\n            // If we aren't already printing, start printing and update the styles as\n            // if there was a regular print `MediaChange`(from matchMedia).\n            if (!this.isPrinting) {\n                this.isPrintingBeforeAfterEvent = true;\n                this.startPrinting(target, this.getEventBreakpoints(new MediaChange(true, PRINT)));\n                target.updateStyles();\n            }\n        };\n        const afterPrintListener = () => {\n            // If we aren't already printing, start printing and update the styles as\n            // if there was a regular print `MediaChange`(from matchMedia).\n            this.isPrintingBeforeAfterEvent = false;\n            if (this.isPrinting) {\n                this.stopPrinting(target);\n                target.updateStyles();\n            }\n        };\n        // Could we have teardown logic to remove if there are no print listeners being used?\n        this._document.defaultView.addEventListener('beforeprint', beforePrintListener);\n        this._document.defaultView.addEventListener('afterprint', afterPrintListener);\n        this.beforePrintEventListeners.push(beforePrintListener);\n        this.afterPrintEventListeners.push(afterPrintListener);\n    }\n    /**\n     * Prepare RxJS filter operator with partial application\n     * @return pipeable filter predicate\n     */\n    interceptEvents(target) {\n        this.registerBeforeAfterPrintHooks(target);\n        return (event) => {\n            if (this.isPrintEvent(event)) {\n                if (event.matches && !this.isPrinting) {\n                    this.startPrinting(target, this.getEventBreakpoints(event));\n                    target.updateStyles();\n                }\n                else if (!event.matches && this.isPrinting && !this.isPrintingBeforeAfterEvent) {\n                    this.stopPrinting(target);\n                    target.updateStyles();\n                }\n            }\n            else {\n                this.collectActivations(event);\n            }\n        };\n    }\n    /** Stop mediaChange event propagation in event streams */\n    blockPropagation() {\n        return (event) => {\n            return !(this.isPrinting || this.isPrintEvent(event));\n        };\n    }\n    /**\n     * Save current activateBreakpoints (for later restore)\n     * and substitute only the printAlias breakpoint\n     */\n    startPrinting(target, bpList) {\n        this.isPrinting = true;\n        target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n    }\n    /** For any print de-activations, reset the entire print queue */\n    stopPrinting(target) {\n        target.activatedBreakpoints = this.deactivations;\n        this.deactivations = [];\n        this.queue.clear();\n        this.isPrinting = false;\n    }\n    /**\n     * To restore pre-Print Activations, we must capture the proper\n     * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n     * is supported; so 'print' mediaQuery activations are used as a fallback\n     * in browsers without `beforeprint` support.\n     *\n     * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n     *\n     * Let's capture all de-activations using the following logic:\n     *\n     *  When not printing:\n     *    - clear cache when activating non-print breakpoint\n     *    - update cache (and sort) when deactivating\n     *\n     *  When printing:\n     *    - sort and save when starting print\n     *    - restore as activatedTargets and clear when stop printing\n     */\n    collectActivations(event) {\n        if (!this.isPrinting || this.isPrintingBeforeAfterEvent) {\n            if (!event.matches) {\n                const bp = this.breakpoints.findByQuery(event.mediaQuery);\n                if (bp) { // Deactivating a breakpoint\n                    this.deactivations.push(bp);\n                    this.deactivations.sort(sortDescendingPriority);\n                }\n            }\n            else if (!this.isPrintingBeforeAfterEvent) {\n                // Only clear deactivations if we aren't printing from a `beforeprint` event.\n                // Otherwise this will clear before `stopPrinting()` is called to restore\n                // the pre-Print Activations.\n                this.deactivations = [];\n            }\n        }\n    }\n    /** Teardown logic for the service. */\n    ngOnDestroy() {\n        if (this._document.defaultView) {\n            this.beforePrintEventListeners.forEach(l => this._document.defaultView.removeEventListener('beforeprint', l));\n            this.afterPrintEventListeners.forEach(l => this._document.defaultView.removeEventListener('afterprint', l));\n        }\n    }\n}\nPrintHook.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: PrintHook, deps: [{ token: BreakPointRegistry }, { token: LAYOUT_CONFIG }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nPrintHook.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: PrintHook, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: PrintHook, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: BreakPointRegistry }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LAYOUT_CONFIG]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n// ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\nclass PrintQueue {\n    constructor() {\n        /** Sorted queue with prioritized print breakpoints */\n        this.printBreakpoints = [];\n    }\n    addPrintBreakpoints(bpList) {\n        bpList.push(BREAKPOINT_PRINT);\n        bpList.sort(sortDescendingPriority);\n        bpList.forEach(bp => this.addBreakpoint(bp));\n        return this.printBreakpoints;\n    }\n    /** Add Print breakpoint to queue */\n    addBreakpoint(bp) {\n        if (!!bp) {\n            const bpInList = this.printBreakpoints.find(it => it.mediaQuery === bp.mediaQuery);\n            if (bpInList === undefined) {\n                // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n                // register as highest priority in the queue\n                this.printBreakpoints = isPrintBreakPoint(bp) ? [bp, ...this.printBreakpoints]\n                    : [...this.printBreakpoints, bp];\n            }\n        }\n    }\n    /** Restore original activated breakpoints and clear internal caches */\n    clear() {\n        this.printBreakpoints = [];\n    }\n}\n// ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n/** Only support intercept queueing if the Breakpoint is a print @media query */\nfunction isPrintBreakPoint(bp) {\n    return bp ? bp.mediaQuery.startsWith(PRINT) : false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\nclass MediaMarshaller {\n    constructor(matchMedia, breakpoints, hook) {\n        this.matchMedia = matchMedia;\n        this.breakpoints = breakpoints;\n        this.hook = hook;\n        this.activatedBreakpoints = [];\n        this.elementMap = new Map();\n        this.elementKeyMap = new WeakMap();\n        this.watcherMap = new WeakMap(); // special triggers to update elements\n        this.updateMap = new WeakMap(); // callback functions to update styles\n        this.clearMap = new WeakMap(); // callback functions to clear styles\n        this.subject = new Subject();\n        this.observeActivations();\n    }\n    get activatedAlias() {\n        return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n    }\n    /**\n     * Update styles on breakpoint activates or deactivates\n     * @param mc\n     */\n    onMediaChange(mc) {\n        const bp = this.findByQuery(mc.mediaQuery);\n        if (bp) {\n            mc = mergeAlias(mc, bp);\n            if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n                this.activatedBreakpoints.push(bp);\n                this.activatedBreakpoints.sort(sortDescendingPriority);\n                this.updateStyles();\n            }\n            else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n                // Remove the breakpoint when it's deactivated\n                this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n                this.activatedBreakpoints.sort(sortDescendingPriority);\n                this.updateStyles();\n            }\n        }\n    }\n    /**\n     * initialize the marshaller with necessary elements for delegation on an element\n     * @param element\n     * @param key\n     * @param updateFn optional callback so that custom bp directives don't have to re-provide this\n     * @param clearFn optional callback so that custom bp directives don't have to re-provide this\n     * @param extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n     */\n    init(element, key, updateFn, clearFn, extraTriggers = []) {\n        initBuilderMap(this.updateMap, element, key, updateFn);\n        initBuilderMap(this.clearMap, element, key, clearFn);\n        this.buildElementKeyMap(element, key);\n        this.watchExtraTriggers(element, key, extraTriggers);\n    }\n    /**\n     * get the value for an element and key and optionally a given breakpoint\n     * @param element\n     * @param key\n     * @param bp\n     */\n    getValue(element, key, bp) {\n        const bpMap = this.elementMap.get(element);\n        if (bpMap) {\n            const values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n            if (values) {\n                return values.get(key);\n            }\n        }\n        return undefined;\n    }\n    /**\n     * whether the element has values for a given key\n     * @param element\n     * @param key\n     */\n    hasValue(element, key) {\n        const bpMap = this.elementMap.get(element);\n        if (bpMap) {\n            const values = this.getActivatedValues(bpMap, key);\n            if (values) {\n                return values.get(key) !== undefined || false;\n            }\n        }\n        return false;\n    }\n    /**\n     * Set the value for an input on a directive\n     * @param element the element in question\n     * @param key the type of the directive (e.g. flex, layout-gap, etc)\n     * @param bp the breakpoint suffix (empty string = default)\n     * @param val the value for the breakpoint\n     */\n    setValue(element, key, val, bp) {\n        let bpMap = this.elementMap.get(element);\n        if (!bpMap) {\n            bpMap = new Map().set(bp, new Map().set(key, val));\n            this.elementMap.set(element, bpMap);\n        }\n        else {\n            const values = (bpMap.get(bp) || new Map()).set(key, val);\n            bpMap.set(bp, values);\n            this.elementMap.set(element, bpMap);\n        }\n        const value = this.getValue(element, key);\n        if (value !== undefined) {\n            this.updateElement(element, key, value);\n        }\n    }\n    /** Track element value changes for a specific key */\n    trackValue(element, key) {\n        return this.subject\n            .asObservable()\n            .pipe(filter(v => v.element === element && v.key === key));\n    }\n    /** update all styles for all elements on the current breakpoint */\n    updateStyles() {\n        this.elementMap.forEach((bpMap, el) => {\n            const keyMap = new Set(this.elementKeyMap.get(el));\n            let valueMap = this.getActivatedValues(bpMap);\n            if (valueMap) {\n                valueMap.forEach((v, k) => {\n                    this.updateElement(el, k, v);\n                    keyMap.delete(k);\n                });\n            }\n            keyMap.forEach(k => {\n                valueMap = this.getActivatedValues(bpMap, k);\n                if (valueMap) {\n                    const value = valueMap.get(k);\n                    this.updateElement(el, k, value);\n                }\n                else {\n                    this.clearElement(el, k);\n                }\n            });\n        });\n    }\n    /**\n     * clear the styles for a given element\n     * @param element\n     * @param key\n     */\n    clearElement(element, key) {\n        const builders = this.clearMap.get(element);\n        if (builders) {\n            const clearFn = builders.get(key);\n            if (!!clearFn) {\n                clearFn();\n                this.subject.next({ element, key, value: '' });\n            }\n        }\n    }\n    /**\n     * update a given element with the activated values for a given key\n     * @param element\n     * @param key\n     * @param value\n     */\n    updateElement(element, key, value) {\n        const builders = this.updateMap.get(element);\n        if (builders) {\n            const updateFn = builders.get(key);\n            if (!!updateFn) {\n                updateFn(value);\n                this.subject.next({ element, key, value });\n            }\n        }\n    }\n    /**\n     * release all references to a given element\n     * @param element\n     */\n    releaseElement(element) {\n        const watcherMap = this.watcherMap.get(element);\n        if (watcherMap) {\n            watcherMap.forEach(s => s.unsubscribe());\n            this.watcherMap.delete(element);\n        }\n        const elementMap = this.elementMap.get(element);\n        if (elementMap) {\n            elementMap.forEach((_, s) => elementMap.delete(s));\n            this.elementMap.delete(element);\n        }\n    }\n    /**\n     * trigger an update for a given element and key (e.g. layout)\n     * @param element\n     * @param key\n     */\n    triggerUpdate(element, key) {\n        const bpMap = this.elementMap.get(element);\n        if (bpMap) {\n            const valueMap = this.getActivatedValues(bpMap, key);\n            if (valueMap) {\n                if (key) {\n                    this.updateElement(element, key, valueMap.get(key));\n                }\n                else {\n                    valueMap.forEach((v, k) => this.updateElement(element, k, v));\n                }\n            }\n        }\n    }\n    /** Cross-reference for HTMLElement with directive key */\n    buildElementKeyMap(element, key) {\n        let keyMap = this.elementKeyMap.get(element);\n        if (!keyMap) {\n            keyMap = new Set();\n            this.elementKeyMap.set(element, keyMap);\n        }\n        keyMap.add(key);\n    }\n    /**\n     * Other triggers that should force style updates:\n     * - directionality\n     * - layout changes\n     * - mutationobserver updates\n     */\n    watchExtraTriggers(element, key, triggers) {\n        if (triggers && triggers.length) {\n            let watchers = this.watcherMap.get(element);\n            if (!watchers) {\n                watchers = new Map();\n                this.watcherMap.set(element, watchers);\n            }\n            const subscription = watchers.get(key);\n            if (!subscription) {\n                const newSubscription = merge(...triggers).subscribe(() => {\n                    const currentValue = this.getValue(element, key);\n                    this.updateElement(element, key, currentValue);\n                });\n                watchers.set(key, newSubscription);\n            }\n        }\n    }\n    /** Breakpoint locator by mediaQuery */\n    findByQuery(query) {\n        return this.breakpoints.findByQuery(query);\n    }\n    /**\n     * get the fallback breakpoint for a given element, starting with the current breakpoint\n     * @param bpMap\n     * @param key\n     */\n    getActivatedValues(bpMap, key) {\n        for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n            const activatedBp = this.activatedBreakpoints[i];\n            const valueMap = bpMap.get(activatedBp.alias);\n            if (valueMap) {\n                if (key === undefined || (valueMap.has(key) && valueMap.get(key) != null)) {\n                    return valueMap;\n                }\n            }\n        }\n        const lastHope = bpMap.get('');\n        return (key === undefined || lastHope && lastHope.has(key)) ? lastHope : undefined;\n    }\n    /**\n     * Watch for mediaQuery breakpoint activations\n     */\n    observeActivations() {\n        const target = this;\n        const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n        this.matchMedia\n            .observe(this.hook.withPrintQuery(queries))\n            .pipe(tap(this.hook.interceptEvents(target)), filter(this.hook.blockPropagation()))\n            .subscribe(this.onMediaChange.bind(this));\n    }\n}\nMediaMarshaller.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: MediaMarshaller, deps: [{ token: MatchMedia }, { token: BreakPointRegistry }, { token: PrintHook }], target: i0.ɵɵFactoryTarget.Injectable });\nMediaMarshaller.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: MediaMarshaller, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: MediaMarshaller, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: MatchMedia }, { type: BreakPointRegistry }, { type: PrintHook }]; } });\nfunction initBuilderMap(map, element, key, input) {\n    if (input !== undefined) {\n        let oldMap = map.get(element);\n        if (!oldMap) {\n            oldMap = new Map();\n            map.set(element, oldMap);\n        }\n        oldMap.set(key, input);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        this.elementRef = elementRef;\n        this.styleBuilder = styleBuilder;\n        this.styler = styler;\n        this.marshal = marshal;\n        this.DIRECTIVE_KEY = '';\n        this.inputs = [];\n        /** The most recently used styles for the builder */\n        this.mru = {};\n        this.destroySubject = new Subject();\n        /** Cache map for style computation */\n        this.styleCache = new Map();\n    }\n    /** Access to host element's parent DOM node */\n    get parentElement() {\n        return this.elementRef.nativeElement.parentElement;\n    }\n    /** Access to the HTMLElement for the directive */\n    get nativeElement() {\n        return this.elementRef.nativeElement;\n    }\n    /** Access to the activated value for the directive */\n    get activatedValue() {\n        return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n    }\n    set activatedValue(value) {\n        this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value, this.marshal.activatedAlias);\n    }\n    /** For @Input changes */\n    ngOnChanges(changes) {\n        Object.keys(changes).forEach(key => {\n            if (this.inputs.indexOf(key) !== -1) {\n                const bp = key.split('.').slice(1).join('.');\n                const val = changes[key].currentValue;\n                this.setValue(val, bp);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this.destroySubject.next();\n        this.destroySubject.complete();\n        this.marshal.releaseElement(this.nativeElement);\n    }\n    /** Register with central marshaller service */\n    init(extraTriggers = []) {\n        this.marshal.init(this.elementRef.nativeElement, this.DIRECTIVE_KEY, this.updateWithValue.bind(this), this.clearStyles.bind(this), extraTriggers);\n    }\n    /** Add styles to the element using predefined style builder */\n    addStyles(input, parent) {\n        const builder = this.styleBuilder;\n        const useCache = builder.shouldCache;\n        let genStyles = this.styleCache.get(input);\n        if (!genStyles || !useCache) {\n            genStyles = builder.buildStyles(input, parent);\n            if (useCache) {\n                this.styleCache.set(input, genStyles);\n            }\n        }\n        this.mru = { ...genStyles };\n        this.applyStyleToElement(genStyles);\n        builder.sideEffect(input, genStyles, parent);\n    }\n    /** Remove generated styles from an element using predefined style builder */\n    clearStyles() {\n        Object.keys(this.mru).forEach(k => {\n            this.mru[k] = '';\n        });\n        this.applyStyleToElement(this.mru);\n        this.mru = {};\n    }\n    /** Force trigger style updates on DOM element */\n    triggerUpdate() {\n        this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);\n    }\n    /**\n     * Determine the DOM element's Flexbox flow (flex-direction).\n     *\n     * Check inline style first then check computed (stylesheet) style.\n     * And optionally add the flow value to element's inline style.\n     */\n    getFlexFlowDirection(target, addIfMissing = false) {\n        if (target) {\n            const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n            if (!hasInlineValue && addIfMissing) {\n                const style = buildLayoutCSS(value);\n                const elements = [target];\n                this.styler.applyStyleToElements(style, elements);\n            }\n            return value.trim();\n        }\n        return 'row';\n    }\n    hasWrap(target) {\n        return this.styler.hasWrap(target);\n    }\n    /** Applies styles given via string pair or object map to the directive element */\n    applyStyleToElement(style, value, element = this.nativeElement) {\n        this.styler.applyStyleToElement(element, style, value);\n    }\n    setValue(val, bp) {\n        this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n    }\n    updateWithValue(input) {\n        if (this.currentValue !== input) {\n            this.addStyles(input);\n            this.currentValue = input;\n        }\n    }\n}\nBaseDirective2.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: BaseDirective2, deps: [{ token: i0.ElementRef }, { token: StyleBuilder }, { token: StyleUtils }, { token: MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nBaseDirective2.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: BaseDirective2, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: BaseDirective2, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: StyleBuilder }, { type: StyleUtils }, { type: MediaMarshaller }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\nclass MockMatchMedia extends MatchMedia {\n    constructor(_zone, _platformId, _document, _breakpoints) {\n        super(_zone, _platformId, _document);\n        this._breakpoints = _breakpoints;\n        this.autoRegisterQueries = true; // Used for testing BreakPoint registrations\n        this.useOverlaps = false; // Allow fallback to overlapping mediaQueries\n    }\n    /** Easy method to clear all listeners for all mediaQueries */\n    clearAll() {\n        this.registry.forEach((mql) => {\n            mql.destroy();\n        });\n        this.registry.clear();\n        this.useOverlaps = false;\n    }\n    /** Feature to support manual, simulated activation of a mediaQuery. */\n    activate(mediaQuery, useOverlaps = false) {\n        useOverlaps = useOverlaps || this.useOverlaps;\n        mediaQuery = this._validateQuery(mediaQuery);\n        if (useOverlaps || !this.isActive(mediaQuery)) {\n            this._deactivateAll();\n            this._registerMediaQuery(mediaQuery);\n            this._activateWithOverlaps(mediaQuery, useOverlaps);\n        }\n        return this.hasActivated;\n    }\n    /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n    _validateQuery(queryOrAlias) {\n        const bp = this._breakpoints.findByAlias(queryOrAlias);\n        return (bp && bp.mediaQuery) || queryOrAlias;\n    }\n    /**\n     * Manually onMediaChange any overlapping mediaQueries to simulate\n     * similar functionality in the window.matchMedia()\n     */\n    _activateWithOverlaps(mediaQuery, useOverlaps) {\n        if (useOverlaps) {\n            const bp = this._breakpoints.findByQuery(mediaQuery);\n            const alias = bp ? bp.alias : 'unknown';\n            // Simulate activation of overlapping lt-<XXX> ranges\n            switch (alias) {\n                case 'lg':\n                    this._activateByAlias(['lt-xl']);\n                    break;\n                case 'md':\n                    this._activateByAlias(['lt-xl', 'lt-lg']);\n                    break;\n                case 'sm':\n                    this._activateByAlias(['lt-xl', 'lt-lg', 'lt-md']);\n                    break;\n                case 'xs':\n                    this._activateByAlias(['lt-xl', 'lt-lg', 'lt-md', 'lt-sm']);\n                    break;\n            }\n            // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n            switch (alias) {\n                case 'xl':\n                    this._activateByAlias(['gt-lg', 'gt-md', 'gt-sm', 'gt-xs']);\n                    break;\n                case 'lg':\n                    this._activateByAlias(['gt-md', 'gt-sm', 'gt-xs']);\n                    break;\n                case 'md':\n                    this._activateByAlias(['gt-sm', 'gt-xs']);\n                    break;\n                case 'sm':\n                    this._activateByAlias(['gt-xs']);\n                    break;\n            }\n        }\n        // Activate last since the responsiveActivation is watching *this* mediaQuery\n        return this._activateByQuery(mediaQuery);\n    }\n    /**\n     *\n     */\n    _activateByAlias(aliases) {\n        const activate = (alias) => {\n            const bp = this._breakpoints.findByAlias(alias);\n            this._activateByQuery(bp ? bp.mediaQuery : alias);\n        };\n        aliases.forEach(activate);\n    }\n    /**\n     *\n     */\n    _activateByQuery(mediaQuery) {\n        if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n            this._registerMediaQuery(mediaQuery);\n        }\n        const mql = this.registry.get(mediaQuery);\n        if (mql && !this.isActive(mediaQuery)) {\n            this.registry.set(mediaQuery, mql.activate());\n        }\n        return this.hasActivated;\n    }\n    /** Deactivate all current MQLs and reset the buffer */\n    _deactivateAll() {\n        this.registry.forEach((it) => {\n            it.deactivate();\n        });\n        return this;\n    }\n    /** Insure the mediaQuery is registered with MatchMedia */\n    _registerMediaQuery(mediaQuery) {\n        if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n            this.registerQuery(mediaQuery);\n        }\n    }\n    /**\n     * Call window.matchMedia() to build a MediaQueryList; which\n     * supports 0..n listeners for activation/deactivation\n     */\n    buildMQL(query) {\n        return new MockMediaQueryList(query);\n    }\n    get hasActivated() {\n        return this.activations.length > 0;\n    }\n}\nMockMatchMedia.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: MockMatchMedia, deps: [{ token: i0.NgZone }, { token: PLATFORM_ID }, { token: DOCUMENT }, { token: BreakPointRegistry }], target: i0.ɵɵFactoryTarget.Injectable });\nMockMatchMedia.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: MockMatchMedia });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: MockMatchMedia, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: BreakPointRegistry }]; } });\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nclass MockMediaQueryList {\n    constructor(_mediaQuery) {\n        this._mediaQuery = _mediaQuery;\n        this._isActive = false;\n        this._listeners = [];\n        this.onchange = null;\n    }\n    get matches() {\n        return this._isActive;\n    }\n    get media() {\n        return this._mediaQuery;\n    }\n    /**\n     * Destroy the current list by deactivating the\n     * listeners and clearing the internal list\n     */\n    destroy() {\n        this.deactivate();\n        this._listeners = [];\n    }\n    /** Notify all listeners that 'matches === TRUE' */\n    activate() {\n        if (!this._isActive) {\n            this._isActive = true;\n            this._listeners.forEach((callback) => {\n                const cb = callback;\n                cb.call(this, { matches: this.matches, media: this.media });\n            });\n        }\n        return this;\n    }\n    /** Notify all listeners that 'matches === false' */\n    deactivate() {\n        if (this._isActive) {\n            this._isActive = false;\n            this._listeners.forEach((callback) => {\n                const cb = callback;\n                cb.call(this, { matches: this.matches, media: this.media });\n            });\n        }\n        return this;\n    }\n    /** Add a listener to our internal list to activate later */\n    addListener(listener) {\n        if (this._listeners.indexOf(listener) === -1) {\n            this._listeners.push(listener);\n        }\n        if (this._isActive) {\n            const cb = listener;\n            cb.call(this, { matches: this.matches, media: this.media });\n        }\n    }\n    /** Don't need to remove listeners in the testing environment */\n    removeListener(_) {\n    }\n    addEventListener(_, __, ___) {\n    }\n    removeEventListener(_, __, ___) {\n    }\n    dispatchEvent(_) {\n        return false;\n    }\n}\n/**\n * Pre-configured provider for MockMatchMedia\n */\nconst MockMatchMediaProvider = {\n    provide: MatchMedia,\n    useClass: MockMatchMedia\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Wraps the provided value in an array, unless the provided value is an array. */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * MediaObserver enables applications to listen for 1..n mediaQuery activations and to determine\n * if a mediaQuery is currently activated.\n *\n * Since a breakpoint change will first deactivate 1...n mediaQueries and then possibly activate\n * 1..n mediaQueries, the MediaObserver will debounce notifications and report ALL *activations*\n * in 1 event notification. The reported activations will be sorted in descending priority order.\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * Note: Developers should note that only mediaChange activations (not de-activations)\n *       are announced by the MediaObserver.\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const media$ = mediaObserver.asObservable().pipe(\n *        filter((changes: MediaChange[]) => true)   // silly noop filter\n *      );\n *\n *      media$.subscribe((changes: MediaChange[]) => {\n *        let status = '';\n *        changes.forEach( change => {\n *          status += `'${change.mqAlias}' = (${change.mediaQuery}) <br/>` ;\n *        });\n *        this.status = status;\n *     });\n *\n *    }\n *  }\n */\nclass MediaObserver {\n    constructor(breakpoints, matchMedia, hook) {\n        this.breakpoints = breakpoints;\n        this.matchMedia = matchMedia;\n        this.hook = hook;\n        /** Filter MediaChange notifications for overlapping breakpoints */\n        this.filterOverlaps = false;\n        this.destroyed$ = new Subject();\n        this._media$ = this.watchActivations();\n        this.media$ = this._media$.pipe(filter((changes) => changes.length > 0), map((changes) => changes[0]));\n    }\n    /**\n     * Completes the active subject, signalling to all complete for all\n     * MediaObserver subscribers\n     */\n    ngOnDestroy() {\n        this.destroyed$.next();\n        this.destroyed$.complete();\n    }\n    // ************************************************\n    // Public Methods\n    // ************************************************\n    /**\n     * Observe changes to current activation 'list'\n     */\n    asObservable() {\n        return this._media$;\n    }\n    /**\n     * Allow programmatic query to determine if one or more media query/alias match\n     * the current viewport size.\n     * @param value One or more media queries (or aliases) to check.\n     * @returns Whether any of the media queries match.\n     */\n    isActive(value) {\n        const aliases = splitQueries(coerceArray(value));\n        return aliases.some(alias => {\n            const query = toMediaQuery(alias, this.breakpoints);\n            return query !== null && this.matchMedia.isActive(query);\n        });\n    }\n    // ************************************************\n    // Internal Methods\n    // ************************************************\n    /**\n     * Register all the mediaQueries registered in the BreakPointRegistry\n     * This is needed so subscribers can be auto-notified of all standard, registered\n     * mediaQuery activations\n     */\n    watchActivations() {\n        const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n        return this.buildObservable(queries);\n    }\n    /**\n     * Only pass/announce activations (not de-activations)\n     *\n     * Since multiple-mediaQueries can be activation in a cycle,\n     * gather all current activations into a single list of changes to observers\n     *\n     * Inject associated (if any) alias information into the MediaChange event\n     * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     * - Exclude print activations that do not have an associated mediaQuery\n     *\n     * NOTE: the raw MediaChange events [from MatchMedia] do not\n     *       contain important alias information; as such this info\n     *       must be injected into the MediaChange\n     */\n    buildObservable(mqList) {\n        const hasChanges = (changes) => {\n            const isValidQuery = (change) => (change.mediaQuery.length > 0);\n            return (changes.filter(isValidQuery).length > 0);\n        };\n        const excludeOverlaps = (changes) => {\n            return !this.filterOverlaps ? changes : changes.filter(change => {\n                const bp = this.breakpoints.findByQuery(change.mediaQuery);\n                return !bp ? true : !bp.overlapping;\n            });\n        };\n        /**\n         */\n        return this.matchMedia\n            .observe(this.hook.withPrintQuery(mqList))\n            .pipe(filter((change) => change.matches), debounceTime(0, asapScheduler), switchMap(_ => of(this.findAllActivations())), map(excludeOverlaps), filter(hasChanges), takeUntil(this.destroyed$));\n    }\n    /**\n     * Find all current activations and prepare single list of activations\n     * sorted by descending priority.\n     */\n    findAllActivations() {\n        const mergeMQAlias = (change) => {\n            let bp = this.breakpoints.findByQuery(change.mediaQuery);\n            return mergeAlias(change, bp);\n        };\n        const replaceWithPrintAlias = (change) => {\n            return this.hook.isPrintEvent(change) ? this.hook.updateEvent(change) : change;\n        };\n        return this.matchMedia\n            .activations\n            .map(query => new MediaChange(true, query))\n            .map(replaceWithPrintAlias)\n            .map(mergeMQAlias)\n            .sort(sortDescendingPriority);\n    }\n}\nMediaObserver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: MediaObserver, deps: [{ token: BreakPointRegistry }, { token: MatchMedia }, { token: PrintHook }], target: i0.ɵɵFactoryTarget.Injectable });\nMediaObserver.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: MediaObserver, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: MediaObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: BreakPointRegistry }, { type: MatchMedia }, { type: PrintHook }]; } });\n/**\n * Find associated breakpoint (if any)\n */\nfunction toMediaQuery(query, locator) {\n    const bp = locator.findByAlias(query) || locator.findByQuery(query);\n    return bp ? bp.mediaQuery : null;\n}\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries.map((query) => query.split(','))\n        .reduce((a1, a2) => a1.concat(a2))\n        .map(query => query.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class\n */\nclass MediaTrigger {\n    constructor(breakpoints, matchMedia, layoutConfig, _platformId, _document) {\n        this.breakpoints = breakpoints;\n        this.matchMedia = matchMedia;\n        this.layoutConfig = layoutConfig;\n        this._platformId = _platformId;\n        this._document = _document;\n        this.hasCachedRegistryMatches = false;\n        this.originalActivations = [];\n        this.originalRegistry = new Map();\n    }\n    /**\n     * Manually activate range of breakpoints\n     * @param list array of mediaQuery or alias strings\n     */\n    activate(list) {\n        list = list.map(it => it.trim()); // trim queries\n        this.saveActivations();\n        this.deactivateAll();\n        this.setActivations(list);\n        this.prepareAutoRestore();\n    }\n    /**\n     * Restore original, 'real' breakpoints and emit events\n     * to trigger stream notification\n     */\n    restore() {\n        if (this.hasCachedRegistryMatches) {\n            const extractQuery = (change) => change.mediaQuery;\n            const list = this.originalActivations.map(extractQuery);\n            try {\n                this.deactivateAll();\n                this.restoreRegistryMatches();\n                this.setActivations(list);\n            }\n            finally {\n                this.originalActivations = [];\n                if (this.resizeSubscription) {\n                    this.resizeSubscription.unsubscribe();\n                }\n            }\n        }\n    }\n    // ************************************************\n    // Internal Methods\n    // ************************************************\n    /**\n     * Whenever window resizes, immediately auto-restore original\n     * activations (if we are simulating activations)\n     */\n    prepareAutoRestore() {\n        const isBrowser = isPlatformBrowser(this._platformId) && this._document;\n        const enableAutoRestore = isBrowser && this.layoutConfig.mediaTriggerAutoRestore;\n        if (enableAutoRestore) {\n            const resize$ = fromEvent(window, 'resize').pipe(take(1));\n            this.resizeSubscription = resize$.subscribe(this.restore.bind(this));\n        }\n    }\n    /**\n     * Notify all matchMedia subscribers of de-activations\n     *\n     * Note: we must force 'matches' updates for\n     *       future matchMedia::activation lookups\n     */\n    deactivateAll() {\n        const list = this.currentActivations;\n        this.forceRegistryMatches(list, false);\n        this.simulateMediaChanges(list, false);\n    }\n    /**\n     * Cache current activations as sorted, prioritized list of MediaChanges\n     */\n    saveActivations() {\n        if (!this.hasCachedRegistryMatches) {\n            const toMediaChange = (query) => new MediaChange(true, query);\n            const mergeMQAlias = (change) => {\n                const bp = this.breakpoints.findByQuery(change.mediaQuery);\n                return mergeAlias(change, bp);\n            };\n            this.originalActivations = this.currentActivations\n                .map(toMediaChange)\n                .map(mergeMQAlias)\n                .sort(sortDescendingPriority);\n            this.cacheRegistryMatches();\n        }\n    }\n    /**\n     * Force set manual activations for specified mediaQuery list\n     */\n    setActivations(list) {\n        if (!!this.originalRegistry) {\n            this.forceRegistryMatches(list, true);\n        }\n        this.simulateMediaChanges(list);\n    }\n    /**\n     * For specified mediaQuery list manually simulate activations or deactivations\n     */\n    simulateMediaChanges(queries, matches = true) {\n        const toMediaQuery = (query) => {\n            const locator = this.breakpoints;\n            const bp = locator.findByAlias(query) || locator.findByQuery(query);\n            return bp ? bp.mediaQuery : query;\n        };\n        const emitChangeEvent = (query) => this.emitChangeEvent(matches, query);\n        queries.map(toMediaQuery).forEach(emitChangeEvent);\n    }\n    /**\n     * Replace current registry with simulated registry...\n     * Note: this is required since MediaQueryList::matches is 'readOnly'\n     */\n    forceRegistryMatches(queries, matches) {\n        const registry = new Map();\n        queries.forEach(query => {\n            registry.set(query, { matches });\n        });\n        this.matchMedia.registry = registry;\n    }\n    /**\n     * Save current MatchMedia::registry items.\n     */\n    cacheRegistryMatches() {\n        const target = this.originalRegistry;\n        target.clear();\n        this.matchMedia.registry.forEach((value, key) => {\n            target.set(key, value);\n        });\n        this.hasCachedRegistryMatches = true;\n    }\n    /**\n     * Restore original, 'true' registry\n     */\n    restoreRegistryMatches() {\n        const target = this.matchMedia.registry;\n        target.clear();\n        this.originalRegistry.forEach((value, key) => {\n            target.set(key, value);\n        });\n        this.originalRegistry.clear();\n        this.hasCachedRegistryMatches = false;\n    }\n    /**\n     * Manually emit a MediaChange event via the MatchMedia to MediaMarshaller and MediaObserver\n     */\n    emitChangeEvent(matches, query) {\n        this.matchMedia.source.next(new MediaChange(matches, query));\n    }\n    get currentActivations() {\n        return this.matchMedia.activations;\n    }\n}\nMediaTrigger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: MediaTrigger, deps: [{ token: BreakPointRegistry }, { token: MatchMedia }, { token: LAYOUT_CONFIG }, { token: PLATFORM_ID }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nMediaTrigger.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: MediaTrigger, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: MediaTrigger, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: BreakPointRegistry }, { type: MatchMedia }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LAYOUT_CONFIG]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n* The flex API permits 3 or 1 parts of the value:\n*    - `flex-grow flex-shrink flex-basis`, or\n*    - `flex-basis`\n*/\nfunction validateBasis(basis, grow = '1', shrink = '1') {\n    let parts = [grow, shrink, basis];\n    let j = basis.indexOf('calc');\n    if (j > 0) {\n        parts[2] = _validateCalcValue(basis.substring(j).trim());\n        let matches = basis.substr(0, j).trim().split(' ');\n        if (matches.length == 2) {\n            parts[0] = matches[0];\n            parts[1] = matches[1];\n        }\n    }\n    else if (j == 0) {\n        parts[2] = _validateCalcValue(basis.trim());\n    }\n    else {\n        let matches = basis.split(' ');\n        parts = (matches.length === 3) ? matches : [\n            grow, shrink, basis\n        ];\n    }\n    return parts;\n}\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc) {\n    return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BREAKPOINT, BREAKPOINTS, BREAKPOINT_PRINT, BROWSER_PROVIDER, BaseDirective2, BreakPointRegistry, CLASS_NAME, CoreModule, DEFAULT_BREAKPOINTS, DEFAULT_CONFIG, LAYOUT_CONFIG, MediaChange, MediaMarshaller, MediaObserver, MediaTrigger, ORIENTATION_BREAKPOINTS, PrintHook, SERVER_TOKEN, ScreenTypes, StyleBuilder, StyleUtils, StylesheetMap, coerceArray, mergeAlias, removeStyles, sortAscendingPriority, sortDescendingPriority, validateBasis, MatchMedia as ɵMatchMedia, MockMatchMedia as ɵMockMatchMedia, MockMatchMediaProvider as ɵMockMatchMediaProvider };\n","import * as i0 from '@angular/core';\nimport { Injectable, PLATFORM_ID, Directive, Inject, Input, Optional, Self, SecurityContext, NgModule } from '@angular/core';\nimport * as i1 from '@angular/flex-layout/core';\nimport { StyleBuilder, BaseDirective2, SERVER_TOKEN, LAYOUT_CONFIG, CoreModule } from '@angular/flex-layout/core';\nimport * as i2 from '@angular/common';\nimport { isPlatformServer, NgClass, NgStyle } from '@angular/common';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i2$1 from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ImgSrcStyleBuilder extends StyleBuilder {\n    buildStyles(url) {\n        return { 'content': url ? `url(${url})` : '' };\n    }\n}\nImgSrcStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: ImgSrcStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nImgSrcStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: ImgSrcStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: ImgSrcStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass ImgSrcDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal, platformId, serverModuleLoaded) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.platformId = platformId;\n        this.serverModuleLoaded = serverModuleLoaded;\n        this.DIRECTIVE_KEY = 'img-src';\n        this.defaultSrc = '';\n        this.styleCache = imgSrcCache;\n        this.init();\n        this.setValue(this.nativeElement.getAttribute('src') || '', '');\n        if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n            this.nativeElement.setAttribute('src', '');\n        }\n    }\n    set src(val) {\n        this.defaultSrc = val;\n        this.setValue(this.defaultSrc, '');\n    }\n    /**\n     * Use the [responsively] activated input value to update\n     * the host img src attribute or assign a default `img.src=''`\n     * if the src has not been defined.\n     *\n     * Do nothing to standard `<img src=\"\">` usages, only when responsive\n     * keys are present do we actually call `setAttribute()`\n     */\n    updateWithValue(value) {\n        const url = value || this.defaultSrc;\n        if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n            this.addStyles(url);\n        }\n        else {\n            this.nativeElement.setAttribute('src', url);\n        }\n    }\n}\nImgSrcDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: ImgSrcDirective, deps: [{ token: i0.ElementRef }, { token: ImgSrcStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }, { token: PLATFORM_ID }, { token: SERVER_TOKEN }], target: i0.ɵɵFactoryTarget.Directive });\nImgSrcDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: ImgSrcDirective, inputs: { src: \"src\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: ImgSrcDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: ImgSrcStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [SERVER_TOKEN]\n                }] }]; }, propDecorators: { src: [{\n                type: Input,\n                args: ['src']\n            }] } });\nconst imgSrcCache = new Map();\nconst inputs$3 = [\n    'src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl',\n    'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl',\n    'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'\n];\nconst selector$3 = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\nclass DefaultImgSrcDirective extends ImgSrcDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$3;\n    }\n}\nDefaultImgSrcDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultImgSrcDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultImgSrcDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultImgSrcDirective, selector: \"\\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\\n\", inputs: { \"src.xs\": \"src.xs\", \"src.sm\": \"src.sm\", \"src.md\": \"src.md\", \"src.lg\": \"src.lg\", \"src.xl\": \"src.xl\", \"src.lt-sm\": \"src.lt-sm\", \"src.lt-md\": \"src.lt-md\", \"src.lt-lg\": \"src.lt-lg\", \"src.lt-xl\": \"src.lt-xl\", \"src.gt-xs\": \"src.gt-xs\", \"src.gt-sm\": \"src.gt-sm\", \"src.gt-md\": \"src.gt-md\", \"src.gt-lg\": \"src.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultImgSrcDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$3, inputs: inputs$3 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ClassDirective extends BaseDirective2 {\n    constructor(elementRef, styler, marshal, iterableDiffers, keyValueDiffers, renderer2, ngClassInstance) {\n        super(elementRef, null, styler, marshal);\n        this.ngClassInstance = ngClassInstance;\n        this.DIRECTIVE_KEY = 'ngClass';\n        if (!this.ngClassInstance) {\n            // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n            // the same host element; since the responsive variations may be defined...\n            this.ngClassInstance = new NgClass(iterableDiffers, keyValueDiffers, elementRef, renderer2);\n        }\n        this.init();\n        this.setValue('', '');\n    }\n    /**\n     * Capture class assignments so we cache the default classes\n     * which are merged with activated styles and used as fallbacks.\n     */\n    set klass(val) {\n        this.ngClassInstance.klass = val;\n        this.setValue(val, '');\n    }\n    updateWithValue(value) {\n        this.ngClassInstance.ngClass = value;\n        this.ngClassInstance.ngDoCheck();\n    }\n    // ******************************************************************\n    // Lifecycle Hooks\n    // ******************************************************************\n    /**\n     * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n     */\n    ngDoCheck() {\n        this.ngClassInstance.ngDoCheck();\n    }\n}\nClassDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: ClassDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }, { token: i0.IterableDiffers }, { token: i0.KeyValueDiffers }, { token: i0.Renderer2 }, { token: i2.NgClass, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\nClassDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: ClassDirective, inputs: { klass: [\"class\", \"klass\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: ClassDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }, { type: i0.IterableDiffers }, { type: i0.KeyValueDiffers }, { type: i0.Renderer2 }, { type: i2.NgClass, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }]; }, propDecorators: { klass: [{\n                type: Input,\n                args: ['class']\n            }] } });\nconst inputs$2 = [\n    'ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl',\n    'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl',\n    'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'\n];\nconst selector$2 = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\nclass DefaultClassDirective extends ClassDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$2;\n    }\n}\nDefaultClassDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultClassDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultClassDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultClassDirective, selector: \"\\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\\n\", inputs: { ngClass: \"ngClass\", \"ngClass.xs\": \"ngClass.xs\", \"ngClass.sm\": \"ngClass.sm\", \"ngClass.md\": \"ngClass.md\", \"ngClass.lg\": \"ngClass.lg\", \"ngClass.xl\": \"ngClass.xl\", \"ngClass.lt-sm\": \"ngClass.lt-sm\", \"ngClass.lt-md\": \"ngClass.lt-md\", \"ngClass.lt-lg\": \"ngClass.lt-lg\", \"ngClass.lt-xl\": \"ngClass.lt-xl\", \"ngClass.gt-xs\": \"ngClass.gt-xs\", \"ngClass.gt-sm\": \"ngClass.gt-sm\", \"ngClass.gt-md\": \"ngClass.gt-md\", \"ngClass.gt-lg\": \"ngClass.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultClassDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$2, inputs: inputs$2 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ShowHideStyleBuilder extends StyleBuilder {\n    buildStyles(show, parent) {\n        const shouldShow = show === 'true';\n        return { 'display': shouldShow ? parent.display || (parent.isServer ? 'initial' : '') : 'none' };\n    }\n}\nShowHideStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: ShowHideStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nShowHideStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: ShowHideStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: ShowHideStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass ShowHideDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal, layoutConfig, platformId, serverModuleLoaded) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.layoutConfig = layoutConfig;\n        this.platformId = platformId;\n        this.serverModuleLoaded = serverModuleLoaded;\n        this.DIRECTIVE_KEY = 'show-hide';\n        /** Original DOM Element CSS display style */\n        this.display = '';\n        this.hasLayout = false;\n        this.hasFlexChild = false;\n    }\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    ngAfterViewInit() {\n        this.trackExtraTriggers();\n        const children = Array.from(this.nativeElement.children);\n        for (let i = 0; i < children.length; i++) {\n            if (this.marshal.hasValue(children[i], 'flex')) {\n                this.hasFlexChild = true;\n                break;\n            }\n        }\n        if (DISPLAY_MAP.has(this.nativeElement)) {\n            this.display = DISPLAY_MAP.get(this.nativeElement);\n        }\n        else {\n            this.display = this.getDisplayStyle();\n            DISPLAY_MAP.set(this.nativeElement, this.display);\n        }\n        this.init();\n        // set the default to show unless explicitly overridden\n        const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n        if (defaultValue === undefined || defaultValue === '') {\n            this.setValue(true, '');\n        }\n        else {\n            this.triggerUpdate();\n        }\n    }\n    /**\n     * On changes to any @Input properties...\n     * Default to use the non-responsive Input value ('fxShow')\n     * Then conditionally override with the mq-activated Input's current value\n     */\n    ngOnChanges(changes) {\n        Object.keys(changes).forEach(key => {\n            if (this.inputs.indexOf(key) !== -1) {\n                const inputKey = key.split('.');\n                const bp = inputKey.slice(1).join('.');\n                const inputValue = changes[key].currentValue;\n                let shouldShow = inputValue !== '' ?\n                    inputValue !== 0 ? coerceBooleanProperty(inputValue) : false\n                    : true;\n                if (inputKey[0] === 'fxHide') {\n                    shouldShow = !shouldShow;\n                }\n                this.setValue(shouldShow, bp);\n            }\n        });\n    }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     *  Watch for these extra triggers to update fxShow, fxHide stylings\n     */\n    trackExtraTriggers() {\n        this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n        ['layout', 'layout-align'].forEach(key => {\n            this.marshal\n                .trackValue(this.nativeElement, key)\n                .pipe(takeUntil(this.destroySubject))\n                .subscribe(this.triggerUpdate.bind(this));\n        });\n    }\n    /**\n     * Override accessor to the current HTMLElement's `display` style\n     * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n     * unless it was already explicitly specified inline or in a CSS stylesheet.\n     */\n    getDisplayStyle() {\n        return (this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)) ?\n            'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n    }\n    /** Validate the visibility value and then update the host's inline display style */\n    updateWithValue(value = true) {\n        if (value === '') {\n            return;\n        }\n        const isServer = isPlatformServer(this.platformId);\n        this.addStyles(value ? 'true' : 'false', { display: this.display, isServer });\n        if (isServer && this.serverModuleLoaded) {\n            this.nativeElement.style.setProperty('display', '');\n        }\n        this.marshal.triggerUpdate(this.parentElement, 'layout-gap');\n    }\n}\nShowHideDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: ShowHideDirective, deps: [{ token: i0.ElementRef }, { token: ShowHideStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }, { token: LAYOUT_CONFIG }, { token: PLATFORM_ID }, { token: SERVER_TOKEN }], target: i0.ɵɵFactoryTarget.Directive });\nShowHideDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: ShowHideDirective, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: ShowHideDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: ShowHideStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LAYOUT_CONFIG]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [SERVER_TOKEN]\n                }] }]; } });\nconst DISPLAY_MAP = new WeakMap();\nconst inputs$1 = [\n    'fxShow', 'fxShow.print',\n    'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl',\n    'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl',\n    'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg',\n    'fxHide', 'fxHide.print',\n    'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl',\n    'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl',\n    'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'\n];\nconst selector$1 = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n/**\n * 'show' Layout API directive\n */\nclass DefaultShowHideDirective extends ShowHideDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$1;\n    }\n}\nDefaultShowHideDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultShowHideDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultShowHideDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultShowHideDirective, selector: \"\\n  [fxShow], [fxShow.print],\\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\\n  [fxHide], [fxHide.print],\\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\\n\", inputs: { fxShow: \"fxShow\", \"fxShow.print\": \"fxShow.print\", \"fxShow.xs\": \"fxShow.xs\", \"fxShow.sm\": \"fxShow.sm\", \"fxShow.md\": \"fxShow.md\", \"fxShow.lg\": \"fxShow.lg\", \"fxShow.xl\": \"fxShow.xl\", \"fxShow.lt-sm\": \"fxShow.lt-sm\", \"fxShow.lt-md\": \"fxShow.lt-md\", \"fxShow.lt-lg\": \"fxShow.lt-lg\", \"fxShow.lt-xl\": \"fxShow.lt-xl\", \"fxShow.gt-xs\": \"fxShow.gt-xs\", \"fxShow.gt-sm\": \"fxShow.gt-sm\", \"fxShow.gt-md\": \"fxShow.gt-md\", \"fxShow.gt-lg\": \"fxShow.gt-lg\", fxHide: \"fxHide\", \"fxHide.print\": \"fxHide.print\", \"fxHide.xs\": \"fxHide.xs\", \"fxHide.sm\": \"fxHide.sm\", \"fxHide.md\": \"fxHide.md\", \"fxHide.lg\": \"fxHide.lg\", \"fxHide.xl\": \"fxHide.xl\", \"fxHide.lt-sm\": \"fxHide.lt-sm\", \"fxHide.lt-md\": \"fxHide.lt-md\", \"fxHide.lt-lg\": \"fxHide.lt-lg\", \"fxHide.lt-xl\": \"fxHide.lt-xl\", \"fxHide.gt-xs\": \"fxHide.gt-xs\", \"fxHide.gt-sm\": \"fxHide.gt-sm\", \"fxHide.gt-md\": \"fxHide.gt-md\", \"fxHide.gt-lg\": \"fxHide.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultShowHideDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$1, inputs: inputs$1 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** NgStyle allowed inputs */\nclass NgStyleKeyValue {\n    constructor(key, value, noQuotes = true) {\n        this.key = key;\n        this.value = value;\n        this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n        this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n        this.value = this.value.replace(/;/, '');\n    }\n}\nfunction getType(target) {\n    let what = typeof target;\n    if (what === 'object') {\n        return (target.constructor === Array) ? 'array' :\n            (target.constructor === Set) ? 'set' : 'object';\n    }\n    return what;\n}\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nfunction buildRawList(source, delimiter = ';') {\n    return String(source)\n        .trim()\n        .split(delimiter)\n        .map((val) => val.trim())\n        .filter(val => val !== '');\n}\n/** Convert array of key:value strings to a iterable map object */\nfunction buildMapFromList$1(styles, sanitize) {\n    const sanitizeValue = (it) => {\n        if (sanitize) {\n            it.value = sanitize(it.value);\n        }\n        return it;\n    };\n    return styles\n        .map(stringToKeyValue)\n        .filter(entry => !!entry)\n        .map(sanitizeValue)\n        .reduce(keyValuesToMap, {});\n}\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nfunction buildMapFromSet(source, sanitize) {\n    let list = [];\n    if (getType(source) === 'set') {\n        source.forEach(entry => list.push(entry));\n    }\n    else {\n        Object.keys(source).forEach((key) => {\n            list.push(`${key}:${source[key]}`);\n        });\n    }\n    return buildMapFromList$1(list, sanitize);\n}\n/** Convert 'key:value' -> [key, value] */\nfunction stringToKeyValue(it) {\n    const [key, ...vals] = it.split(':');\n    return new NgStyleKeyValue(key, vals.join(':'));\n}\n/** Convert [ [key,value] ] -> { key : value } */\nfunction keyValuesToMap(map, entry) {\n    if (!!entry.key) {\n        map[entry.key] = entry.value;\n    }\n    return map;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass StyleDirective extends BaseDirective2 {\n    constructor(elementRef, styler, marshal, sanitizer, differs, renderer2, ngStyleInstance, serverLoaded, platformId) {\n        super(elementRef, null, styler, marshal);\n        this.sanitizer = sanitizer;\n        this.ngStyleInstance = ngStyleInstance;\n        this.DIRECTIVE_KEY = 'ngStyle';\n        if (!this.ngStyleInstance) {\n            // Create an instance NgStyle Directive instance only if `ngStyle=\"\"` has NOT been\n            // defined on the same host element; since the responsive variations may be defined...\n            this.ngStyleInstance = new NgStyle(elementRef, differs, renderer2);\n        }\n        this.init();\n        const styles = this.nativeElement.getAttribute('style') || '';\n        this.fallbackStyles = this.buildStyleMap(styles);\n        this.isServer = serverLoaded && isPlatformServer(platformId);\n    }\n    /** Add generated styles */\n    updateWithValue(value) {\n        const styles = this.buildStyleMap(value);\n        this.ngStyleInstance.ngStyle = { ...this.fallbackStyles, ...styles };\n        if (this.isServer) {\n            this.applyStyleToElement(styles);\n        }\n        this.ngStyleInstance.ngDoCheck();\n    }\n    /** Remove generated styles */\n    clearStyles() {\n        this.ngStyleInstance.ngStyle = this.fallbackStyles;\n        this.ngStyleInstance.ngDoCheck();\n    }\n    /**\n     * Convert raw strings to ngStyleMap; which is required by ngStyle\n     * NOTE: Raw string key-value pairs MUST be delimited by `;`\n     *       Comma-delimiters are not supported due to complexities of\n     *       possible style values such as `rgba(x,x,x,x)` and others\n     */\n    buildStyleMap(styles) {\n        // Always safe-guard (aka sanitize) style property values\n        const sanitizer = (val) => this.sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n        if (styles) {\n            switch (getType(styles)) {\n                case 'string': return buildMapFromList(buildRawList(styles), sanitizer);\n                case 'array': return buildMapFromList(styles, sanitizer);\n                case 'set': return buildMapFromSet(styles, sanitizer);\n                default: return buildMapFromSet(styles, sanitizer);\n            }\n        }\n        return {};\n    }\n    // ******************************************************************\n    // Lifecycle Hooks\n    // ******************************************************************\n    /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n    ngDoCheck() {\n        this.ngStyleInstance.ngDoCheck();\n    }\n}\nStyleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: StyleDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }, { token: i2$1.DomSanitizer }, { token: i0.KeyValueDiffers }, { token: i0.Renderer2 }, { token: i2.NgStyle, optional: true, self: true }, { token: SERVER_TOKEN }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Directive });\nStyleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: StyleDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: StyleDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }, { type: i2$1.DomSanitizer }, { type: i0.KeyValueDiffers }, { type: i0.Renderer2 }, { type: i2.NgStyle, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [SERVER_TOKEN]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\nconst inputs = [\n    'ngStyle',\n    'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl',\n    'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl',\n    'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'\n];\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\nclass DefaultStyleDirective extends StyleDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs;\n    }\n}\nDefaultStyleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultStyleDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultStyleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultStyleDirective, selector: \"\\n  [ngStyle],\\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\\n\", inputs: { ngStyle: \"ngStyle\", \"ngStyle.xs\": \"ngStyle.xs\", \"ngStyle.sm\": \"ngStyle.sm\", \"ngStyle.md\": \"ngStyle.md\", \"ngStyle.lg\": \"ngStyle.lg\", \"ngStyle.xl\": \"ngStyle.xl\", \"ngStyle.lt-sm\": \"ngStyle.lt-sm\", \"ngStyle.lt-md\": \"ngStyle.lt-md\", \"ngStyle.lt-lg\": \"ngStyle.lt-lg\", \"ngStyle.lt-xl\": \"ngStyle.lt-xl\", \"ngStyle.gt-xs\": \"ngStyle.gt-xs\", \"ngStyle.gt-sm\": \"ngStyle.gt-sm\", \"ngStyle.gt-md\": \"ngStyle.gt-md\", \"ngStyle.gt-lg\": \"ngStyle.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultStyleDirective, decorators: [{\n            type: Directive,\n            args: [{ selector, inputs }]\n        }] });\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles, sanitize) {\n    const sanitizeValue = (it) => {\n        if (sanitize) {\n            it.value = sanitize(it.value);\n        }\n        return it;\n    };\n    return styles\n        .map(stringToKeyValue)\n        .filter(entry => !!entry)\n        .map(sanitizeValue)\n        .reduce(keyValuesToMap, {});\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ALL_DIRECTIVES = [\n    DefaultShowHideDirective,\n    DefaultClassDirective,\n    DefaultStyleDirective,\n    DefaultImgSrcDirective,\n];\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\nclass ExtendedModule {\n}\nExtendedModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: ExtendedModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nExtendedModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: ExtendedModule, declarations: [DefaultShowHideDirective,\n        DefaultClassDirective,\n        DefaultStyleDirective,\n        DefaultImgSrcDirective], imports: [CoreModule], exports: [DefaultShowHideDirective,\n        DefaultClassDirective,\n        DefaultStyleDirective,\n        DefaultImgSrcDirective] });\nExtendedModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: ExtendedModule, imports: [[CoreModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: ExtendedModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CoreModule],\n                    declarations: [...ALL_DIRECTIVES],\n                    exports: [...ALL_DIRECTIVES]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ClassDirective, DefaultClassDirective, DefaultImgSrcDirective, DefaultShowHideDirective, DefaultStyleDirective, ExtendedModule, ImgSrcDirective, ImgSrcStyleBuilder, ShowHideDirective, ShowHideStyleBuilder, StyleDirective };\n","import * as i0 from '@angular/core';\nimport { Injectable, Directive, Inject, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i1 from '@angular/flex-layout/core';\nimport { StyleBuilder, BaseDirective2, LAYOUT_CONFIG, validateBasis, CoreModule } from '@angular/flex-layout/core';\nimport { buildLayoutCSS, LAYOUT_VALUES, isFlowHorizontal, extendObject } from '@angular/flex-layout/_private-utils';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass LayoutStyleBuilder extends StyleBuilder {\n    buildStyles(input) {\n        return buildLayoutCSS(input);\n    }\n}\nLayoutStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LayoutStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nLayoutStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LayoutStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LayoutStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nconst inputs$6 = [\n    'fxLayout', 'fxLayout.xs', 'fxLayout.sm', 'fxLayout.md',\n    'fxLayout.lg', 'fxLayout.xl', 'fxLayout.lt-sm', 'fxLayout.lt-md',\n    'fxLayout.lt-lg', 'fxLayout.lt-xl', 'fxLayout.gt-xs', 'fxLayout.gt-sm',\n    'fxLayout.gt-md', 'fxLayout.gt-lg'\n];\nconst selector$6 = `\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\n  [fxLayout.gt-md], [fxLayout.gt-lg]\n`;\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\nclass LayoutDirective extends BaseDirective2 {\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.DIRECTIVE_KEY = 'layout';\n        this.styleCache = layoutCache;\n        this.init();\n    }\n}\nLayoutDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LayoutDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: LayoutStyleBuilder }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nLayoutDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: LayoutDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LayoutDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: LayoutStyleBuilder }, { type: i1.MediaMarshaller }]; } });\nclass DefaultLayoutDirective extends LayoutDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$6;\n    }\n}\nDefaultLayoutDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultLayoutDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultLayoutDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultLayoutDirective, selector: \"\\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\\n  [fxLayout.gt-md], [fxLayout.gt-lg]\\n\", inputs: { fxLayout: \"fxLayout\", \"fxLayout.xs\": \"fxLayout.xs\", \"fxLayout.sm\": \"fxLayout.sm\", \"fxLayout.md\": \"fxLayout.md\", \"fxLayout.lg\": \"fxLayout.lg\", \"fxLayout.xl\": \"fxLayout.xl\", \"fxLayout.lt-sm\": \"fxLayout.lt-sm\", \"fxLayout.lt-md\": \"fxLayout.lt-md\", \"fxLayout.lt-lg\": \"fxLayout.lt-lg\", \"fxLayout.lt-xl\": \"fxLayout.lt-xl\", \"fxLayout.gt-xs\": \"fxLayout.gt-xs\", \"fxLayout.gt-sm\": \"fxLayout.gt-sm\", \"fxLayout.gt-md\": \"fxLayout.gt-md\", \"fxLayout.gt-lg\": \"fxLayout.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultLayoutDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$6, inputs: inputs$6 }]\n        }] });\nconst layoutCache = new Map();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CLEAR_MARGIN_CSS = {\n    'margin-left': null,\n    'margin-right': null,\n    'margin-top': null,\n    'margin-bottom': null\n};\nclass LayoutGapStyleBuilder extends StyleBuilder {\n    constructor(_styler) {\n        super();\n        this._styler = _styler;\n    }\n    buildStyles(gapValue, parent) {\n        if (gapValue.endsWith(GRID_SPECIFIER)) {\n            gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n            // Add the margin to the host element\n            return buildGridMargin(gapValue, parent.directionality);\n        }\n        else {\n            return {};\n        }\n    }\n    sideEffect(gapValue, _styles, parent) {\n        const items = parent.items;\n        if (gapValue.endsWith(GRID_SPECIFIER)) {\n            gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n            // For each `element` children, set the padding\n            const paddingStyles = buildGridPadding(gapValue, parent.directionality);\n            this._styler.applyStyleToElements(paddingStyles, parent.items);\n        }\n        else {\n            const lastItem = items.pop();\n            // For each `element` children EXCEPT the last,\n            // set the margin right/bottom styles...\n            const gapCss = buildGapCSS(gapValue, parent);\n            this._styler.applyStyleToElements(gapCss, items);\n            // Clear all gaps for all visible elements\n            this._styler.applyStyleToElements(CLEAR_MARGIN_CSS, [lastItem]);\n        }\n    }\n}\nLayoutGapStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LayoutGapStyleBuilder, deps: [{ token: i1.StyleUtils }], target: i0.ɵɵFactoryTarget.Injectable });\nLayoutGapStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LayoutGapStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LayoutGapStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.StyleUtils }]; } });\nconst inputs$5 = [\n    'fxLayoutGap', 'fxLayoutGap.xs', 'fxLayoutGap.sm', 'fxLayoutGap.md',\n    'fxLayoutGap.lg', 'fxLayoutGap.xl', 'fxLayoutGap.lt-sm', 'fxLayoutGap.lt-md',\n    'fxLayoutGap.lt-lg', 'fxLayoutGap.lt-xl', 'fxLayoutGap.gt-xs', 'fxLayoutGap.gt-sm',\n    'fxLayoutGap.gt-md', 'fxLayoutGap.gt-lg'\n];\nconst selector$5 = `\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`;\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\nclass LayoutGapDirective extends BaseDirective2 {\n    constructor(elRef, zone, directionality, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.zone = zone;\n        this.directionality = directionality;\n        this.styleUtils = styleUtils;\n        this.layout = 'row'; // default flex-direction\n        this.DIRECTIVE_KEY = 'layout-gap';\n        this.observerSubject = new Subject();\n        const extraTriggers = [this.directionality.change, this.observerSubject.asObservable()];\n        this.init(extraTriggers);\n        this.marshal\n            .trackValue(this.nativeElement, 'layout')\n            .pipe(takeUntil(this.destroySubject))\n            .subscribe(this.onLayoutChange.bind(this));\n    }\n    /** Special accessor to query for all child 'element' nodes regardless of type, class, etc */\n    get childrenNodes() {\n        const obj = this.nativeElement.children;\n        const buffer = [];\n        // iterate backwards ensuring that length is an UInt32\n        for (let i = obj.length; i--;) {\n            buffer[i] = obj[i];\n        }\n        return buffer;\n    }\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    ngAfterContentInit() {\n        this.buildChildObservable();\n        this.triggerUpdate();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this.observer) {\n            this.observer.disconnect();\n        }\n    }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     * Cache the parent container 'flex-direction' and update the 'margin' styles\n     */\n    onLayoutChange(matcher) {\n        const layout = matcher.value;\n        // Make sure to filter out 'wrap' option\n        const direction = layout.split(' ');\n        this.layout = direction[0];\n        if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n            this.layout = 'row';\n        }\n        this.triggerUpdate();\n    }\n    /**\n     *\n     */\n    updateWithValue(value) {\n        // Gather all non-hidden Element nodes\n        const items = this.childrenNodes\n            .filter(el => el.nodeType === 1 && this.willDisplay(el))\n            .sort((a, b) => {\n            const orderA = +this.styler.lookupStyle(a, 'order');\n            const orderB = +this.styler.lookupStyle(b, 'order');\n            if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n                return 0;\n            }\n            else {\n                return orderA > orderB ? 1 : -1;\n            }\n        });\n        if (items.length > 0) {\n            const directionality = this.directionality.value;\n            const layout = this.layout;\n            if (layout === 'row' && directionality === 'rtl') {\n                this.styleCache = layoutGapCacheRowRtl;\n            }\n            else if (layout === 'row' && directionality !== 'rtl') {\n                this.styleCache = layoutGapCacheRowLtr;\n            }\n            else if (layout === 'column' && directionality === 'rtl') {\n                this.styleCache = layoutGapCacheColumnRtl;\n            }\n            else if (layout === 'column' && directionality !== 'rtl') {\n                this.styleCache = layoutGapCacheColumnLtr;\n            }\n            this.addStyles(value, { directionality, items, layout });\n        }\n    }\n    /** We need to override clearStyles because in most cases mru isn't populated */\n    clearStyles() {\n        const gridMode = Object.keys(this.mru).length > 0;\n        const childrenStyle = gridMode ? 'padding' :\n            getMarginType(this.directionality.value, this.layout);\n        // If there are styles on the parent remove them\n        if (gridMode) {\n            super.clearStyles();\n        }\n        // Then remove the children styles too\n        this.styleUtils.applyStyleToElements({ [childrenStyle]: '' }, this.childrenNodes);\n    }\n    /** Determine if an element will show or hide based on current activation */\n    willDisplay(source) {\n        const value = this.marshal.getValue(source, 'show-hide');\n        return value === true ||\n            (value === undefined && this.styleUtils.lookupStyle(source, 'display') !== 'none');\n    }\n    buildChildObservable() {\n        this.zone.runOutsideAngular(() => {\n            if (typeof MutationObserver !== 'undefined') {\n                this.observer = new MutationObserver((mutations) => {\n                    const validatedChanges = (it) => {\n                        return (it.addedNodes && it.addedNodes.length > 0) ||\n                            (it.removedNodes && it.removedNodes.length > 0);\n                    };\n                    // update gap styles only for child 'added' or 'removed' events\n                    if (mutations.some(validatedChanges)) {\n                        this.observerSubject.next();\n                    }\n                });\n                this.observer.observe(this.nativeElement, { childList: true });\n            }\n        });\n    }\n}\nLayoutGapDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LayoutGapDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i2.Directionality }, { token: i1.StyleUtils }, { token: LayoutGapStyleBuilder }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nLayoutGapDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: LayoutGapDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LayoutGapDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i2.Directionality }, { type: i1.StyleUtils }, { type: LayoutGapStyleBuilder }, { type: i1.MediaMarshaller }]; } });\nclass DefaultLayoutGapDirective extends LayoutGapDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$5;\n    }\n}\nDefaultLayoutGapDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultLayoutGapDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultLayoutGapDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultLayoutGapDirective, selector: \"\\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\\n\", inputs: { fxLayoutGap: \"fxLayoutGap\", \"fxLayoutGap.xs\": \"fxLayoutGap.xs\", \"fxLayoutGap.sm\": \"fxLayoutGap.sm\", \"fxLayoutGap.md\": \"fxLayoutGap.md\", \"fxLayoutGap.lg\": \"fxLayoutGap.lg\", \"fxLayoutGap.xl\": \"fxLayoutGap.xl\", \"fxLayoutGap.lt-sm\": \"fxLayoutGap.lt-sm\", \"fxLayoutGap.lt-md\": \"fxLayoutGap.lt-md\", \"fxLayoutGap.lt-lg\": \"fxLayoutGap.lt-lg\", \"fxLayoutGap.lt-xl\": \"fxLayoutGap.lt-xl\", \"fxLayoutGap.gt-xs\": \"fxLayoutGap.gt-xs\", \"fxLayoutGap.gt-sm\": \"fxLayoutGap.gt-sm\", \"fxLayoutGap.gt-md\": \"fxLayoutGap.gt-md\", \"fxLayoutGap.gt-lg\": \"fxLayoutGap.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultLayoutGapDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$5, inputs: inputs$5 }]\n        }] });\nconst layoutGapCacheRowRtl = new Map();\nconst layoutGapCacheColumnRtl = new Map();\nconst layoutGapCacheRowLtr = new Map();\nconst layoutGapCacheColumnLtr = new Map();\nconst GRID_SPECIFIER = ' grid';\nfunction buildGridPadding(value, directionality) {\n    const [between, below] = value.split(' ');\n    const bottom = below || between;\n    let paddingRight = '0px', paddingBottom = bottom, paddingLeft = '0px';\n    if (directionality === 'rtl') {\n        paddingLeft = between;\n    }\n    else {\n        paddingRight = between;\n    }\n    return { 'padding': `0px ${paddingRight} ${paddingBottom} ${paddingLeft}` };\n}\nfunction buildGridMargin(value, directionality) {\n    const [between, below] = value.split(' ');\n    const bottom = below || between;\n    const minus = (str) => `-${str}`;\n    let marginRight = '0px', marginBottom = minus(bottom), marginLeft = '0px';\n    if (directionality === 'rtl') {\n        marginLeft = minus(between);\n    }\n    else {\n        marginRight = minus(between);\n    }\n    return { 'margin': `0px ${marginRight} ${marginBottom} ${marginLeft}` };\n}\nfunction getMarginType(directionality, layout) {\n    switch (layout) {\n        case 'column':\n            return 'margin-bottom';\n        case 'column-reverse':\n            return 'margin-top';\n        case 'row':\n            return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n        case 'row-reverse':\n            return directionality === 'rtl' ? 'margin-right' : 'margin-left';\n        default:\n            return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n    }\n}\nfunction buildGapCSS(gapValue, parent) {\n    const key = getMarginType(parent.directionality, parent.layout);\n    const margins = { ...CLEAR_MARGIN_CSS };\n    margins[key] = gapValue;\n    return margins;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass FlexStyleBuilder extends StyleBuilder {\n    constructor(layoutConfig) {\n        super();\n        this.layoutConfig = layoutConfig;\n    }\n    buildStyles(input, parent) {\n        let [grow, shrink, ...basisParts] = input.split(' ');\n        let basis = basisParts.join(' ');\n        // The flex-direction of this element's flex container. Defaults to 'row'.\n        const direction = (parent.direction.indexOf('column') > -1) ? 'column' : 'row';\n        const max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n        const min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n        const hasCalc = String(basis).indexOf('calc') > -1;\n        const usingCalc = hasCalc || (basis === 'auto');\n        const isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n        const hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('rem') > -1 ||\n            String(basis).indexOf('em') > -1 || String(basis).indexOf('vw') > -1 ||\n            String(basis).indexOf('vh') > -1;\n        let isValue = (hasCalc || hasUnits);\n        grow = (grow == '0') ? 0 : grow;\n        shrink = (shrink == '0') ? 0 : shrink;\n        // make box inflexible when shrink and grow are both zero\n        // should not set a min when the grow is zero\n        // should not set a max when the shrink is zero\n        const isFixed = !grow && !shrink;\n        let css = {};\n        // flex-basis allows you to specify the initial/starting main-axis size of the element,\n        // before anything else is computed. It can either be a percentage or an absolute value.\n        // It is, however, not the breaking point for flex-grow/shrink properties\n        //\n        // flex-grow can be seen as this:\n        //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n        //   1: (Default value). Stretch; will be the same size to all other flex items on\n        //       the same row since they have a default value of 1.\n        //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n        //      with 'flex-grow: 1' on the same row.\n        // Use `null` to clear existing styles.\n        const clearStyles = {\n            'max-width': null,\n            'max-height': null,\n            'min-width': null,\n            'min-height': null\n        };\n        switch (basis || '') {\n            case '':\n                const useColumnBasisZero = this.layoutConfig.useColumnBasisZero !== false;\n                basis = direction === 'row' ? '0%' : (useColumnBasisZero ? '0.000000001px' : 'auto');\n                break;\n            case 'initial': // default\n            case 'nogrow':\n                grow = 0;\n                basis = 'auto';\n                break;\n            case 'grow':\n                basis = '100%';\n                break;\n            case 'noshrink':\n                shrink = 0;\n                basis = 'auto';\n                break;\n            case 'auto':\n                break;\n            case 'none':\n                grow = 0;\n                shrink = 0;\n                basis = 'auto';\n                break;\n            default:\n                // Defaults to percentage sizing unless `px` is explicitly set\n                if (!isValue && !isPercent && !isNaN(basis)) {\n                    basis = basis + '%';\n                }\n                // Fix for issue 280\n                if (basis === '0%') {\n                    isValue = true;\n                }\n                if (basis === '0px') {\n                    basis = '0%';\n                }\n                // fix issue #5345\n                if (hasCalc) {\n                    css = extendObject(clearStyles, {\n                        'flex-grow': grow,\n                        'flex-shrink': shrink,\n                        'flex-basis': isValue ? basis : '100%'\n                    });\n                }\n                else {\n                    css = extendObject(clearStyles, {\n                        'flex': `${grow} ${shrink} ${isValue ? basis : '100%'}`\n                    });\n                }\n                break;\n        }\n        if (!(css['flex'] || css['flex-grow'])) {\n            if (hasCalc) {\n                css = extendObject(clearStyles, {\n                    'flex-grow': grow,\n                    'flex-shrink': shrink,\n                    'flex-basis': basis\n                });\n            }\n            else {\n                css = extendObject(clearStyles, {\n                    'flex': `${grow} ${shrink} ${basis}`\n                });\n            }\n        }\n        // Fix for issues 277, 534, and 728\n        if (basis !== '0%' && basis !== '0px' && basis !== '0.000000001px' && basis !== 'auto') {\n            css[min] = isFixed || (isValue && grow) ? basis : null;\n            css[max] = isFixed || (!usingCalc && shrink) ? basis : null;\n        }\n        // Fix for issue 528\n        if (!css[min] && !css[max]) {\n            if (hasCalc) {\n                css = extendObject(clearStyles, {\n                    'flex-grow': grow,\n                    'flex-shrink': shrink,\n                    'flex-basis': basis\n                });\n            }\n            else {\n                css = extendObject(clearStyles, {\n                    'flex': `${grow} ${shrink} ${basis}`\n                });\n            }\n        }\n        else {\n            // Fix for issue 660\n            if (parent.hasWrap) {\n                css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ?\n                    (hasCalc ? css[max] : `${grow} ${shrink} ${css[max]}`) :\n                    (hasCalc ? css[min] : `${grow} ${shrink} ${css[min]}`);\n            }\n        }\n        return extendObject(css, { 'box-sizing': 'border-box' });\n    }\n}\nFlexStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexStyleBuilder, deps: [{ token: LAYOUT_CONFIG }], target: i0.ɵɵFactoryTarget.Injectable });\nFlexStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LAYOUT_CONFIG]\n                }] }]; } });\nconst inputs$4 = [\n    'fxFlex', 'fxFlex.xs', 'fxFlex.sm', 'fxFlex.md',\n    'fxFlex.lg', 'fxFlex.xl', 'fxFlex.lt-sm', 'fxFlex.lt-md',\n    'fxFlex.lt-lg', 'fxFlex.lt-xl', 'fxFlex.gt-xs', 'fxFlex.gt-sm',\n    'fxFlex.gt-md', 'fxFlex.gt-lg'\n];\nconst selector$4 = `\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\n  [fxFlex.gt-md], [fxFlex.gt-lg]\n`;\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\nclass FlexDirective extends BaseDirective2 {\n    constructor(elRef, styleUtils, layoutConfig, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.layoutConfig = layoutConfig;\n        this.marshal = marshal;\n        this.DIRECTIVE_KEY = 'flex';\n        this.direction = undefined;\n        this.wrap = undefined;\n        this.flexGrow = '1';\n        this.flexShrink = '1';\n        this.init();\n    }\n    get shrink() { return this.flexShrink; }\n    set shrink(value) {\n        this.flexShrink = value || '1';\n        this.triggerReflow();\n    }\n    get grow() { return this.flexGrow; }\n    set grow(value) {\n        this.flexGrow = value || '1';\n        this.triggerReflow();\n    }\n    ngOnInit() {\n        if (this.parentElement) {\n            this.marshal.trackValue(this.parentElement, 'layout')\n                .pipe(takeUntil(this.destroySubject))\n                .subscribe(this.onLayoutChange.bind(this));\n            this.marshal.trackValue(this.nativeElement, 'layout-align')\n                .pipe(takeUntil(this.destroySubject))\n                .subscribe(this.triggerReflow.bind(this));\n        }\n    }\n    /**\n     * Caches the parent container's 'flex-direction' and updates the element's style.\n     * Used as a handler for layout change events from the parent flex container.\n     */\n    onLayoutChange(matcher) {\n        const layout = matcher.value;\n        const layoutParts = layout.split(' ');\n        this.direction = layoutParts[0];\n        this.wrap = layoutParts[1] !== undefined && layoutParts[1] === 'wrap';\n        this.triggerUpdate();\n    }\n    /** Input to this is exclusively the basis input value */\n    updateWithValue(value) {\n        const addFlexToParent = this.layoutConfig.addFlexToParent !== false;\n        if (this.direction === undefined) {\n            this.direction = this.getFlexFlowDirection(this.parentElement, addFlexToParent);\n        }\n        if (this.wrap === undefined) {\n            this.wrap = this.hasWrap(this.parentElement);\n        }\n        const direction = this.direction;\n        const isHorizontal = direction.startsWith('row');\n        const hasWrap = this.wrap;\n        if (isHorizontal && hasWrap) {\n            this.styleCache = flexRowWrapCache;\n        }\n        else if (isHorizontal && !hasWrap) {\n            this.styleCache = flexRowCache;\n        }\n        else if (!isHorizontal && hasWrap) {\n            this.styleCache = flexColumnWrapCache;\n        }\n        else if (!isHorizontal && !hasWrap) {\n            this.styleCache = flexColumnCache;\n        }\n        const basis = String(value).replace(';', '');\n        const parts = validateBasis(basis, this.flexGrow, this.flexShrink);\n        this.addStyles(parts.join(' '), { direction, hasWrap });\n    }\n    /** Trigger a style reflow, usually based on a shrink/grow input event */\n    triggerReflow() {\n        const activatedValue = this.activatedValue;\n        if (activatedValue !== undefined) {\n            const parts = validateBasis(activatedValue + '', this.flexGrow, this.flexShrink);\n            this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, parts.join(' '));\n        }\n    }\n}\nFlexDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: LAYOUT_CONFIG }, { token: FlexStyleBuilder }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nFlexDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: FlexDirective, inputs: { shrink: [\"fxShrink\", \"shrink\"], grow: [\"fxGrow\", \"grow\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LAYOUT_CONFIG]\n                }] }, { type: FlexStyleBuilder }, { type: i1.MediaMarshaller }]; }, propDecorators: { shrink: [{\n                type: Input,\n                args: ['fxShrink']\n            }], grow: [{\n                type: Input,\n                args: ['fxGrow']\n            }] } });\nclass DefaultFlexDirective extends FlexDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$4;\n    }\n}\nDefaultFlexDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultFlexDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultFlexDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultFlexDirective, selector: \"\\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\\n  [fxFlex.gt-md], [fxFlex.gt-lg]\\n\", inputs: { fxFlex: \"fxFlex\", \"fxFlex.xs\": \"fxFlex.xs\", \"fxFlex.sm\": \"fxFlex.sm\", \"fxFlex.md\": \"fxFlex.md\", \"fxFlex.lg\": \"fxFlex.lg\", \"fxFlex.xl\": \"fxFlex.xl\", \"fxFlex.lt-sm\": \"fxFlex.lt-sm\", \"fxFlex.lt-md\": \"fxFlex.lt-md\", \"fxFlex.lt-lg\": \"fxFlex.lt-lg\", \"fxFlex.lt-xl\": \"fxFlex.lt-xl\", \"fxFlex.gt-xs\": \"fxFlex.gt-xs\", \"fxFlex.gt-sm\": \"fxFlex.gt-sm\", \"fxFlex.gt-md\": \"fxFlex.gt-md\", \"fxFlex.gt-lg\": \"fxFlex.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultFlexDirective, decorators: [{\n            type: Directive,\n            args: [{ inputs: inputs$4, selector: selector$4 }]\n        }] });\nconst flexRowCache = new Map();\nconst flexColumnCache = new Map();\nconst flexRowWrapCache = new Map();\nconst flexColumnWrapCache = new Map();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass FlexOrderStyleBuilder extends StyleBuilder {\n    buildStyles(value) {\n        return { order: (value && parseInt(value, 10)) || '' };\n    }\n}\nFlexOrderStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexOrderStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nFlexOrderStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexOrderStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexOrderStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nconst inputs$3 = [\n    'fxFlexOrder', 'fxFlexOrder.xs', 'fxFlexOrder.sm', 'fxFlexOrder.md',\n    'fxFlexOrder.lg', 'fxFlexOrder.xl', 'fxFlexOrder.lt-sm', 'fxFlexOrder.lt-md',\n    'fxFlexOrder.lt-lg', 'fxFlexOrder.lt-xl', 'fxFlexOrder.gt-xs', 'fxFlexOrder.gt-sm',\n    'fxFlexOrder.gt-md', 'fxFlexOrder.gt-lg'\n];\nconst selector$3 = `\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`;\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\nclass FlexOrderDirective extends BaseDirective2 {\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.DIRECTIVE_KEY = 'flex-order';\n        this.styleCache = flexOrderCache;\n        this.init();\n    }\n}\nFlexOrderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexOrderDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: FlexOrderStyleBuilder }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nFlexOrderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: FlexOrderDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexOrderDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: FlexOrderStyleBuilder }, { type: i1.MediaMarshaller }]; } });\nconst flexOrderCache = new Map();\nclass DefaultFlexOrderDirective extends FlexOrderDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$3;\n    }\n}\nDefaultFlexOrderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultFlexOrderDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultFlexOrderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultFlexOrderDirective, selector: \"\\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\\n\", inputs: { fxFlexOrder: \"fxFlexOrder\", \"fxFlexOrder.xs\": \"fxFlexOrder.xs\", \"fxFlexOrder.sm\": \"fxFlexOrder.sm\", \"fxFlexOrder.md\": \"fxFlexOrder.md\", \"fxFlexOrder.lg\": \"fxFlexOrder.lg\", \"fxFlexOrder.xl\": \"fxFlexOrder.xl\", \"fxFlexOrder.lt-sm\": \"fxFlexOrder.lt-sm\", \"fxFlexOrder.lt-md\": \"fxFlexOrder.lt-md\", \"fxFlexOrder.lt-lg\": \"fxFlexOrder.lt-lg\", \"fxFlexOrder.lt-xl\": \"fxFlexOrder.lt-xl\", \"fxFlexOrder.gt-xs\": \"fxFlexOrder.gt-xs\", \"fxFlexOrder.gt-sm\": \"fxFlexOrder.gt-sm\", \"fxFlexOrder.gt-md\": \"fxFlexOrder.gt-md\", \"fxFlexOrder.gt-lg\": \"fxFlexOrder.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultFlexOrderDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$3, inputs: inputs$3 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass FlexOffsetStyleBuilder extends StyleBuilder {\n    buildStyles(offset, parent) {\n        if (offset === '') {\n            offset = '0';\n        }\n        const isPercent = String(offset).indexOf('%') > -1;\n        const isPx = String(offset).indexOf('px') > -1;\n        if (!isPx && !isPercent && !isNaN(+offset)) {\n            offset = offset + '%';\n        }\n        const horizontalLayoutKey = parent.isRtl ? 'margin-right' : 'margin-left';\n        const styles = isFlowHorizontal(parent.layout) ?\n            { [horizontalLayoutKey]: `${offset}` } : { 'margin-top': `${offset}` };\n        return styles;\n    }\n}\nFlexOffsetStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexOffsetStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nFlexOffsetStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexOffsetStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexOffsetStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nconst inputs$2 = [\n    'fxFlexOffset', 'fxFlexOffset.xs', 'fxFlexOffset.sm', 'fxFlexOffset.md',\n    'fxFlexOffset.lg', 'fxFlexOffset.xl', 'fxFlexOffset.lt-sm', 'fxFlexOffset.lt-md',\n    'fxFlexOffset.lt-lg', 'fxFlexOffset.lt-xl', 'fxFlexOffset.gt-xs', 'fxFlexOffset.gt-sm',\n    'fxFlexOffset.gt-md', 'fxFlexOffset.gt-lg'\n];\nconst selector$2 = `\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`;\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\nclass FlexOffsetDirective extends BaseDirective2 {\n    constructor(elRef, directionality, styleBuilder, marshal, styler) {\n        super(elRef, styleBuilder, styler, marshal);\n        this.directionality = directionality;\n        this.DIRECTIVE_KEY = 'flex-offset';\n        this.init([this.directionality.change]);\n        // Parent DOM `layout-gap` with affect the nested child with `flex-offset`\n        if (this.parentElement) {\n            this.marshal\n                .trackValue(this.parentElement, 'layout-gap')\n                .pipe(takeUntil(this.destroySubject))\n                .subscribe(this.triggerUpdate.bind(this));\n        }\n    }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     * Using the current fxFlexOffset value, update the inline CSS\n     * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n     *       otherwise `margin-top` is used for the offset.\n     */\n    updateWithValue(value = '') {\n        // The flex-direction of this element's flex container. Defaults to 'row'.\n        const layout = this.getFlexFlowDirection(this.parentElement, true);\n        const isRtl = this.directionality.value === 'rtl';\n        if (layout === 'row' && isRtl) {\n            this.styleCache = flexOffsetCacheRowRtl;\n        }\n        else if (layout === 'row' && !isRtl) {\n            this.styleCache = flexOffsetCacheRowLtr;\n        }\n        else if (layout === 'column' && isRtl) {\n            this.styleCache = flexOffsetCacheColumnRtl;\n        }\n        else if (layout === 'column' && !isRtl) {\n            this.styleCache = flexOffsetCacheColumnLtr;\n        }\n        this.addStyles(value + '', { layout, isRtl });\n    }\n}\nFlexOffsetDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexOffsetDirective, deps: [{ token: i0.ElementRef }, { token: i2.Directionality }, { token: FlexOffsetStyleBuilder }, { token: i1.MediaMarshaller }, { token: i1.StyleUtils }], target: i0.ɵɵFactoryTarget.Directive });\nFlexOffsetDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: FlexOffsetDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexOffsetDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i2.Directionality }, { type: FlexOffsetStyleBuilder }, { type: i1.MediaMarshaller }, { type: i1.StyleUtils }]; } });\nclass DefaultFlexOffsetDirective extends FlexOffsetDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$2;\n    }\n}\nDefaultFlexOffsetDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultFlexOffsetDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultFlexOffsetDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultFlexOffsetDirective, selector: \"\\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\\n\", inputs: { fxFlexOffset: \"fxFlexOffset\", \"fxFlexOffset.xs\": \"fxFlexOffset.xs\", \"fxFlexOffset.sm\": \"fxFlexOffset.sm\", \"fxFlexOffset.md\": \"fxFlexOffset.md\", \"fxFlexOffset.lg\": \"fxFlexOffset.lg\", \"fxFlexOffset.xl\": \"fxFlexOffset.xl\", \"fxFlexOffset.lt-sm\": \"fxFlexOffset.lt-sm\", \"fxFlexOffset.lt-md\": \"fxFlexOffset.lt-md\", \"fxFlexOffset.lt-lg\": \"fxFlexOffset.lt-lg\", \"fxFlexOffset.lt-xl\": \"fxFlexOffset.lt-xl\", \"fxFlexOffset.gt-xs\": \"fxFlexOffset.gt-xs\", \"fxFlexOffset.gt-sm\": \"fxFlexOffset.gt-sm\", \"fxFlexOffset.gt-md\": \"fxFlexOffset.gt-md\", \"fxFlexOffset.gt-lg\": \"fxFlexOffset.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultFlexOffsetDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$2, inputs: inputs$2 }]\n        }] });\nconst flexOffsetCacheRowRtl = new Map();\nconst flexOffsetCacheColumnRtl = new Map();\nconst flexOffsetCacheRowLtr = new Map();\nconst flexOffsetCacheColumnLtr = new Map();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass FlexAlignStyleBuilder extends StyleBuilder {\n    buildStyles(input) {\n        input = input || 'stretch';\n        const styles = {};\n        // Cross-axis\n        switch (input) {\n            case 'start':\n                styles['align-self'] = 'flex-start';\n                break;\n            case 'end':\n                styles['align-self'] = 'flex-end';\n                break;\n            default:\n                styles['align-self'] = input;\n                break;\n        }\n        return styles;\n    }\n}\nFlexAlignStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexAlignStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nFlexAlignStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexAlignStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexAlignStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nconst inputs$1 = [\n    'fxFlexAlign', 'fxFlexAlign.xs', 'fxFlexAlign.sm', 'fxFlexAlign.md',\n    'fxFlexAlign.lg', 'fxFlexAlign.xl', 'fxFlexAlign.lt-sm', 'fxFlexAlign.lt-md',\n    'fxFlexAlign.lt-lg', 'fxFlexAlign.lt-xl', 'fxFlexAlign.gt-xs', 'fxFlexAlign.gt-sm',\n    'fxFlexAlign.gt-md', 'fxFlexAlign.gt-lg'\n];\nconst selector$1 = `\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`;\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\nclass FlexAlignDirective extends BaseDirective2 {\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.DIRECTIVE_KEY = 'flex-align';\n        this.styleCache = flexAlignCache;\n        this.init();\n    }\n}\nFlexAlignDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexAlignDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: FlexAlignStyleBuilder }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nFlexAlignDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: FlexAlignDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexAlignDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: FlexAlignStyleBuilder }, { type: i1.MediaMarshaller }]; } });\nconst flexAlignCache = new Map();\nclass DefaultFlexAlignDirective extends FlexAlignDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$1;\n    }\n}\nDefaultFlexAlignDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultFlexAlignDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultFlexAlignDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultFlexAlignDirective, selector: \"\\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\\n\", inputs: { fxFlexAlign: \"fxFlexAlign\", \"fxFlexAlign.xs\": \"fxFlexAlign.xs\", \"fxFlexAlign.sm\": \"fxFlexAlign.sm\", \"fxFlexAlign.md\": \"fxFlexAlign.md\", \"fxFlexAlign.lg\": \"fxFlexAlign.lg\", \"fxFlexAlign.xl\": \"fxFlexAlign.xl\", \"fxFlexAlign.lt-sm\": \"fxFlexAlign.lt-sm\", \"fxFlexAlign.lt-md\": \"fxFlexAlign.lt-md\", \"fxFlexAlign.lt-lg\": \"fxFlexAlign.lt-lg\", \"fxFlexAlign.lt-xl\": \"fxFlexAlign.lt-xl\", \"fxFlexAlign.gt-xs\": \"fxFlexAlign.gt-xs\", \"fxFlexAlign.gt-sm\": \"fxFlexAlign.gt-sm\", \"fxFlexAlign.gt-md\": \"fxFlexAlign.gt-md\", \"fxFlexAlign.gt-lg\": \"fxFlexAlign.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultFlexAlignDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$1, inputs: inputs$1 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst FLEX_FILL_CSS = {\n    'margin': 0,\n    'width': '100%',\n    'height': '100%',\n    'min-width': '100%',\n    'min-height': '100%'\n};\nclass FlexFillStyleBuilder extends StyleBuilder {\n    buildStyles(_input) {\n        return FLEX_FILL_CSS;\n    }\n}\nFlexFillStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexFillStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nFlexFillStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexFillStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexFillStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\nclass FlexFillDirective extends BaseDirective2 {\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.styleCache = flexFillCache;\n        this.addStyles('');\n    }\n}\nFlexFillDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexFillDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: FlexFillStyleBuilder }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nFlexFillDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: FlexFillDirective, selector: \"[fxFill], [fxFlexFill]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexFillDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: `[fxFill], [fxFlexFill]` }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: FlexFillStyleBuilder }, { type: i1.MediaMarshaller }]; } });\nconst flexFillCache = new Map();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass LayoutAlignStyleBuilder extends StyleBuilder {\n    buildStyles(align, parent) {\n        const css = {}, [mainAxis, crossAxis] = align.split(' ');\n        // Main axis\n        switch (mainAxis) {\n            case 'center':\n                css['justify-content'] = 'center';\n                break;\n            case 'space-around':\n                css['justify-content'] = 'space-around';\n                break;\n            case 'space-between':\n                css['justify-content'] = 'space-between';\n                break;\n            case 'space-evenly':\n                css['justify-content'] = 'space-evenly';\n                break;\n            case 'end':\n            case 'flex-end':\n                css['justify-content'] = 'flex-end';\n                break;\n            case 'start':\n            case 'flex-start':\n            default:\n                css['justify-content'] = 'flex-start'; // default main axis\n                break;\n        }\n        // Cross-axis\n        switch (crossAxis) {\n            case 'start':\n            case 'flex-start':\n                css['align-items'] = css['align-content'] = 'flex-start';\n                break;\n            case 'center':\n                css['align-items'] = css['align-content'] = 'center';\n                break;\n            case 'end':\n            case 'flex-end':\n                css['align-items'] = css['align-content'] = 'flex-end';\n                break;\n            case 'space-between':\n                css['align-content'] = 'space-between';\n                css['align-items'] = 'stretch';\n                break;\n            case 'space-around':\n                css['align-content'] = 'space-around';\n                css['align-items'] = 'stretch';\n                break;\n            case 'baseline':\n                css['align-content'] = 'stretch';\n                css['align-items'] = 'baseline';\n                break;\n            case 'stretch':\n            default: // 'stretch'\n                css['align-items'] = css['align-content'] = 'stretch'; // default cross axis\n                break;\n        }\n        return extendObject(css, {\n            'display': parent.inline ? 'inline-flex' : 'flex',\n            'flex-direction': parent.layout,\n            'box-sizing': 'border-box',\n            'max-width': crossAxis === 'stretch' ?\n                !isFlowHorizontal(parent.layout) ? '100%' : null : null,\n            'max-height': crossAxis === 'stretch' ?\n                isFlowHorizontal(parent.layout) ? '100%' : null : null,\n        });\n    }\n}\nLayoutAlignStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LayoutAlignStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nLayoutAlignStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LayoutAlignStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LayoutAlignStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nconst inputs = [\n    'fxLayoutAlign', 'fxLayoutAlign.xs', 'fxLayoutAlign.sm', 'fxLayoutAlign.md',\n    'fxLayoutAlign.lg', 'fxLayoutAlign.xl', 'fxLayoutAlign.lt-sm', 'fxLayoutAlign.lt-md',\n    'fxLayoutAlign.lt-lg', 'fxLayoutAlign.lt-xl', 'fxLayoutAlign.gt-xs', 'fxLayoutAlign.gt-sm',\n    'fxLayoutAlign.gt-md', 'fxLayoutAlign.gt-lg'\n];\nconst selector = `\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`;\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\nclass LayoutAlignDirective extends BaseDirective2 {\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.DIRECTIVE_KEY = 'layout-align';\n        this.layout = 'row'; // default flex-direction\n        this.inline = false; // default inline value\n        this.init();\n        this.marshal.trackValue(this.nativeElement, 'layout')\n            .pipe(takeUntil(this.destroySubject))\n            .subscribe(this.onLayoutChange.bind(this));\n    }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     *\n     */\n    updateWithValue(value) {\n        const layout = this.layout || 'row';\n        const inline = this.inline;\n        if (layout === 'row' && inline) {\n            this.styleCache = layoutAlignHorizontalInlineCache;\n        }\n        else if (layout === 'row' && !inline) {\n            this.styleCache = layoutAlignHorizontalCache;\n        }\n        else if (layout === 'row-reverse' && inline) {\n            this.styleCache = layoutAlignHorizontalRevInlineCache;\n        }\n        else if (layout === 'row-reverse' && !inline) {\n            this.styleCache = layoutAlignHorizontalRevCache;\n        }\n        else if (layout === 'column' && inline) {\n            this.styleCache = layoutAlignVerticalInlineCache;\n        }\n        else if (layout === 'column' && !inline) {\n            this.styleCache = layoutAlignVerticalCache;\n        }\n        else if (layout === 'column-reverse' && inline) {\n            this.styleCache = layoutAlignVerticalRevInlineCache;\n        }\n        else if (layout === 'column-reverse' && !inline) {\n            this.styleCache = layoutAlignVerticalRevCache;\n        }\n        this.addStyles(value, { layout, inline });\n    }\n    /**\n     * Cache the parent container 'flex-direction' and update the 'flex' styles\n     */\n    onLayoutChange(matcher) {\n        const layoutKeys = matcher.value.split(' ');\n        this.layout = layoutKeys[0];\n        this.inline = matcher.value.includes('inline');\n        if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n            this.layout = 'row';\n        }\n        this.triggerUpdate();\n    }\n}\nLayoutAlignDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LayoutAlignDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: LayoutAlignStyleBuilder }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nLayoutAlignDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: LayoutAlignDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LayoutAlignDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: LayoutAlignStyleBuilder }, { type: i1.MediaMarshaller }]; } });\nclass DefaultLayoutAlignDirective extends LayoutAlignDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs;\n    }\n}\nDefaultLayoutAlignDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultLayoutAlignDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultLayoutAlignDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultLayoutAlignDirective, selector: \"\\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\\n\", inputs: { fxLayoutAlign: \"fxLayoutAlign\", \"fxLayoutAlign.xs\": \"fxLayoutAlign.xs\", \"fxLayoutAlign.sm\": \"fxLayoutAlign.sm\", \"fxLayoutAlign.md\": \"fxLayoutAlign.md\", \"fxLayoutAlign.lg\": \"fxLayoutAlign.lg\", \"fxLayoutAlign.xl\": \"fxLayoutAlign.xl\", \"fxLayoutAlign.lt-sm\": \"fxLayoutAlign.lt-sm\", \"fxLayoutAlign.lt-md\": \"fxLayoutAlign.lt-md\", \"fxLayoutAlign.lt-lg\": \"fxLayoutAlign.lt-lg\", \"fxLayoutAlign.lt-xl\": \"fxLayoutAlign.lt-xl\", \"fxLayoutAlign.gt-xs\": \"fxLayoutAlign.gt-xs\", \"fxLayoutAlign.gt-sm\": \"fxLayoutAlign.gt-sm\", \"fxLayoutAlign.gt-md\": \"fxLayoutAlign.gt-md\", \"fxLayoutAlign.gt-lg\": \"fxLayoutAlign.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultLayoutAlignDirective, decorators: [{\n            type: Directive,\n            args: [{ selector, inputs }]\n        }] });\nconst layoutAlignHorizontalCache = new Map();\nconst layoutAlignVerticalCache = new Map();\nconst layoutAlignHorizontalRevCache = new Map();\nconst layoutAlignVerticalRevCache = new Map();\nconst layoutAlignHorizontalInlineCache = new Map();\nconst layoutAlignVerticalInlineCache = new Map();\nconst layoutAlignHorizontalRevInlineCache = new Map();\nconst layoutAlignVerticalRevInlineCache = new Map();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ALL_DIRECTIVES = [\n    DefaultLayoutDirective,\n    DefaultLayoutGapDirective,\n    DefaultLayoutAlignDirective,\n    DefaultFlexOrderDirective,\n    DefaultFlexOffsetDirective,\n    FlexFillDirective,\n    DefaultFlexAlignDirective,\n    DefaultFlexDirective,\n];\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\nclass FlexModule {\n}\nFlexModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFlexModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexModule, declarations: [DefaultLayoutDirective,\n        DefaultLayoutGapDirective,\n        DefaultLayoutAlignDirective,\n        DefaultFlexOrderDirective,\n        DefaultFlexOffsetDirective,\n        FlexFillDirective,\n        DefaultFlexAlignDirective,\n        DefaultFlexDirective], imports: [CoreModule, BidiModule], exports: [DefaultLayoutDirective,\n        DefaultLayoutGapDirective,\n        DefaultLayoutAlignDirective,\n        DefaultFlexOrderDirective,\n        DefaultFlexOffsetDirective,\n        FlexFillDirective,\n        DefaultFlexAlignDirective,\n        DefaultFlexDirective] });\nFlexModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexModule, imports: [[CoreModule, BidiModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CoreModule, BidiModule],\n                    declarations: [...ALL_DIRECTIVES],\n                    exports: [...ALL_DIRECTIVES]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DefaultFlexAlignDirective, DefaultFlexDirective, DefaultFlexOffsetDirective, DefaultFlexOrderDirective, DefaultLayoutAlignDirective, DefaultLayoutDirective, DefaultLayoutGapDirective, FlexAlignDirective, FlexAlignStyleBuilder, FlexDirective, FlexFillDirective, FlexFillStyleBuilder, FlexModule, FlexOffsetDirective, FlexOffsetStyleBuilder, FlexOrderDirective, FlexOrderStyleBuilder, FlexStyleBuilder, LayoutAlignDirective, LayoutAlignStyleBuilder, LayoutDirective, LayoutGapDirective, LayoutGapStyleBuilder, LayoutStyleBuilder };\n","import * as i0 from '@angular/core';\nimport { Injectable, Directive, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/flex-layout/core';\nimport { StyleBuilder, BaseDirective2, CoreModule } from '@angular/flex-layout/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\nclass GridAlignStyleBuilder extends StyleBuilder {\n    buildStyles(input) {\n        return buildCss$2(input || ROW_DEFAULT);\n    }\n}\nGridAlignStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridAlignStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridAlignDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-align';\n        this.styleCache = alignCache;\n        this.init();\n    }\n}\nGridAlignDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignDirective, deps: [{ token: i0.ElementRef }, { token: GridAlignStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridAlignDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: GridAlignDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: GridAlignStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }]; } });\nconst alignCache = new Map();\nconst inputs$a = [\n    'gdGridAlign',\n    'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl',\n    'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl',\n    'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'\n];\nconst selector$a = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\nclass DefaultGridAlignDirective extends GridAlignDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$a;\n    }\n}\nDefaultGridAlignDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridAlignDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridAlignDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultGridAlignDirective, selector: \"\\n  [gdGridAlign],\\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\\n\", inputs: { gdGridAlign: \"gdGridAlign\", \"gdGridAlign.xs\": \"gdGridAlign.xs\", \"gdGridAlign.sm\": \"gdGridAlign.sm\", \"gdGridAlign.md\": \"gdGridAlign.md\", \"gdGridAlign.lg\": \"gdGridAlign.lg\", \"gdGridAlign.xl\": \"gdGridAlign.xl\", \"gdGridAlign.lt-sm\": \"gdGridAlign.lt-sm\", \"gdGridAlign.lt-md\": \"gdGridAlign.lt-md\", \"gdGridAlign.lt-lg\": \"gdGridAlign.lt-lg\", \"gdGridAlign.lt-xl\": \"gdGridAlign.lt-xl\", \"gdGridAlign.gt-xs\": \"gdGridAlign.gt-xs\", \"gdGridAlign.gt-sm\": \"gdGridAlign.gt-sm\", \"gdGridAlign.gt-md\": \"gdGridAlign.gt-md\", \"gdGridAlign.gt-lg\": \"gdGridAlign.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridAlignDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$a, inputs: inputs$a }]\n        }] });\nfunction buildCss$2(align = '') {\n    const css = {}, [rowAxis, columnAxis] = align.split(' ');\n    // Row axis\n    switch (rowAxis) {\n        case 'end':\n            css['justify-self'] = 'end';\n            break;\n        case 'center':\n            css['justify-self'] = 'center';\n            break;\n        case 'stretch':\n            css['justify-self'] = 'stretch';\n            break;\n        case 'start':\n            css['justify-self'] = 'start';\n            break;\n        default:\n            css['justify-self'] = ROW_DEFAULT; // default row axis\n            break;\n    }\n    // Column axis\n    switch (columnAxis) {\n        case 'end':\n            css['align-self'] = 'end';\n            break;\n        case 'center':\n            css['align-self'] = 'center';\n            break;\n        case 'stretch':\n            css['align-self'] = 'stretch';\n            break;\n        case 'start':\n            css['align-self'] = 'start';\n            break;\n        default:\n            css['align-self'] = COL_DEFAULT; // default column axis\n            break;\n    }\n    return css;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_MAIN$1 = 'start';\nconst DEFAULT_CROSS$1 = 'stretch';\nclass GridAlignColumnsStyleBuilder extends StyleBuilder {\n    buildStyles(input, parent) {\n        return buildCss$1(input || `${DEFAULT_MAIN$1} ${DEFAULT_CROSS$1}`, parent.inline);\n    }\n}\nGridAlignColumnsStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignColumnsStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridAlignColumnsStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignColumnsStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignColumnsStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridAlignColumnsDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-align-columns';\n        this._inline = false;\n        this.init();\n    }\n    get inline() { return this._inline; }\n    set inline(val) { this._inline = coerceBooleanProperty(val); }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n}\nGridAlignColumnsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignColumnsDirective, deps: [{ token: i0.ElementRef }, { token: GridAlignColumnsStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridAlignColumnsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: GridAlignColumnsDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignColumnsDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: GridAlignColumnsStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }]; }, propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst alignColumnsCache = new Map();\nconst alignColumnsInlineCache = new Map();\nconst inputs$9 = [\n    'gdAlignColumns',\n    'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md',\n    'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm',\n    'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl',\n    'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md',\n    'gdAlignColumns.gt-lg'\n];\nconst selector$9 = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\nclass DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$9;\n    }\n}\nDefaultGridAlignColumnsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridAlignColumnsDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridAlignColumnsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultGridAlignColumnsDirective, selector: \"\\n  [gdAlignColumns],\\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\\n  [gdAlignColumns.gt-lg]\\n\", inputs: { gdAlignColumns: \"gdAlignColumns\", \"gdAlignColumns.xs\": \"gdAlignColumns.xs\", \"gdAlignColumns.sm\": \"gdAlignColumns.sm\", \"gdAlignColumns.md\": \"gdAlignColumns.md\", \"gdAlignColumns.lg\": \"gdAlignColumns.lg\", \"gdAlignColumns.xl\": \"gdAlignColumns.xl\", \"gdAlignColumns.lt-sm\": \"gdAlignColumns.lt-sm\", \"gdAlignColumns.lt-md\": \"gdAlignColumns.lt-md\", \"gdAlignColumns.lt-lg\": \"gdAlignColumns.lt-lg\", \"gdAlignColumns.lt-xl\": \"gdAlignColumns.lt-xl\", \"gdAlignColumns.gt-xs\": \"gdAlignColumns.gt-xs\", \"gdAlignColumns.gt-sm\": \"gdAlignColumns.gt-sm\", \"gdAlignColumns.gt-md\": \"gdAlignColumns.gt-md\", \"gdAlignColumns.gt-lg\": \"gdAlignColumns.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridAlignColumnsDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$9, inputs: inputs$9 }]\n        }] });\nfunction buildCss$1(align, inline) {\n    const css = {}, [mainAxis, crossAxis] = align.split(' ');\n    // Main axis\n    switch (mainAxis) {\n        case 'center':\n            css['align-content'] = 'center';\n            break;\n        case 'space-around':\n            css['align-content'] = 'space-around';\n            break;\n        case 'space-between':\n            css['align-content'] = 'space-between';\n            break;\n        case 'space-evenly':\n            css['align-content'] = 'space-evenly';\n            break;\n        case 'end':\n            css['align-content'] = 'end';\n            break;\n        case 'start':\n            css['align-content'] = 'start';\n            break;\n        case 'stretch':\n            css['align-content'] = 'stretch';\n            break;\n        default:\n            css['align-content'] = DEFAULT_MAIN$1; // default main axis\n            break;\n    }\n    // Cross-axis\n    switch (crossAxis) {\n        case 'start':\n            css['align-items'] = 'start';\n            break;\n        case 'center':\n            css['align-items'] = 'center';\n            break;\n        case 'end':\n            css['align-items'] = 'end';\n            break;\n        case 'stretch':\n            css['align-items'] = 'stretch';\n            break;\n        default: // 'stretch'\n            css['align-items'] = DEFAULT_CROSS$1; // default cross axis\n            break;\n    }\n    css['display'] = inline ? 'inline-grid' : 'grid';\n    return css;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\nclass GridAlignRowsStyleBuilder extends StyleBuilder {\n    buildStyles(input, parent) {\n        return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n    }\n}\nGridAlignRowsStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignRowsStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridAlignRowsStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignRowsStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignRowsStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridAlignRowsDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-align-rows';\n        this._inline = false;\n        this.init();\n    }\n    get inline() { return this._inline; }\n    set inline(val) { this._inline = coerceBooleanProperty(val); }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n}\nGridAlignRowsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignRowsDirective, deps: [{ token: i0.ElementRef }, { token: GridAlignRowsStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridAlignRowsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: GridAlignRowsDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignRowsDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: GridAlignRowsStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }]; }, propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst alignRowsCache = new Map();\nconst alignRowsInlineCache = new Map();\nconst inputs$8 = [\n    'gdAlignRows',\n    'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md',\n    'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm',\n    'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl',\n    'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md',\n    'gdAlignRows.gt-lg'\n];\nconst selector$8 = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\nclass DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$8;\n    }\n}\nDefaultGridAlignRowsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridAlignRowsDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridAlignRowsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultGridAlignRowsDirective, selector: \"\\n  [gdAlignRows],\\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\\n  [gdAlignRows.gt-lg]\\n\", inputs: { gdAlignRows: \"gdAlignRows\", \"gdAlignRows.xs\": \"gdAlignRows.xs\", \"gdAlignRows.sm\": \"gdAlignRows.sm\", \"gdAlignRows.md\": \"gdAlignRows.md\", \"gdAlignRows.lg\": \"gdAlignRows.lg\", \"gdAlignRows.xl\": \"gdAlignRows.xl\", \"gdAlignRows.lt-sm\": \"gdAlignRows.lt-sm\", \"gdAlignRows.lt-md\": \"gdAlignRows.lt-md\", \"gdAlignRows.lt-lg\": \"gdAlignRows.lt-lg\", \"gdAlignRows.lt-xl\": \"gdAlignRows.lt-xl\", \"gdAlignRows.gt-xs\": \"gdAlignRows.gt-xs\", \"gdAlignRows.gt-sm\": \"gdAlignRows.gt-sm\", \"gdAlignRows.gt-md\": \"gdAlignRows.gt-md\", \"gdAlignRows.gt-lg\": \"gdAlignRows.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridAlignRowsDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$8, inputs: inputs$8 }]\n        }] });\nfunction buildCss(align, inline) {\n    const css = {}, [mainAxis, crossAxis] = align.split(' ');\n    // Main axis\n    switch (mainAxis) {\n        case 'center':\n        case 'space-around':\n        case 'space-between':\n        case 'space-evenly':\n        case 'end':\n        case 'start':\n        case 'stretch':\n            css['justify-content'] = mainAxis;\n            break;\n        default:\n            css['justify-content'] = DEFAULT_MAIN; // default main axis\n            break;\n    }\n    // Cross-axis\n    switch (crossAxis) {\n        case 'start':\n        case 'center':\n        case 'end':\n        case 'stretch':\n            css['justify-items'] = crossAxis;\n            break;\n        default: // 'stretch'\n            css['justify-items'] = DEFAULT_CROSS; // default cross axis\n            break;\n    }\n    css['display'] = inline ? 'inline-grid' : 'grid';\n    return css;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$7 = 'auto';\nclass GridAreaStyleBuilder extends StyleBuilder {\n    buildStyles(input) {\n        return { 'grid-area': input || DEFAULT_VALUE$7 };\n    }\n}\nGridAreaStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAreaStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridAreaStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAreaStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAreaStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridAreaDirective extends BaseDirective2 {\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.DIRECTIVE_KEY = 'grid-area';\n        this.styleCache = gridAreaCache;\n        this.init();\n    }\n}\nGridAreaDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAreaDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: GridAreaStyleBuilder }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridAreaDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: GridAreaDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAreaDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: GridAreaStyleBuilder }, { type: i1.MediaMarshaller }]; } });\nconst gridAreaCache = new Map();\nconst inputs$7 = [\n    'gdArea',\n    'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl',\n    'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl',\n    'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'\n];\nconst selector$7 = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\nclass DefaultGridAreaDirective extends GridAreaDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$7;\n    }\n}\nDefaultGridAreaDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridAreaDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridAreaDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultGridAreaDirective, selector: \"\\n  [gdArea],\\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\\n\", inputs: { gdArea: \"gdArea\", \"gdArea.xs\": \"gdArea.xs\", \"gdArea.sm\": \"gdArea.sm\", \"gdArea.md\": \"gdArea.md\", \"gdArea.lg\": \"gdArea.lg\", \"gdArea.xl\": \"gdArea.xl\", \"gdArea.lt-sm\": \"gdArea.lt-sm\", \"gdArea.lt-md\": \"gdArea.lt-md\", \"gdArea.lt-lg\": \"gdArea.lt-lg\", \"gdArea.lt-xl\": \"gdArea.lt-xl\", \"gdArea.gt-xs\": \"gdArea.gt-xs\", \"gdArea.gt-sm\": \"gdArea.gt-sm\", \"gdArea.gt-md\": \"gdArea.gt-md\", \"gdArea.gt-lg\": \"gdArea.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridAreaDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$7, inputs: inputs$7 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$6 = 'none';\nconst DELIMETER = '|';\nclass GridAreasStyleBuiler extends StyleBuilder {\n    buildStyles(input, parent) {\n        const areas = (input || DEFAULT_VALUE$6).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n        return {\n            'display': parent.inline ? 'inline-grid' : 'grid',\n            'grid-template-areas': areas.join(' ')\n        };\n    }\n}\nGridAreasStyleBuiler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAreasStyleBuiler, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridAreasStyleBuiler.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAreasStyleBuiler, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAreasStyleBuiler, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridAreasDirective extends BaseDirective2 {\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.DIRECTIVE_KEY = 'grid-areas';\n        this._inline = false;\n        this.init();\n    }\n    get inline() { return this._inline; }\n    set inline(val) { this._inline = coerceBooleanProperty(val); }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? areasInlineCache : areasCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n}\nGridAreasDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAreasDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: GridAreasStyleBuiler }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridAreasDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: GridAreasDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAreasDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: GridAreasStyleBuiler }, { type: i1.MediaMarshaller }]; }, propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst areasCache = new Map();\nconst areasInlineCache = new Map();\nconst inputs$6 = [\n    'gdAreas',\n    'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl',\n    'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl',\n    'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'\n];\nconst selector$6 = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\nclass DefaultGridAreasDirective extends GridAreasDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$6;\n    }\n}\nDefaultGridAreasDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridAreasDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridAreasDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultGridAreasDirective, selector: \"\\n  [gdAreas],\\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\\n\", inputs: { gdAreas: \"gdAreas\", \"gdAreas.xs\": \"gdAreas.xs\", \"gdAreas.sm\": \"gdAreas.sm\", \"gdAreas.md\": \"gdAreas.md\", \"gdAreas.lg\": \"gdAreas.lg\", \"gdAreas.xl\": \"gdAreas.xl\", \"gdAreas.lt-sm\": \"gdAreas.lt-sm\", \"gdAreas.lt-md\": \"gdAreas.lt-md\", \"gdAreas.lt-lg\": \"gdAreas.lt-lg\", \"gdAreas.lt-xl\": \"gdAreas.lt-xl\", \"gdAreas.gt-xs\": \"gdAreas.gt-xs\", \"gdAreas.gt-sm\": \"gdAreas.gt-sm\", \"gdAreas.gt-md\": \"gdAreas.gt-md\", \"gdAreas.gt-lg\": \"gdAreas.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridAreasDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$6, inputs: inputs$6 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$5 = 'initial';\nclass GridAutoStyleBuilder extends StyleBuilder {\n    buildStyles(input, parent) {\n        let [direction, dense] = (input || DEFAULT_VALUE$5).split(' ');\n        if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n            direction = 'row';\n        }\n        dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n        return {\n            'display': parent.inline ? 'inline-grid' : 'grid',\n            'grid-auto-flow': direction + dense\n        };\n    }\n}\nGridAutoStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAutoStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridAutoStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAutoStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAutoStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridAutoDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this._inline = false;\n        this.DIRECTIVE_KEY = 'grid-auto';\n        this.init();\n    }\n    get inline() { return this._inline; }\n    set inline(val) { this._inline = coerceBooleanProperty(val); }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? autoInlineCache : autoCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n}\nGridAutoDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAutoDirective, deps: [{ token: i0.ElementRef }, { token: GridAutoStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridAutoDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: GridAutoDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAutoDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: GridAutoStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }]; }, propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst autoCache = new Map();\nconst autoInlineCache = new Map();\nconst inputs$5 = [\n    'gdAuto',\n    'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl',\n    'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl',\n    'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'\n];\nconst selector$5 = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\nclass DefaultGridAutoDirective extends GridAutoDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$5;\n    }\n}\nDefaultGridAutoDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridAutoDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridAutoDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultGridAutoDirective, selector: \"\\n  [gdAuto],\\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\\n\", inputs: { gdAuto: \"gdAuto\", \"gdAuto.xs\": \"gdAuto.xs\", \"gdAuto.sm\": \"gdAuto.sm\", \"gdAuto.md\": \"gdAuto.md\", \"gdAuto.lg\": \"gdAuto.lg\", \"gdAuto.xl\": \"gdAuto.xl\", \"gdAuto.lt-sm\": \"gdAuto.lt-sm\", \"gdAuto.lt-md\": \"gdAuto.lt-md\", \"gdAuto.lt-lg\": \"gdAuto.lt-lg\", \"gdAuto.lt-xl\": \"gdAuto.lt-xl\", \"gdAuto.gt-xs\": \"gdAuto.gt-xs\", \"gdAuto.gt-sm\": \"gdAuto.gt-sm\", \"gdAuto.gt-md\": \"gdAuto.gt-md\", \"gdAuto.gt-lg\": \"gdAuto.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridAutoDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$5, inputs: inputs$5 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$4 = 'auto';\nclass GridColumnStyleBuilder extends StyleBuilder {\n    buildStyles(input) {\n        return { 'grid-column': input || DEFAULT_VALUE$4 };\n    }\n}\nGridColumnStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridColumnStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridColumnStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridColumnStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridColumnStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridColumnDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-column';\n        this.styleCache = columnCache;\n        this.init();\n    }\n}\nGridColumnDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridColumnDirective, deps: [{ token: i0.ElementRef }, { token: GridColumnStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridColumnDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: GridColumnDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridColumnDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: GridColumnStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }]; } });\nconst columnCache = new Map();\nconst inputs$4 = [\n    'gdColumn',\n    'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl',\n    'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl',\n    'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'\n];\nconst selector$4 = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\nclass DefaultGridColumnDirective extends GridColumnDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$4;\n    }\n}\nDefaultGridColumnDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridColumnDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridColumnDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultGridColumnDirective, selector: \"\\n  [gdColumn],\\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\\n\", inputs: { gdColumn: \"gdColumn\", \"gdColumn.xs\": \"gdColumn.xs\", \"gdColumn.sm\": \"gdColumn.sm\", \"gdColumn.md\": \"gdColumn.md\", \"gdColumn.lg\": \"gdColumn.lg\", \"gdColumn.xl\": \"gdColumn.xl\", \"gdColumn.lt-sm\": \"gdColumn.lt-sm\", \"gdColumn.lt-md\": \"gdColumn.lt-md\", \"gdColumn.lt-lg\": \"gdColumn.lt-lg\", \"gdColumn.lt-xl\": \"gdColumn.lt-xl\", \"gdColumn.gt-xs\": \"gdColumn.gt-xs\", \"gdColumn.gt-sm\": \"gdColumn.gt-sm\", \"gdColumn.gt-md\": \"gdColumn.gt-md\", \"gdColumn.gt-lg\": \"gdColumn.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridColumnDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$4, inputs: inputs$4 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$3 = 'none';\nconst AUTO_SPECIFIER$1 = '!';\nclass GridColumnsStyleBuilder extends StyleBuilder {\n    buildStyles(input, parent) {\n        input = input || DEFAULT_VALUE$3;\n        let auto = false;\n        if (input.endsWith(AUTO_SPECIFIER$1)) {\n            input = input.substring(0, input.indexOf(AUTO_SPECIFIER$1));\n            auto = true;\n        }\n        const css = {\n            'display': parent.inline ? 'inline-grid' : 'grid',\n            'grid-auto-columns': '',\n            'grid-template-columns': '',\n        };\n        const key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n        css[key] = input;\n        return css;\n    }\n}\nGridColumnsStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridColumnsStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridColumnsStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridColumnsStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridColumnsStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridColumnsDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-columns';\n        this._inline = false;\n        this.init();\n    }\n    get inline() { return this._inline; }\n    set inline(val) { this._inline = coerceBooleanProperty(val); }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n}\nGridColumnsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridColumnsDirective, deps: [{ token: i0.ElementRef }, { token: GridColumnsStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridColumnsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: GridColumnsDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridColumnsDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: GridColumnsStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }]; }, propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst columnsCache = new Map();\nconst columnsInlineCache = new Map();\nconst inputs$3 = [\n    'gdColumns',\n    'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl',\n    'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl',\n    'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'\n];\nconst selector$3 = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\nclass DefaultGridColumnsDirective extends GridColumnsDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$3;\n    }\n}\nDefaultGridColumnsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridColumnsDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridColumnsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultGridColumnsDirective, selector: \"\\n  [gdColumns],\\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\\n\", inputs: { gdColumns: \"gdColumns\", \"gdColumns.xs\": \"gdColumns.xs\", \"gdColumns.sm\": \"gdColumns.sm\", \"gdColumns.md\": \"gdColumns.md\", \"gdColumns.lg\": \"gdColumns.lg\", \"gdColumns.xl\": \"gdColumns.xl\", \"gdColumns.lt-sm\": \"gdColumns.lt-sm\", \"gdColumns.lt-md\": \"gdColumns.lt-md\", \"gdColumns.lt-lg\": \"gdColumns.lt-lg\", \"gdColumns.lt-xl\": \"gdColumns.lt-xl\", \"gdColumns.gt-xs\": \"gdColumns.gt-xs\", \"gdColumns.gt-sm\": \"gdColumns.gt-sm\", \"gdColumns.gt-md\": \"gdColumns.gt-md\", \"gdColumns.gt-lg\": \"gdColumns.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridColumnsDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$3, inputs: inputs$3 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$2 = '0';\nclass GridGapStyleBuilder extends StyleBuilder {\n    buildStyles(input, parent) {\n        return {\n            'display': parent.inline ? 'inline-grid' : 'grid',\n            'grid-gap': input || DEFAULT_VALUE$2\n        };\n    }\n}\nGridGapStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridGapStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridGapStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridGapStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridGapStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridGapDirective extends BaseDirective2 {\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.DIRECTIVE_KEY = 'grid-gap';\n        this._inline = false;\n        this.init();\n    }\n    get inline() { return this._inline; }\n    set inline(val) { this._inline = coerceBooleanProperty(val); }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? gapInlineCache : gapCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n}\nGridGapDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridGapDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: GridGapStyleBuilder }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridGapDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: GridGapDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridGapDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: GridGapStyleBuilder }, { type: i1.MediaMarshaller }]; }, propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst gapCache = new Map();\nconst gapInlineCache = new Map();\nconst inputs$2 = [\n    'gdGap',\n    'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl',\n    'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl',\n    'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'\n];\nconst selector$2 = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\nclass DefaultGridGapDirective extends GridGapDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$2;\n    }\n}\nDefaultGridGapDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridGapDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridGapDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultGridGapDirective, selector: \"\\n  [gdGap],\\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\\n\", inputs: { gdGap: \"gdGap\", \"gdGap.xs\": \"gdGap.xs\", \"gdGap.sm\": \"gdGap.sm\", \"gdGap.md\": \"gdGap.md\", \"gdGap.lg\": \"gdGap.lg\", \"gdGap.xl\": \"gdGap.xl\", \"gdGap.lt-sm\": \"gdGap.lt-sm\", \"gdGap.lt-md\": \"gdGap.lt-md\", \"gdGap.lt-lg\": \"gdGap.lt-lg\", \"gdGap.lt-xl\": \"gdGap.lt-xl\", \"gdGap.gt-xs\": \"gdGap.gt-xs\", \"gdGap.gt-sm\": \"gdGap.gt-sm\", \"gdGap.gt-md\": \"gdGap.gt-md\", \"gdGap.gt-lg\": \"gdGap.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridGapDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$2, inputs: inputs$2 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$1 = 'auto';\nclass GridRowStyleBuilder extends StyleBuilder {\n    buildStyles(input) {\n        return { 'grid-row': input || DEFAULT_VALUE$1 };\n    }\n}\nGridRowStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridRowStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridRowStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridRowStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridRowStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridRowDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-row';\n        this.styleCache = rowCache;\n        this.init();\n    }\n}\nGridRowDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridRowDirective, deps: [{ token: i0.ElementRef }, { token: GridRowStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridRowDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: GridRowDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridRowDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: GridRowStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }]; } });\nconst rowCache = new Map();\nconst inputs$1 = [\n    'gdRow',\n    'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl',\n    'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl',\n    'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'\n];\nconst selector$1 = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\nclass DefaultGridRowDirective extends GridRowDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$1;\n    }\n}\nDefaultGridRowDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridRowDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridRowDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultGridRowDirective, selector: \"\\n  [gdRow],\\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\\n\", inputs: { gdRow: \"gdRow\", \"gdRow.xs\": \"gdRow.xs\", \"gdRow.sm\": \"gdRow.sm\", \"gdRow.md\": \"gdRow.md\", \"gdRow.lg\": \"gdRow.lg\", \"gdRow.xl\": \"gdRow.xl\", \"gdRow.lt-sm\": \"gdRow.lt-sm\", \"gdRow.lt-md\": \"gdRow.lt-md\", \"gdRow.lt-lg\": \"gdRow.lt-lg\", \"gdRow.lt-xl\": \"gdRow.lt-xl\", \"gdRow.gt-xs\": \"gdRow.gt-xs\", \"gdRow.gt-sm\": \"gdRow.gt-sm\", \"gdRow.gt-md\": \"gdRow.gt-md\", \"gdRow.gt-lg\": \"gdRow.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridRowDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$1, inputs: inputs$1 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\nclass GridRowsStyleBuilder extends StyleBuilder {\n    buildStyles(input, parent) {\n        input = input || DEFAULT_VALUE;\n        let auto = false;\n        if (input.endsWith(AUTO_SPECIFIER)) {\n            input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n            auto = true;\n        }\n        const css = {\n            'display': parent.inline ? 'inline-grid' : 'grid',\n            'grid-auto-rows': '',\n            'grid-template-rows': '',\n        };\n        const key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n        css[key] = input;\n        return css;\n    }\n}\nGridRowsStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridRowsStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridRowsStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridRowsStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridRowsStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridRowsDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-rows';\n        this._inline = false;\n        this.init();\n    }\n    get inline() { return this._inline; }\n    set inline(val) { this._inline = coerceBooleanProperty(val); }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n}\nGridRowsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridRowsDirective, deps: [{ token: i0.ElementRef }, { token: GridRowsStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridRowsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: GridRowsDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridRowsDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: GridRowsStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }]; }, propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst rowsCache = new Map();\nconst rowsInlineCache = new Map();\nconst inputs = [\n    'gdRows',\n    'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl',\n    'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl',\n    'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'\n];\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\nclass DefaultGridRowsDirective extends GridRowsDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs;\n    }\n}\nDefaultGridRowsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridRowsDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridRowsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultGridRowsDirective, selector: \"\\n  [gdRows],\\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\\n\", inputs: { gdRows: \"gdRows\", \"gdRows.xs\": \"gdRows.xs\", \"gdRows.sm\": \"gdRows.sm\", \"gdRows.md\": \"gdRows.md\", \"gdRows.lg\": \"gdRows.lg\", \"gdRows.xl\": \"gdRows.xl\", \"gdRows.lt-sm\": \"gdRows.lt-sm\", \"gdRows.lt-md\": \"gdRows.lt-md\", \"gdRows.lt-lg\": \"gdRows.lt-lg\", \"gdRows.lt-xl\": \"gdRows.lt-xl\", \"gdRows.gt-xs\": \"gdRows.gt-xs\", \"gdRows.gt-sm\": \"gdRows.gt-sm\", \"gdRows.gt-md\": \"gdRows.gt-md\", \"gdRows.gt-lg\": \"gdRows.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridRowsDirective, decorators: [{\n            type: Directive,\n            args: [{ selector, inputs }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ALL_DIRECTIVES = [\n    DefaultGridAlignDirective,\n    DefaultGridAlignColumnsDirective,\n    DefaultGridAlignRowsDirective,\n    DefaultGridAreaDirective,\n    DefaultGridAreasDirective,\n    DefaultGridAutoDirective,\n    DefaultGridColumnDirective,\n    DefaultGridColumnsDirective,\n    DefaultGridGapDirective,\n    DefaultGridRowDirective,\n    DefaultGridRowsDirective,\n];\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\nclass GridModule {\n}\nGridModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nGridModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridModule, declarations: [DefaultGridAlignDirective,\n        DefaultGridAlignColumnsDirective,\n        DefaultGridAlignRowsDirective,\n        DefaultGridAreaDirective,\n        DefaultGridAreasDirective,\n        DefaultGridAutoDirective,\n        DefaultGridColumnDirective,\n        DefaultGridColumnsDirective,\n        DefaultGridGapDirective,\n        DefaultGridRowDirective,\n        DefaultGridRowsDirective], imports: [CoreModule], exports: [DefaultGridAlignDirective,\n        DefaultGridAlignColumnsDirective,\n        DefaultGridAlignRowsDirective,\n        DefaultGridAreaDirective,\n        DefaultGridAreasDirective,\n        DefaultGridAutoDirective,\n        DefaultGridColumnDirective,\n        DefaultGridColumnsDirective,\n        DefaultGridGapDirective,\n        DefaultGridRowDirective,\n        DefaultGridRowsDirective] });\nGridModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridModule, imports: [[CoreModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CoreModule],\n                    declarations: [...ALL_DIRECTIVES],\n                    exports: [...ALL_DIRECTIVES]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DefaultGridAlignColumnsDirective, DefaultGridAlignDirective, DefaultGridAlignRowsDirective, DefaultGridAreaDirective, DefaultGridAreasDirective, DefaultGridAutoDirective, DefaultGridColumnDirective, DefaultGridColumnsDirective, DefaultGridGapDirective, DefaultGridRowDirective, DefaultGridRowsDirective, GridAlignColumnsDirective, GridAlignColumnsStyleBuilder, GridAlignDirective, GridAlignRowsDirective, GridAlignRowsStyleBuilder, GridAlignStyleBuilder, GridAreaDirective, GridAreaStyleBuilder, GridAreasDirective, GridAreasStyleBuiler, GridAutoDirective, GridAutoStyleBuilder, GridColumnDirective, GridColumnStyleBuilder, GridColumnsDirective, GridColumnsStyleBuilder, GridGapDirective, GridGapStyleBuilder, GridModule, GridRowDirective, GridRowStyleBuilder, GridRowsDirective, GridRowsStyleBuilder };\n","import * as i0 from '@angular/core';\nimport { Version, PLATFORM_ID, NgModule, Inject } from '@angular/core';\nimport { LAYOUT_CONFIG, DEFAULT_CONFIG, BREAKPOINT, SERVER_TOKEN } from '@angular/flex-layout/core';\nexport * from '@angular/flex-layout/core';\nimport { ExtendedModule } from '@angular/flex-layout/extended';\nexport * from '@angular/flex-layout/extended';\nimport { FlexModule } from '@angular/flex-layout/flex';\nexport * from '@angular/flex-layout/flex';\nimport { GridModule } from '@angular/flex-layout/grid';\nexport * from '@angular/flex-layout/grid';\nimport { isPlatformServer } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of Angular Flex-Layout. */\nconst VERSION = new Version('13.0.0-beta.36');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\nclass FlexLayoutModule {\n    constructor(serverModuleLoaded, platformId) {\n        if (isPlatformServer(platformId) && !serverModuleLoaded) {\n            console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n        }\n    }\n    /**\n     * Initialize the FlexLayoutModule with a set of config options,\n     * which sets the corresponding tokens accordingly\n     */\n    static withConfig(configOptions, \n    // tslint:disable-next-line:max-line-length\n    breakpoints = []) {\n        return {\n            ngModule: FlexLayoutModule,\n            providers: configOptions.serverLoaded ?\n                [\n                    { provide: LAYOUT_CONFIG, useValue: { ...DEFAULT_CONFIG, ...configOptions } },\n                    { provide: BREAKPOINT, useValue: breakpoints, multi: true },\n                    { provide: SERVER_TOKEN, useValue: true },\n                ] : [\n                { provide: LAYOUT_CONFIG, useValue: { ...DEFAULT_CONFIG, ...configOptions } },\n                { provide: BREAKPOINT, useValue: breakpoints, multi: true },\n            ]\n        };\n    }\n}\nFlexLayoutModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexLayoutModule, deps: [{ token: SERVER_TOKEN }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.NgModule });\nFlexLayoutModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexLayoutModule, imports: [FlexModule, ExtendedModule, GridModule], exports: [FlexModule, ExtendedModule, GridModule] });\nFlexLayoutModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexLayoutModule, imports: [[FlexModule, ExtendedModule, GridModule], FlexModule, ExtendedModule, GridModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexLayoutModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [FlexModule, ExtendedModule, GridModule],\n                    exports: [FlexModule, ExtendedModule, GridModule]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [SERVER_TOKEN]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FlexLayoutModule, VERSION };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getShadowRoot } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base reference size of the spinner.\n * @docs-private\n */\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n * @docs-private\n */\nconst BASE_STROKE_WIDTH = 10;\n// Boilerplate for applying mixins to MatProgressSpinner.\n/** @docs-private */\nconst _MatProgressSpinnerBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\nconst INDETERMINATE_ANIMATION_TEMPLATE = `\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n`;\n/**\n * `<mat-progress-spinner>` component.\n */\nclass MatProgressSpinner extends _MatProgressSpinnerBase {\n    constructor(elementRef, \n    /**\n     * @deprecated `_platform` parameter no longer being used.\n     * @breaking-change 14.0.0\n     */\n    _platform, _document, animationMode, defaults) {\n        super(elementRef);\n        this._document = _document;\n        this._diameter = BASE_SIZE;\n        this._value = 0;\n        /** Mode of the progress circle */\n        this.mode = 'determinate';\n        const trackedDiameters = MatProgressSpinner._diameters;\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // The base size is already inserted via the component's structural styles. We still\n        // need to track it so we don't end up adding the same styles again.\n        if (!trackedDiameters.has(_document.head)) {\n            trackedDiameters.set(_document.head, new Set([BASE_SIZE]));\n        }\n        this._noopAnimations =\n            animationMode === 'NoopAnimations' && !!defaults && !defaults._forceAnimations;\n        if (defaults) {\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() {\n        return this._diameter;\n    }\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // If this is set before `ngOnInit`, the style root may not have been resolved yet.\n        if (this._styleRoot) {\n            this._attachStyleNode();\n        }\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth || this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /** Value of the progress circle. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(newValue) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n    }\n    ngOnInit() {\n        const element = this._elementRef.nativeElement;\n        // Note that we need to look up the root node in ngOnInit, rather than the constructor, because\n        // Angular seems to create the element outside the shadow root and then moves it inside, if the\n        // node is inside an `ngIf` and a ShadowDom-encapsulated component.\n        this._styleRoot = _getShadowRoot(element) || this._document.head;\n        this._attachStyleNode();\n        element.classList.add('mat-progress-spinner-indeterminate-animation');\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    _getCircleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _getViewBox() {\n        const viewBox = this._getCircleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _getStrokeCircumference() {\n        return 2 * Math.PI * this._getCircleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _getStrokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return (this._getStrokeCircumference() * (100 - this._value)) / 100;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _getCircleStrokeWidth() {\n        return (this.strokeWidth / this.diameter) * 100;\n    }\n    /** Dynamically generates a style tag containing the correct animation for this diameter. */\n    _attachStyleNode() {\n        const styleRoot = this._styleRoot;\n        const currentDiameter = this._diameter;\n        const diameters = MatProgressSpinner._diameters;\n        let diametersForElement = diameters.get(styleRoot);\n        if (!diametersForElement || !diametersForElement.has(currentDiameter)) {\n            const styleTag = this._document.createElement('style');\n            styleTag.setAttribute('mat-spinner-animation', this._spinnerAnimationLabel);\n            styleTag.textContent = this._getAnimationText();\n            styleRoot.appendChild(styleTag);\n            if (!diametersForElement) {\n                diametersForElement = new Set();\n                diameters.set(styleRoot, diametersForElement);\n            }\n            diametersForElement.add(currentDiameter);\n        }\n    }\n    /** Generates animation styles adjusted for the spinner's diameter. */\n    _getAnimationText() {\n        const strokeCircumference = this._getStrokeCircumference();\n        return (INDETERMINATE_ANIMATION_TEMPLATE\n            // Animation should begin at 5% and end at 80%\n            .replace(/START_VALUE/g, `${0.95 * strokeCircumference}`)\n            .replace(/END_VALUE/g, `${0.2 * strokeCircumference}`)\n            .replace(/DIAMETER/g, `${this._spinnerAnimationLabel}`));\n    }\n    /** Returns the circle diameter formatted for use with the animation-name CSS property. */\n    _getSpinnerAnimationLabel() {\n        // The string of a float point number will include a period ‘.’ character,\n        // which is not valid for a CSS animation-name.\n        return this.diameter.toString().replace('.', '_');\n    }\n}\n/**\n * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n * We need to keep track of which elements the diameters were attached to, because for\n * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n * than the document head.\n */\nMatProgressSpinner._diameters = new WeakMap();\nMatProgressSpinner.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatProgressSpinner, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Component });\nMatProgressSpinner.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatProgressSpinner, selector: \"mat-progress-spinner\", inputs: { color: \"color\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", mode: \"mode\", value: \"value\" }, host: { attributes: { \"role\": \"progressbar\", \"tabindex\": \"-1\" }, properties: { \"class._mat-animation-noopable\": \"_noopAnimations\", \"style.width.px\": \"diameter\", \"style.height.px\": \"diameter\", \"attr.aria-valuemin\": \"mode === \\\"determinate\\\" ? 0 : null\", \"attr.aria-valuemax\": \"mode === \\\"determinate\\\" ? 100 : null\", \"attr.aria-valuenow\": \"mode === \\\"determinate\\\" ? value : null\", \"attr.mode\": \"mode\" }, classAttribute: \"mat-progress-spinner\" }, exportAs: [\"matProgressSpinner\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG.\\n-->\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\"\\n  aria-hidden=\\\"true\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\", styles: [\".mat-progress-spinner{display:block;position:relative;overflow:hidden}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:CanvasText}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}\\n\"], directives: [{ type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatProgressSpinner, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-progress-spinner', exportAs: 'matProgressSpinner', host: {\n                        'role': 'progressbar',\n                        'class': 'mat-progress-spinner',\n                        // set tab index to -1 so screen readers will read the aria-label\n                        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                        'tabindex': '-1',\n                        '[class._mat-animation-noopable]': `_noopAnimations`,\n                        '[style.width.px]': 'diameter',\n                        '[style.height.px]': 'diameter',\n                        '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n                        '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n                        '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                        '[attr.mode]': 'mode',\n                    }, inputs: ['color'], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG.\\n-->\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\"\\n  aria-hidden=\\\"true\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\", styles: [\".mat-progress-spinner{display:block;position:relative;overflow:hidden}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:CanvasText}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n                }] }]; }, propDecorators: { diameter: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }] } });\n/**\n * `<mat-spinner>` component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate `<mat-progress-spinner>` instance.\n */\nclass MatSpinner extends MatProgressSpinner {\n    constructor(elementRef, platform, document, animationMode, defaults) {\n        super(elementRef, platform, document, animationMode, defaults);\n        this.mode = 'indeterminate';\n    }\n}\nMatSpinner.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatSpinner, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Component });\nMatSpinner.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatSpinner, selector: \"mat-spinner\", inputs: { color: \"color\" }, host: { attributes: { \"role\": \"progressbar\", \"mode\": \"indeterminate\" }, properties: { \"class._mat-animation-noopable\": \"_noopAnimations\", \"style.width.px\": \"diameter\", \"style.height.px\": \"diameter\" }, classAttribute: \"mat-spinner mat-progress-spinner\" }, usesInheritance: true, ngImport: i0, template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG.\\n-->\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\"\\n  aria-hidden=\\\"true\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\", styles: [\".mat-progress-spinner{display:block;position:relative;overflow:hidden}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:CanvasText}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}\\n\"], directives: [{ type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatSpinner, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-spinner', host: {\n                        'role': 'progressbar',\n                        'mode': 'indeterminate',\n                        'class': 'mat-spinner mat-progress-spinner',\n                        '[class._mat-animation-noopable]': `_noopAnimations`,\n                        '[style.width.px]': 'diameter',\n                        '[style.height.px]': 'diameter',\n                    }, inputs: ['color'], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG.\\n-->\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\"\\n  aria-hidden=\\\"true\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\", styles: [\".mat-progress-spinner{display:block;position:relative;overflow:hidden}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:CanvasText}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatProgressSpinnerModule {\n}\nMatProgressSpinnerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatProgressSpinnerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatProgressSpinnerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatProgressSpinnerModule, declarations: [MatProgressSpinner, MatSpinner], imports: [MatCommonModule, CommonModule], exports: [MatProgressSpinner, MatSpinner, MatCommonModule] });\nMatProgressSpinnerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatProgressSpinnerModule, imports: [[MatCommonModule, CommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatProgressSpinnerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, CommonModule],\n                    exports: [MatProgressSpinner, MatSpinner, MatCommonModule],\n                    declarations: [MatProgressSpinner, MatSpinner],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { NumeralPipe } from '@ngx-common/pipes/numeral/numeral.pipe';\r\nimport { ClsCircularProgressBarComponent } from './cls-circular-progress-bar.component';\r\n\r\n@NgModule({\r\n\tdeclarations: [ClsCircularProgressBarComponent],\r\n\timports: [CommonModule, FlexLayoutModule, MatProgressSpinnerModule],\r\n\tproviders: [NumeralPipe],\r\n\texports: [ClsCircularProgressBarComponent],\r\n})\r\nexport class ClsCircularProgressBarModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UserPlanComponent } from './user-plan.component';\r\nimport { ClsCircularProgressBarModule } from '@ngx-common-v2/components/cls-circular-progress-bar/cls-circular-progress-bar.module';\r\nimport { SpinnerModule } from '@ngx-common/components/spinner/spinner.module';\r\n\r\n@NgModule({\r\n\tdeclarations: [UserPlanComponent],\r\n\texports: [UserPlanComponent],\r\n\timports: [CommonModule, ClsCircularProgressBarModule, SpinnerModule],\r\n})\r\nexport class UserPlanModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ExtHeaderComponent } from './ext-header.component';\r\nimport { UserMenuModule } from '../user-menu/user-menu.module';\r\nimport { UserPlanModule } from '../user-plan/user-plan.module';\r\n\r\n@NgModule({\r\n\tdeclarations: [ExtHeaderComponent],\r\n\texports: [ExtHeaderComponent],\r\n\timports: [CommonModule, UserMenuModule, UserPlanModule],\r\n})\r\nexport class ExtHeaderModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { IExtUserSubscriptionState } from '@ngx-common/models/ext-payment.model';\r\nimport { IPlatformProductsPlans } from '@ngx-common/models/pricing.model';\r\nimport { IUserBalance } from '@ngx-common/models/user-balance.models';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root',\r\n})\r\nexport class ExtPaymentService {\r\n\tprivate _userBalance$ = new BehaviorSubject<IUserBalance>(null);\r\n\tprivate _userSubscription$ = new BehaviorSubject<IExtUserSubscriptionState>(null);\r\n\r\n\tget userBalance$() {\r\n\t\treturn this._userBalance$;\r\n\t}\r\n\tget userBalance() {\r\n\t\treturn this._userBalance$.value;\r\n\t}\r\n\r\n\tget userSubscription$() {\r\n\t\treturn this._userSubscription$;\r\n\t}\r\n\tget userSubscription() {\r\n\t\treturn this._userSubscription$.value;\r\n\t}\r\n\r\n\tconstructor(private _http: HttpClient) {}\r\n\r\n\tasync getExtensionUserBalanceAsync(force = true): Promise<IUserBalance> {\r\n\t\ttry {\r\n\t\t\tif (this.userBalance && !force) {\r\n\t\t\t\treturn this.userBalance;\r\n\t\t\t}\r\n\t\t\tconst balance = await this._http\r\n\t\t\t\t.get<IUserBalance>(`${environment.extensionAPI}/v1/account/balance?force=${force}`)\r\n\t\t\t\t.toPromise();\r\n\t\t\tthis._userBalance$.next(balance);\r\n\t\t\treturn this.userBalance;\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\tasync getExtensionSubscriptionStateAsync(): Promise<IExtUserSubscriptionState> {\r\n\t\ttry {\r\n\t\t\tif (this.userSubscription) {\r\n\t\t\t\treturn this.userSubscription;\r\n\t\t\t}\r\n\t\t\treturn await this._http\r\n\t\t\t\t.get<IExtUserSubscriptionState>(`${environment.extensionAPI}/v1/account/balance/subscription`)\r\n\t\t\t\t.toPromise();\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\tasync getExtensionProductsPlansAsync(): Promise<IPlatformProductsPlans> {\r\n\t\ttry {\r\n\t\t\tconst result = await this._http\r\n\t\t\t\t.get<IPlatformProductsPlans>(`${environment.extensionAPI}/v1/pricing/plans`)\r\n\t\t\t\t.toPromise();\r\n\t\t\treturn result;\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\tasync sendCreditsRequestToOwnerAsync() {\r\n\t\ttry {\r\n\t\t\treturn await this._http.post(`${environment.extensionAPI}/v1/credits-request-to-owner`, null).toPromise();\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n}\r\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/** @docs-private */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    constructor(_document) {\n        /** The current 'ltr' or 'rtl' value. */\n        this.value = 'ltr';\n        /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n        this.change = new EventEmitter();\n        if (_document) {\n            // TODO: handle 'auto' value -\n            // We still need to account for dir=\"auto\".\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n            const bodyDir = _document.body ? _document.body.dir : null;\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            const value = bodyDir || htmlDir;\n            this.value = value === 'ltr' || value === 'rtl' ? value : 'ltr';\n        }\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDirectionality.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: Directionality, deps: [{ token: DIR_DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nDirectionality.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: Directionality, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: Directionality, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DIR_DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /** Normalized direction that accounts for invalid/unsupported values. */\n        this._dir = 'ltr';\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Event emitted when the direction changes. */\n        this.change = new EventEmitter();\n    }\n    /** @docs-private */\n    get dir() {\n        return this._dir;\n    }\n    set dir(value) {\n        const old = this._dir;\n        const normalizedValue = value ? value.toLowerCase() : value;\n        this._rawDir = value;\n        this._dir = normalizedValue === 'ltr' || normalizedValue === 'rtl' ? normalizedValue : 'ltr';\n        if (old !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /** Current layout direction of the element. */\n    get value() {\n        return this.dir;\n    }\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDir.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: Dir, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nDir.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: Dir, selector: \"[dir]\", inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, host: { properties: { \"attr.dir\": \"_rawDir\" } }, providers: [{ provide: Directionality, useExisting: Dir }], exportAs: [\"dir\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: Dir, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[dir]',\n                    providers: [{ provide: Directionality, useExisting: Dir }],\n                    host: { '[attr.dir]': '_rawDir' },\n                    exportAs: 'dir',\n                }]\n        }], propDecorators: { change: [{\n                type: Output,\n                args: ['dirChange']\n            }], dir: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BidiModule {\n}\nBidiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: BidiModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBidiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: BidiModule, declarations: [Dir], exports: [Dir] });\nBidiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: BidiModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: BidiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [Dir],\n                    declarations: [Dir],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality };\n","import { ElementRef } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Coerces a value to an array of trimmed non-empty strings.\n * Any input that is not an array, `null` or `undefined` will be turned into a string\n * via `toString()` and subsequently split with the given separator.\n * `null` and `undefined` will result in an empty array.\n * This results in the following outcomes:\n * - `null` -&gt; `[]`\n * - `[null]` -&gt; `[\"null\"]`\n * - `[\"a\", \"b \", \" \"]` -&gt; `[\"a\", \"b\"]`\n * - `[1, [2, 3]]` -&gt; `[\"1\", \"2,3\"]`\n * - `[{ a: 0 }]` -&gt; `[\"[object Object]\"]`\n * - `{ a: 0 }` -&gt; `[\"[object\", \"Object]\"]`\n *\n * Useful for defining CSS classes or table columns.\n * @param value the value to coerce into an array of strings\n * @param separator split-separator if value isn't an array\n */\nfunction coerceStringArray(value, separator = /\\s+/) {\n    const result = [];\n    if (value != null) {\n        const sourceValues = Array.isArray(value) ? value : `${value}`.split(separator);\n        for (const sourceValue of sourceValues) {\n            const trimmedString = `${sourceValue}`.trim();\n            if (trimmedString) {\n                result.push(trimmedString);\n            }\n        }\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty, coerceStringArray };\n","import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;\n}\ncatch {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        // We want to use the Angular platform check because if the Document is shimmed\n        // without the navigator, the following checks will fail. This is preferred because\n        // sometimes the Document may be shimmed without the user's knowledge or intention\n        /** Whether the Angular application is being rendered in the browser. */\n        this.isBrowser = this._platformId\n            ? isPlatformBrowser(this._platformId)\n            : typeof document === 'object' && !!document;\n        /** Whether the current browser is Microsoft Edge. */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /** Whether the current rendering engine is Microsoft Trident. */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        /** Whether the current rendering engine is Blink. */\n        this.BLINK = this.isBrowser &&\n            !!(window.chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' &&\n            !this.EDGE &&\n            !this.TRIDENT;\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        /** Whether the current rendering engine is WebKit. */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) &&\n            !this.BLINK &&\n            !this.EDGE &&\n            !this.TRIDENT;\n        /** Whether the current platform is Apple iOS. */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        /** Whether the current browser is Firefox. */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /** Whether the current platform is Android. */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        /** Whether the current browser is Safari. */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n}\nPlatform.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: Platform, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nPlatform.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: Platform, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: Platform, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass PlatformModule {\n}\nPlatformModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: PlatformModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPlatformModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: PlatformModule });\nPlatformModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: PlatformModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: PlatformModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes;\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/** @returns The input types supported by this browser. */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    }));\n    return supportedInputTypes;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: () => (supportsPassiveEvents = true),\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n    if (scrollBehaviorSupported == null) {\n        // If we're not in the browser, it can't be supported. Also check for `Element`, because\n        // some projects stub out the global `document` during SSR which can throw us off.\n        if (typeof document !== 'object' || !document || typeof Element !== 'function' || !Element) {\n            scrollBehaviorSupported = false;\n            return scrollBehaviorSupported;\n        }\n        // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n        if ('scrollBehavior' in document.documentElement.style) {\n            scrollBehaviorSupported = true;\n        }\n        else {\n            // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n            // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n            const scrollToFunction = Element.prototype.scrollTo;\n            if (scrollToFunction) {\n                // We can detect if the function has been polyfilled by calling `toString` on it. Native\n                // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n                // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n                // polyfilled functions as supporting scroll behavior.\n                scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n            }\n            else {\n                scrollBehaviorSupported = false;\n            }\n        }\n    }\n    return scrollBehaviorSupported;\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return 0 /* NORMAL */;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        const scrollContainer = document.createElement('div');\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        const content = document.createElement('div');\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = 0 /* NORMAL */;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? 1 /* NEGATED */ : 2 /* INVERTED */;\n        }\n        scrollContainer.remove();\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        // Note that this should be caught by `_supportsShadowDom`, but some\n        // teams have been able to hit this code path on unsupported browsers.\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n/**\n * Gets the currently-focused element on the page while\n * also piercing through Shadow DOM boundaries.\n */\nfunction _getFocusedElementPierceShadowDom() {\n    let activeElement = typeof document !== 'undefined' && document\n        ? document.activeElement\n        : null;\n    while (activeElement && activeElement.shadowRoot) {\n        const newActiveElement = activeElement.shadowRoot.activeElement;\n        if (newActiveElement === activeElement) {\n            break;\n        }\n        else {\n            activeElement = newActiveElement;\n        }\n    }\n    return activeElement;\n}\n/** Gets the target of an event while accounting for Shadow DOM. */\nfunction _getEventTarget(event) {\n    // If an event is bound outside the Shadow DOM, the `event.target` will\n    // point to the shadow root so we have to use `composedPath` instead.\n    return (event.composedPath ? event.composedPath()[0] : event.target);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets whether the code is currently running in a test environment. */\nfunction _isTestEnvironment() {\n    // We can't use `declare const` because it causes conflicts inside Google with the real typings\n    // for these symbols and we can't read them off the global object, because they don't appear to\n    // be attached there for some runners like Jest.\n    // (see: https://github.com/angular/components/issues/23365#issuecomment-938146643)\n    return (\n    // @ts-ignore\n    (typeof __karma__ !== 'undefined' && !!__karma__) ||\n        // @ts-ignore\n        (typeof jasmine !== 'undefined' && !!jasmine) ||\n        // @ts-ignore\n        (typeof jest !== 'undefined' && !!jest) ||\n        // @ts-ignore\n        (typeof Mocha !== 'undefined' && !!Mocha));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, _getEventTarget, _getFocusedElementPierceShadowDom, _getShadowRoot, _isTestEnvironment, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n","import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator, keySelector = identity) {\n    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n    return operate((source, subscriber) => {\n        let previousKey;\n        let first = true;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            const currentKey = keySelector(value);\n            if (first || !comparator(previousKey, currentKey)) {\n                first = false;\n                previousKey = currentKey;\n                subscriber.next(value);\n            }\n        }));\n    });\n}\nfunction defaultCompare(a, b) {\n    return a === b;\n}\n","import { coerceElement, coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\nclass MutationObserverFactory {\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n}\nMutationObserverFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MutationObserverFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMutationObserverFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MutationObserverFactory, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MutationObserverFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** An injectable service that allows watching elements for changes to their content. */\nclass ContentObserver {\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /** Keeps track of the existing MutationObservers so they can be reused. */\n        this._observedElements = new Map();\n    }\n    ngOnDestroy() {\n        this._observedElements.forEach((_, element) => this._cleanupObserver(element));\n    }\n    observe(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        return new Observable((observer) => {\n            const stream = this._observeElement(element);\n            const subscription = stream.subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            };\n        });\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            const stream = new Subject();\n            const observer = this._mutationObserverFactory.create(mutations => stream.next(mutations));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true,\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            this._observedElements.get(element).count++;\n        }\n        return this._observedElements.get(element).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            this._observedElements.get(element).count--;\n            if (!this._observedElements.get(element).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /** Clean up the underlying MutationObserver for the specified element. */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = this._observedElements.get(element);\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n}\nContentObserver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: ContentObserver, deps: [{ token: MutationObserverFactory }], target: i0.ɵɵFactoryTarget.Injectable });\nContentObserver.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: ContentObserver, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: ContentObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: MutationObserverFactory }]; } });\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** Event emitted for each change in the element's content. */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /** Debounce interval for emitting the changes. */\n    get debounce() {\n        return this._debounce;\n    }\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    _subscribe() {\n        this._unsubscribe();\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular(() => {\n            this._currentSubscription = (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        });\n    }\n    _unsubscribe() {\n        this._currentSubscription?.unsubscribe();\n    }\n}\nCdkObserveContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: CdkObserveContent, deps: [{ token: ContentObserver }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nCdkObserveContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\"], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: CdkObserveContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkObserveContent]',\n                    exportAs: 'cdkObserveContent',\n                }]\n        }], ctorParameters: function () { return [{ type: ContentObserver }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { event: [{\n                type: Output,\n                args: ['cdkObserveContent']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkObserveContentDisabled']\n            }], debounce: [{\n                type: Input\n            }] } });\nclass ObserversModule {\n}\nObserversModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: ObserversModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nObserversModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: ObserversModule, declarations: [CdkObserveContent], exports: [CdkObserveContent] });\nObserversModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: ObserversModule, providers: [MutationObserverFactory] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: ObserversModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkObserveContent],\n                    declarations: [CdkObserveContent],\n                    providers: [MutationObserverFactory],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, QueryList, Directive, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport { Subject, Subscription, BehaviorSubject, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, END, HOME, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB, ALT, CONTROL, MAC_META, META, SHIFT } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take, skip, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getFocusedElementPierceShadowDom, normalizePassiveListenerOptions, _getEventTarget, _getShadowRoot, PlatformModule } from '@angular/cdk/platform';\nimport * as i1$1 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** IDs are delimited by an empty space, as per the spec. */\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction addAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    if (ids.some(existingId => existingId.trim() == id.trim())) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    const filteredIds = ids.filter(val => val != id.trim());\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace delimited) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** ID used for the body container where all messages are appended. */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/** ID prefix used for each created message element. */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/** Attribute given to each host element that is described by a message element. */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n/** Global map of all registered message elements that have been placed into the document. */\nconst messageRegistry = new Map();\n/** Container for all registered messages. */\nlet messagesContainer = null;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    constructor(_document) {\n        this._document = _document;\n    }\n    describe(hostElement, message, role) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            setMessageId(message);\n            messageRegistry.set(key, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!messageRegistry.has(key)) {\n            this._createMessageElement(message, role);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, key)) {\n            this._addMessageReference(hostElement, key);\n        }\n    }\n    removeDescription(hostElement, message, role) {\n        if (!message || !this._isElementNode(hostElement)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (this._isElementDescribedByMessage(hostElement, key)) {\n            this._removeMessageReference(hostElement, key);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            const registeredMessage = messageRegistry.get(key);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(key);\n            }\n        }\n        if (messagesContainer && messagesContainer.childNodes.length === 0) {\n            this._deleteMessagesContainer();\n        }\n    }\n    /** Unregisters all created message elements and removes the message container. */\n    ngOnDestroy() {\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        if (messagesContainer) {\n            this._deleteMessagesContainer();\n        }\n        messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     */\n    _createMessageElement(message, role) {\n        const messageElement = this._document.createElement('div');\n        setMessageId(messageElement);\n        messageElement.textContent = message;\n        if (role) {\n            messageElement.setAttribute('role', role);\n        }\n        this._createMessagesContainer();\n        messagesContainer.appendChild(messageElement);\n        messageRegistry.set(getKey(message, role), { messageElement, referenceCount: 0 });\n    }\n    /** Deletes the message element from the global messages container. */\n    _deleteMessageElement(key) {\n        const registeredMessage = messageRegistry.get(key);\n        registeredMessage?.messageElement?.remove();\n        messageRegistry.delete(key);\n    }\n    /** Creates the global container for all aria-describedby messages. */\n    _createMessagesContainer() {\n        if (!messagesContainer) {\n            const preExistingContainer = this._document.getElementById(MESSAGES_CONTAINER_ID);\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            preExistingContainer?.remove();\n            messagesContainer = this._document.createElement('div');\n            messagesContainer.id = MESSAGES_CONTAINER_ID;\n            // We add `visibility: hidden` in order to prevent text in this container from\n            // being searchable by the browser's Ctrl + F functionality.\n            // Screen-readers will still read the description for elements with aria-describedby even\n            // when the description element is not visible.\n            messagesContainer.style.visibility = 'hidden';\n            // Even though we use `visibility: hidden`, we still apply `cdk-visually-hidden` so that\n            // the description element doesn't impact page layout.\n            messagesContainer.classList.add('cdk-visually-hidden');\n            this._document.body.appendChild(messagesContainer);\n        }\n    }\n    /** Deletes the global messages container. */\n    _deleteMessagesContainer() {\n        if (messagesContainer) {\n            messagesContainer.remove();\n            messagesContainer = null;\n        }\n    }\n    /** Removes all cdk-describedby messages that are hosted through the element. */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby').filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     */\n    _addMessageReference(element, key) {\n        const registeredMessage = messageRegistry.get(key);\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, '');\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     */\n    _removeMessageReference(element, key) {\n        const registeredMessage = messageRegistry.get(key);\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /** Returns true if the element has been described by the provided message ID. */\n    _isElementDescribedByMessage(element, key) {\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        const registeredMessage = messageRegistry.get(key);\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /** Determines whether a message can be described on a particular element. */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? !ariaLabel || ariaLabel.trim() !== trimmedMessage : false;\n    }\n    /** Checks whether a node is an Element node. */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n}\nAriaDescriber.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: AriaDescriber, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nAriaDescriber.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: AriaDescriber, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: AriaDescriber, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/** Gets a key that can be used to look messages up in the registry. */\nfunction getKey(message, role) {\n    return typeof message === 'string' ? `${role || ''}/${message}` : message;\n}\n/** Assigns a unique ID to an element, if it doesn't have one already. */\nfunction setMessageId(element) {\n    if (!element.id) {\n        element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${nextId++}`;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nclass ListKeyManager {\n    constructor(_items) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        this._homeAndEnd = false;\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (item) => item.disabled;\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /** Stream that emits whenever the active item of the list manager changes. */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            _items.changes.subscribe((newItems) => {\n                if (this._activeItem) {\n                    const itemArray = newItems.toArray();\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    skipPredicate(predicate) {\n        this._skipPredicateFn = predicate;\n        return this;\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param shouldWrap Whether the list should wrap when reaching the end.\n     */\n    withWrap(shouldWrap = true) {\n        this._wrap = shouldWrap;\n        return this;\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    withVerticalOrientation(enabled = true) {\n        this._vertical = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    withHorizontalOrientation(direction) {\n        this._horizontal = direction;\n        return this;\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     */\n    withAllowedModifierKeys(keys) {\n        this._allowedModifierKeys = keys;\n        return this;\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            this._items.length &&\n            this._items.some(item => typeof item.getLabel !== 'function')) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        this._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        this._typeaheadSubscription = this._letterKeyStream\n            .pipe(tap(letter => this._pressedLetters.push(letter)), debounceTime(debounceInterval), filter(() => this._pressedLetters.length > 0), map(() => this._pressedLetters.join('')))\n            .subscribe(inputString => {\n            const items = this._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                const index = (this._activeItemIndex + i) % items.length;\n                const item = items[index];\n                if (!this._skipPredicateFn(item) &&\n                    item.getLabel().toUpperCase().trim().indexOf(inputString) === 0) {\n                    this.setActiveItem(index);\n                    break;\n                }\n            }\n            this._pressedLetters = [];\n        });\n        return this;\n    }\n    /**\n     * Configures the key manager to activate the first and last items\n     * respectively when the Home or End key is pressed.\n     * @param enabled Whether pressing the Home or End key activates the first/last item.\n     */\n    withHomeAndEnd(enabled = true) {\n        this._homeAndEnd = enabled;\n        return this;\n    }\n    setActiveItem(item) {\n        const previousActiveItem = this._activeItem;\n        this.updateActiveItem(item);\n        if (this._activeItem !== previousActiveItem) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    onKeydown(event) {\n        const keyCode = event.keyCode;\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        const isModifierAllowed = modifiers.every(modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        });\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case HOME:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setFirstItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case END:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setLastItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /** Index of the currently active item. */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /** The active item. */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping() {\n        return this._pressedLetters.length > 0;\n    }\n    /** Sets the active item to the first enabled item in the list. */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /** Sets the active item to the last enabled item in the list. */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    /** Sets the active item to the next enabled item in the list. */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /** Sets the active item to a previous enabled item in the list. */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap\n            ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    updateActiveItem(item) {\n        const itemArray = this._getItemsArray();\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     */\n    _setActiveInWrapMode(delta) {\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            const index = (this._activeItemIndex + delta * i + items.length) % items.length;\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /** Returns the items as an array. */\n    _getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    setFocusOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for the isFocusable method.\n */\nclass IsFocusableConfig {\n    constructor() {\n        /**\n         * Whether to count an element as focusable even if it is not currently visible.\n         */\n        this.ignoreVisibility = false;\n    }\n}\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Browsers disable tabbing to an element inside of an invisible frame.\n            if (!this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        let nodeName = element.nodeName.toLowerCase();\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe' || nodeName === 'object') {\n            // The frame or object's content may be tabbable depending on the content, but it's\n            // not possibly to reliably detect the content of the frames. We always consider such\n            // elements as non-tabbable.\n            return false;\n        }\n        // In iOS, the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        if (nodeName === 'audio') {\n            // Audio elements without controls enabled are never tabbable, regardless\n            // of the tabindex attribute explicitly being set.\n            if (!element.hasAttribute('controls')) {\n                return false;\n            }\n            // Audio elements with controls are by default tabbable unless the\n            // tabindex attribute is set to `-1` explicitly.\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'video') {\n            // For all video elements, if the tabindex attribute is set to `-1`, the video\n            // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\n            // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\n            // tabindex attribute is the source of truth here.\n            if (tabIndexValue === -1) {\n                return false;\n            }\n            // If the tabindex is explicitly set, and not `-1` (as per check before), the\n            // video element is always tabbable (regardless of whether it has controls or not).\n            if (tabIndexValue !== null) {\n                return true;\n            }\n            // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\n            // has controls enabled. Firefox is special as videos are always tabbable regardless\n            // of whether there are controls or not.\n            return this._platform.FIREFOX || element.hasAttribute('controls');\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @param config The config object with options to customize this method's behavior\n     * @returns Whether the element is focusable.\n     */\n    isFocusable(element, config) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return (isPotentiallyFocusable(element) &&\n            !this.isDisabled(element) &&\n            (config?.ignoreVisibility || this.isVisible(element)));\n    }\n}\nInteractivityChecker.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: InteractivityChecker, deps: [{ token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nInteractivityChecker.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: InteractivityChecker, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: InteractivityChecker, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }]; } });\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window) {\n    try {\n        return window.frameElement;\n    }\n    catch {\n        return null;\n    }\n}\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth ||\n        element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/** Gets whether an element's  */\nfunction isNativeFormElement(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    return (nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea');\n}\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/** Gets whether an element is an input element. */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    let tabIndex = element.getAttribute('tabindex');\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    let inputType = nodeName === 'input' && element.type;\n    return (inputType === 'text' ||\n        inputType === 'password' ||\n        nodeName === 'select' ||\n        nodeName === 'textarea');\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return (isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element));\n}\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return (node.ownerDocument && node.ownerDocument.defaultView) || window;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to be misaligned.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrap {\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = () => this.focusLastTabbableElement();\n        this.endAnchorListener = () => this.focusFirstTabbableElement();\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    /** Destroys the focus trap by cleaning up the anchors. */\n    destroy() {\n        const startAnchor = this._startAnchor;\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            startAnchor.remove();\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            endAnchor.remove();\n        }\n        this._startAnchor = this._endAnchor = null;\n        this._hasAttached = false;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @returns Whether the focus trap managed to attach successfully. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                this._startAnchor.addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                this._endAnchor.addEventListener('focus', this.endAnchorListener);\n            }\n        });\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore(this._startAnchor, this._element);\n            this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses the first tabbable element.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusInitialElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusInitialElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusFirstTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusFirstTabbableElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusLastTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusLastTabbableElement(options)));\n        });\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @param bound The boundary to get (start or end of trapped region).\n     * @returns The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` + `[cdkFocusRegion${bound}], ` + `[cdk-focus-${bound}]`);\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            for (let i = 0; i < markers.length; i++) {\n                // @breaking-change 8.0.0\n                if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                        `attribute will be removed in 8.0.0.`, markers[i]);\n                }\n                else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                        `will be removed in 8.0.0.`, markers[i]);\n                }\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length\n            ? markers[markers.length - 1]\n            : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @returns Whether focus was moved successfully.\n     */\n    focusInitialElement(options) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` + `[cdkFocusInitial]`);\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            if (!this._checker.isFocusable(redirectToElement)) {\n                const focusableChild = this._getFirstTabbableElement(redirectToElement);\n                focusableChild?.focus(options);\n                return !!focusableChild;\n            }\n            redirectToElement.focus(options);\n            return true;\n        }\n        return this.focusFirstTabbableElement(options);\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusFirstTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusLastTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfully been attached.\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /** Get the first tabbable element from a DOM subtree (inclusive). */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        const children = root.children;\n        for (let i = 0; i < children.length; i++) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getFirstTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Get the last tabbable element from a DOM subtree (inclusive). */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        const children = root.children;\n        for (let i = children.length - 1; i >= 0; i--) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getLastTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Creates an anchor element. */\n    _createAnchor() {\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @param isEnabled Whether the focus trap is enabled.\n     * @param anchor Anchor on which to toggle the tabindex.\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n     * @param enabled: Whether the anchors should trap Tab.\n     */\n    toggleAnchors(enabled) {\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(enabled, this._startAnchor);\n            this._toggleAnchorTabIndex(enabled, this._endAnchor);\n        }\n    }\n    /** Executes a function when the zone is stable. */\n    _executeOnStable(fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.pipe(take(1)).subscribe(fn);\n        }\n    }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrapFactory {\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n}\nFocusTrapFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: FocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nFocusTrapFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: FocusTrapFactory, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: FocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/** Directive for trapping focus within a region. */\nclass CdkTrapFocus {\n    constructor(_elementRef, _focusTrapFactory, \n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 13.0.0\n     */\n    _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n        this._previouslyFocusedElement = null;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this.focusTrap.enabled;\n    }\n    set enabled(value) {\n        this.focusTrap.enabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the directive should automatically move focus into the trapped region upon\n     * initialization and return focus to the previous activeElement upon destruction.\n     */\n    get autoCapture() {\n        return this._autoCapture;\n    }\n    set autoCapture(value) {\n        this._autoCapture = coerceBooleanProperty(value);\n    }\n    ngOnDestroy() {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    ngAfterContentInit() {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._captureFocus();\n        }\n    }\n    ngDoCheck() {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n    ngOnChanges(changes) {\n        const autoCaptureChange = changes['autoCapture'];\n        if (autoCaptureChange &&\n            !autoCaptureChange.firstChange &&\n            this.autoCapture &&\n            this.focusTrap.hasAttached()) {\n            this._captureFocus();\n        }\n    }\n    _captureFocus() {\n        this._previouslyFocusedElement = _getFocusedElementPierceShadowDom();\n        this.focusTrap.focusInitialElementWhenReady();\n    }\n}\nCdkTrapFocus.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: CdkTrapFocus, deps: [{ token: i0.ElementRef }, { token: FocusTrapFactory }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nCdkTrapFocus.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: CdkTrapFocus, selector: \"[cdkTrapFocus]\", inputs: { enabled: [\"cdkTrapFocus\", \"enabled\"], autoCapture: [\"cdkTrapFocusAutoCapture\", \"autoCapture\"] }, exportAs: [\"cdkTrapFocus\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: CdkTrapFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTrapFocus]',\n                    exportAs: 'cdkTrapFocus',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: FocusTrapFactory }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { enabled: [{\n                type: Input,\n                args: ['cdkTrapFocus']\n            }], autoCapture: [{\n                type: Input,\n                args: ['cdkTrapFocusAutoCapture']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n    constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {\n        super(_element, _checker, _ngZone, _document, config.defer);\n        this._focusTrapManager = _focusTrapManager;\n        this._inertStrategy = _inertStrategy;\n        this._focusTrapManager.register(this);\n    }\n    /** Whether the FocusTrap is enabled. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            this._focusTrapManager.register(this);\n        }\n        else {\n            this._focusTrapManager.deregister(this);\n        }\n    }\n    /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n    destroy() {\n        this._focusTrapManager.deregister(this);\n        super.destroy();\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _enable() {\n        this._inertStrategy.preventFocus(this);\n        this.toggleAnchors(true);\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _disable() {\n        this._inertStrategy.allowFocus(this);\n        this.toggleAnchors(false);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the inert strategy. */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n    constructor() {\n        /** Focus event handler. */\n        this._listener = null;\n    }\n    /** Adds a document event listener that keeps focus inside the FocusTrap. */\n    preventFocus(focusTrap) {\n        // Ensure there's only one listener per document\n        if (this._listener) {\n            focusTrap._document.removeEventListener('focus', this._listener, true);\n        }\n        this._listener = (e) => this._trapFocus(focusTrap, e);\n        focusTrap._ngZone.runOutsideAngular(() => {\n            focusTrap._document.addEventListener('focus', this._listener, true);\n        });\n    }\n    /** Removes the event listener added in preventFocus. */\n    allowFocus(focusTrap) {\n        if (!this._listener) {\n            return;\n        }\n        focusTrap._document.removeEventListener('focus', this._listener, true);\n        this._listener = null;\n    }\n    /**\n     * Refocuses the first element in the FocusTrap if the focus event target was outside\n     * the FocusTrap.\n     *\n     * This is an event listener callback. The event listener is added in runOutsideAngular,\n     * so all this code runs outside Angular as well.\n     */\n    _trapFocus(focusTrap, event) {\n        const target = event.target;\n        const focusTrapRoot = focusTrap._element;\n        // Don't refocus if target was in an overlay, because the overlay might be associated\n        // with an element inside the FocusTrap, ex. mat-select.\n        if (target && !focusTrapRoot.contains(target) && !target.closest?.('div.cdk-overlay-pane')) {\n            // Some legacy FocusTrap usages have logic that focuses some element on the page\n            // just before FocusTrap is destroyed. For backwards compatibility, wait\n            // to be sure FocusTrap is still enabled before refocusing.\n            setTimeout(() => {\n                // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n                if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n                    focusTrap.focusFirstTabbableElement();\n                }\n            });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\nclass FocusTrapManager {\n    constructor() {\n        // A stack of the FocusTraps on the page. Only the FocusTrap at the\n        // top of the stack is active.\n        this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     */\n    register(focusTrap) {\n        // Dedupe focusTraps that register multiple times.\n        this._focusTrapStack = this._focusTrapStack.filter(ft => ft !== focusTrap);\n        let stack = this._focusTrapStack;\n        if (stack.length) {\n            stack[stack.length - 1]._disable();\n        }\n        stack.push(focusTrap);\n        focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     */\n    deregister(focusTrap) {\n        focusTrap._disable();\n        const stack = this._focusTrapStack;\n        const i = stack.indexOf(focusTrap);\n        if (i !== -1) {\n            stack.splice(i, 1);\n            if (stack.length) {\n                stack[stack.length - 1]._enable();\n            }\n        }\n    }\n}\nFocusTrapManager.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: FocusTrapManager, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nFocusTrapManager.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: FocusTrapManager, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: FocusTrapManager, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Factory that allows easy instantiation of configurable focus traps. */\nclass ConfigurableFocusTrapFactory {\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._focusTrapManager = _focusTrapManager;\n        this._document = _document;\n        // TODO split up the strategies into different modules, similar to DateAdapter.\n        this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    create(element, config = { defer: false }) {\n        let configObject;\n        if (typeof config === 'boolean') {\n            configObject = { defer: config };\n        }\n        else {\n            configObject = config;\n        }\n        return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);\n    }\n}\nConfigurableFocusTrapFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: ConfigurableFocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: FocusTrapManager }, { token: DOCUMENT }, { token: FOCUS_TRAP_INERT_STRATEGY, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nConfigurableFocusTrapFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: ConfigurableFocusTrapFactory, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: ConfigurableFocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: FocusTrapManager }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FOCUS_TRAP_INERT_STRATEGY]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets whether an event could be a faked `mousedown` event dispatched by a screen reader. */\nfunction isFakeMousedownFromScreenReader(event) {\n    // Some screen readers will dispatch a fake `mousedown` event when pressing enter or space on\n    // a clickable element. We can distinguish these events when both `offsetX` and `offsetY` are\n    // zero. Note that there's an edge case where the user could click the 0x0 spot of the screen\n    // themselves, but that is unlikely to contain interaction elements. Historically we used to\n    // check `event.buttons === 0`, however that no longer works on recent versions of NVDA.\n    return event.offsetX === 0 && event.offsetY === 0;\n}\n/** Gets whether an event could be a faked `touchstart` event dispatched by a screen reader. */\nfunction isFakeTouchstartFromScreenReader(event) {\n    const touch = (event.touches && event.touches[0]) || (event.changedTouches && event.changedTouches[0]);\n    // A fake `touchstart` can be distinguished from a real one by looking at the `identifier`\n    // which is typically >= 0 on a real device versus -1 from a screen reader. Just to be safe,\n    // we can also look at `radiusX` and `radiusY`. This behavior was observed against a Windows 10\n    // device with a touch screen running NVDA v2020.4 and Firefox 85 or Chrome 88.\n    return (!!touch &&\n        touch.identifier === -1 &&\n        (touch.radiusX == null || touch.radiusX === 1) &&\n        (touch.radiusY == null || touch.radiusY === 1));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injectable options for the InputModalityDetector. These are shallowly merged with the default\n * options.\n */\nconst INPUT_MODALITY_DETECTOR_OPTIONS = new InjectionToken('cdk-input-modality-detector-options');\n/**\n * Default options for the InputModalityDetector.\n *\n * Modifier keys are ignored by default (i.e. when pressed won't cause the service to detect\n * keyboard input modality) for two reasons:\n *\n * 1. Modifier keys are commonly used with mouse to perform actions such as 'right click' or 'open\n *    in new tab', and are thus less representative of actual keyboard interaction.\n * 2. VoiceOver triggers some keyboard events when linearly navigating with Control + Option (but\n *    confusingly not with Caps Lock). Thus, to have parity with other screen readers, we ignore\n *    these keys so as to not update the input modality.\n *\n * Note that we do not by default ignore the right Meta key on Safari because it has the same key\n * code as the ContextMenu key on other browsers. When we switch to using event.key, we can\n * distinguish between the two.\n */\nconst INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS = {\n    ignoreKeys: [ALT, CONTROL, MAC_META, META, SHIFT],\n};\n/**\n * The amount of time needed to pass after a touchstart event in order for a subsequent mousedown\n * event to be attributed as mouse and not touch.\n *\n * This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n * that a value of around 650ms seems appropriate.\n */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Event listener options that enable capturing and also mark the listener as passive if the browser\n * supports it.\n */\nconst modalityEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/**\n * Service that detects the user's input modality.\n *\n * This service does not update the input modality when a user navigates with a screen reader\n * (e.g. linear navigation with VoiceOver, object navigation / browse mode with NVDA, virtual PC\n * cursor mode with JAWS). This is in part due to technical limitations (i.e. keyboard events do not\n * fire as expected in these modes) but is also arguably the correct behavior. Navigating with a\n * screen reader is akin to visually scanning a page, and should not be interpreted as actual user\n * input interaction.\n *\n * When a user is not navigating but *interacting* with a screen reader, this service attempts to\n * update the input modality to keyboard, but in general this service's behavior is largely\n * undefined.\n */\nclass InputModalityDetector {\n    constructor(_platform, ngZone, document, options) {\n        this._platform = _platform;\n        /**\n         * The most recently detected input modality event target. Is null if no input modality has been\n         * detected or if the associated event target is null for some unknown reason.\n         */\n        this._mostRecentTarget = null;\n        /** The underlying BehaviorSubject that emits whenever an input modality is detected. */\n        this._modality = new BehaviorSubject(null);\n        /**\n         * The timestamp of the last touch input modality. Used to determine whether mousedown events\n         * should be attributed to mouse or touch.\n         */\n        this._lastTouchMs = 0;\n        /**\n         * Handles keydown events. Must be an arrow function in order to preserve the context when it gets\n         * bound.\n         */\n        this._onKeydown = (event) => {\n            // If this is one of the keys we should ignore, then ignore it and don't update the input\n            // modality to keyboard.\n            if (this._options?.ignoreKeys?.some(keyCode => keyCode === event.keyCode)) {\n                return;\n            }\n            this._modality.next('keyboard');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles mousedown events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onMousedown = (event) => {\n            // Touches trigger both touch and mouse events, so we need to distinguish between mouse events\n            // that were triggered via mouse vs touch. To do so, check if the mouse event occurs closely\n            // after the previous touch event.\n            if (Date.now() - this._lastTouchMs < TOUCH_BUFFER_MS) {\n                return;\n            }\n            // Fake mousedown events are fired by some screen readers when controls are activated by the\n            // screen reader. Attribute them to keyboard input modality.\n            this._modality.next(isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles touchstart events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onTouchstart = (event) => {\n            // Same scenario as mentioned in _onMousedown, but on touch screen devices, fake touchstart\n            // events are fired. Again, attribute to keyboard input modality.\n            if (isFakeTouchstartFromScreenReader(event)) {\n                this._modality.next('keyboard');\n                return;\n            }\n            // Store the timestamp of this touch event, as it's used to distinguish between mouse events\n            // triggered via mouse vs touch.\n            this._lastTouchMs = Date.now();\n            this._modality.next('touch');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        this._options = {\n            ...INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS,\n            ...options,\n        };\n        // Skip the first emission as it's null.\n        this.modalityDetected = this._modality.pipe(skip(1));\n        this.modalityChanged = this.modalityDetected.pipe(distinctUntilChanged());\n        // If we're not in a browser, this service should do nothing, as there's no relevant input\n        // modality to detect.\n        if (_platform.isBrowser) {\n            ngZone.runOutsideAngular(() => {\n                document.addEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n                document.addEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n                document.addEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n            });\n        }\n    }\n    /** The most recently detected input modality. */\n    get mostRecentModality() {\n        return this._modality.value;\n    }\n    ngOnDestroy() {\n        this._modality.complete();\n        if (this._platform.isBrowser) {\n            document.removeEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n            document.removeEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n            document.removeEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n        }\n    }\n}\nInputModalityDetector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: InputModalityDetector, deps: [{ token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT }, { token: INPUT_MODALITY_DETECTOR_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nInputModalityDetector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: InputModalityDetector, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: InputModalityDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: i0.NgZone }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [INPUT_MODALITY_DETECTOR_OPTIONS]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/** @docs-private */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass LiveAnnouncer {\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    announce(message, ...args) {\n        const defaultOptions = this._defaultOptions;\n        let politeness;\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                defaultOptions && defaultOptions.politeness ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                clearTimeout(this._previousTimeout);\n                this._previousTimeout = setTimeout(() => {\n                    this._liveElement.textContent = message;\n                    resolve();\n                    if (typeof duration === 'number') {\n                        this._previousTimeout = setTimeout(() => this.clear(), duration);\n                    }\n                }, 100);\n            });\n        });\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        this._liveElement?.remove();\n        this._liveElement = null;\n    }\n    _createLiveElement() {\n        const elementClass = 'cdk-live-announcer-element';\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            previousElements[i].remove();\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n}\nLiveAnnouncer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: LiveAnnouncer, deps: [{ token: LIVE_ANNOUNCER_ELEMENT_TOKEN, optional: true }, { token: i0.NgZone }, { token: DOCUMENT }, { token: LIVE_ANNOUNCER_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nLiveAnnouncer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: LiveAnnouncer, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: LiveAnnouncer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIVE_ANNOUNCER_ELEMENT_TOKEN]\n                }] }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS]\n                }] }]; } });\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'polite';\n    }\n    /** The aria-live politeness level to use when announcing messages. */\n    get politeness() {\n        return this._politeness;\n    }\n    set politeness(value) {\n        this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular(() => {\n                return this._contentObserver.observe(this._elementRef).subscribe(() => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness);\n                        this._previousAnnouncedText = elementText;\n                    }\n                });\n            });\n        }\n    }\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n}\nCdkAriaLive.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: CdkAriaLive, deps: [{ token: i0.ElementRef }, { token: LiveAnnouncer }, { token: i1$1.ContentObserver }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nCdkAriaLive.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: CdkAriaLive, selector: \"[cdkAriaLive]\", inputs: { politeness: [\"cdkAriaLive\", \"politeness\"] }, exportAs: [\"cdkAriaLive\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: CdkAriaLive, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkAriaLive]',\n                    exportAs: 'cdkAriaLive',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: LiveAnnouncer }, { type: i1$1.ContentObserver }, { type: i0.NgZone }]; }, propDecorators: { politeness: [{\n                type: Input,\n                args: ['cdkAriaLive']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** InjectionToken for FocusMonitorOptions. */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\nclass FocusMonitor {\n    constructor(_ngZone, _platform, _inputModalityDetector, \n    /** @breaking-change 11.0.0 make document required */\n    document, options) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._inputModalityDetector = _inputModalityDetector;\n        /** The focus origin that the next focus event is a result of. */\n        this._origin = null;\n        /** Whether the window has just been focused. */\n        this._windowFocused = false;\n        /**\n         * Whether the origin was determined via a touch interaction. Necessary as properly attributing\n         * focus events to touch interactions requires special logic.\n         */\n        this._originFromTouchInteraction = false;\n        /** Map of elements being monitored to their info. */\n        this._elementInfo = new Map();\n        /** The number of elements currently being monitored. */\n        this._monitoredElementCount = 0;\n        /**\n         * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n         * as well as the number of monitored elements that they contain. We have to treat focus/blur\n         * handlers differently from the rest of the events, because the browser won't emit events\n         * to the document when focus moves inside of a shadow root.\n         */\n        this._rootNodeFocusListenerCount = new Map();\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = setTimeout(() => (this._windowFocused = false));\n        };\n        /** Subject for stopping our InputModalityDetector subscription. */\n        this._stopInputModalityDetector = new Subject();\n        /**\n         * Event listener for `focus` and 'blur' events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._rootNodeFocusAndBlurListener = (event) => {\n            const target = _getEventTarget(event);\n            const handler = event.type === 'focus' ? this._onFocus : this._onBlur;\n            // We need to walk up the ancestor chain in order to support `checkChildren`.\n            for (let element = target; element; element = element.parentElement) {\n                handler.call(this, event, element);\n            }\n        };\n        this._document = document;\n        this._detectionMode = options?.detectionMode || 0 /* IMMEDIATE */;\n    }\n    monitor(element, checkChildren = false) {\n        const nativeElement = coerceElement(element);\n        // Do nothing if we're not on the browser platform or the passed in node isn't an element.\n        if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {\n            return of(null);\n        }\n        // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n        // the shadow root, rather than the `document`, because the browser won't emit focus events\n        // to the `document`, if focus is moving within the same shadow root.\n        const rootNode = _getShadowRoot(nativeElement) || this._getDocument();\n        const cachedInfo = this._elementInfo.get(nativeElement);\n        // Check if we're already monitoring this element.\n        if (cachedInfo) {\n            if (checkChildren) {\n                // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n                // observers into ones that behave as if `checkChildren` was turned on. We need a more\n                // robust solution.\n                cachedInfo.checkChildren = true;\n            }\n            return cachedInfo.subject;\n        }\n        // Create monitored element info.\n        const info = {\n            checkChildren: checkChildren,\n            subject: new Subject(),\n            rootNode,\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._registerGlobalListeners(info);\n        return info.subject;\n    }\n    stopMonitoring(element) {\n        const nativeElement = coerceElement(element);\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._removeGlobalListeners(elementInfo);\n        }\n    }\n    focusVia(element, origin, options) {\n        const nativeElement = coerceElement(element);\n        const focusedElement = this._getDocument().activeElement;\n        // If the element is focused already, calling `focus` again won't trigger the event listener\n        // which means that the focus classes won't be updated. If that's the case, update the classes\n        // directly without waiting for an event.\n        if (nativeElement === focusedElement) {\n            this._getClosestElementsInfo(nativeElement).forEach(([currentElement, info]) => this._originChanged(currentElement, origin, info));\n        }\n        else {\n            this._setOrigin(origin);\n            // `focus` isn't available on the server\n            if (typeof nativeElement.focus === 'function') {\n                nativeElement.focus(options);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    _getFocusOrigin(focusEventTarget) {\n        if (this._origin) {\n            // If the origin was realized via a touch interaction, we need to perform additional checks\n            // to determine whether the focus origin should be attributed to touch or program.\n            if (this._originFromTouchInteraction) {\n                return this._shouldBeAttributedToTouch(focusEventTarget) ? 'touch' : 'program';\n            }\n            else {\n                return this._origin;\n            }\n        }\n        // If the window has just regained focus, we can restore the most recent origin from before the\n        // window blurred. Otherwise, we've reached the point where we can't identify the source of the\n        // focus. This typically means one of two things happened:\n        //\n        // 1) The element was programmatically focused, or\n        // 2) The element was focused via screen reader navigation (which generally doesn't fire\n        //    events).\n        //\n        // Because we can't distinguish between these two cases, we default to setting `program`.\n        return this._windowFocused && this._lastFocusOrigin ? this._lastFocusOrigin : 'program';\n    }\n    /**\n     * Returns whether the focus event should be attributed to touch. Recall that in IMMEDIATE mode, a\n     * touch origin isn't immediately reset at the next tick (see _setOrigin). This means that when we\n     * handle a focus event following a touch interaction, we need to determine whether (1) the focus\n     * event was directly caused by the touch interaction or (2) the focus event was caused by a\n     * subsequent programmatic focus call triggered by the touch interaction.\n     * @param focusEventTarget The target of the focus event under examination.\n     */\n    _shouldBeAttributedToTouch(focusEventTarget) {\n        // Please note that this check is not perfect. Consider the following edge case:\n        //\n        // <div #parent tabindex=\"0\">\n        //   <div #child tabindex=\"0\" (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // Suppose there is a FocusMonitor in IMMEDIATE mode attached to #parent. When the user touches\n        // #child, #parent is programmatically focused. This code will attribute the focus to touch\n        // instead of program. This is a relatively minor edge-case that can be worked around by using\n        // focusVia(parent, 'program') to focus #parent.\n        return (this._detectionMode === 1 /* EVENTUAL */ ||\n            !!focusEventTarget?.contains(this._inputModalityDetector._mostRecentTarget));\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param element The element to update the classes on.\n     * @param origin The focus origin.\n     */\n    _setClasses(element, origin) {\n        element.classList.toggle('cdk-focused', !!origin);\n        element.classList.toggle('cdk-touch-focused', origin === 'touch');\n        element.classList.toggle('cdk-keyboard-focused', origin === 'keyboard');\n        element.classList.toggle('cdk-mouse-focused', origin === 'mouse');\n        element.classList.toggle('cdk-program-focused', origin === 'program');\n    }\n    /**\n     * Updates the focus origin. If we're using immediate detection mode, we schedule an async\n     * function to clear the origin at the end of a timeout. The duration of the timeout depends on\n     * the origin being set.\n     * @param origin The origin to set.\n     * @param isFromInteraction Whether we are setting the origin from an interaction event.\n     */\n    _setOrigin(origin, isFromInteraction = false) {\n        this._ngZone.runOutsideAngular(() => {\n            this._origin = origin;\n            this._originFromTouchInteraction = origin === 'touch' && isFromInteraction;\n            // If we're in IMMEDIATE mode, reset the origin at the next tick (or in `TOUCH_BUFFER_MS` ms\n            // for a touch event). We reset the origin at the next tick because Firefox focuses one tick\n            // after the interaction event. We wait `TOUCH_BUFFER_MS` ms before resetting the origin for\n            // a touch event because when a touch event is fired, the associated focus event isn't yet in\n            // the event queue. Before doing so, clear any pending timeouts.\n            if (this._detectionMode === 0 /* IMMEDIATE */) {\n                clearTimeout(this._originTimeoutId);\n                const ms = this._originFromTouchInteraction ? TOUCH_BUFFER_MS : 1;\n                this._originTimeoutId = setTimeout(() => (this._origin = null), ms);\n            }\n        });\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @param event The focus event.\n     * @param element The monitored element.\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        const elementInfo = this._elementInfo.get(element);\n        const focusEventTarget = _getEventTarget(event);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== focusEventTarget)) {\n            return;\n        }\n        this._originChanged(element, this._getFocusOrigin(focusEventTarget), elementInfo);\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo ||\n            (elementInfo.checkChildren &&\n                event.relatedTarget instanceof Node &&\n                element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo.subject, null);\n    }\n    _emitOrigin(subject, origin) {\n        this._ngZone.run(() => subject.next(origin));\n    }\n    _registerGlobalListeners(elementInfo) {\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        const rootNode = elementInfo.rootNode;\n        const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n        if (!rootNodeFocusListeners) {\n            this._ngZone.runOutsideAngular(() => {\n                rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n            });\n        }\n        this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount === 1) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                window.addEventListener('focus', this._windowFocusListener);\n            });\n            // The InputModalityDetector is also just a collection of global listeners.\n            this._inputModalityDetector.modalityDetected\n                .pipe(takeUntil(this._stopInputModalityDetector))\n                .subscribe(modality => {\n                this._setOrigin(modality, true /* isFromInteraction */);\n            });\n        }\n    }\n    _removeGlobalListeners(elementInfo) {\n        const rootNode = elementInfo.rootNode;\n        if (this._rootNodeFocusListenerCount.has(rootNode)) {\n            const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode);\n            if (rootNodeFocusListeners > 1) {\n                this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n            }\n            else {\n                rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                this._rootNodeFocusListenerCount.delete(rootNode);\n            }\n        }\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            const window = this._getWindow();\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Equivalently, stop our InputModalityDetector subscription.\n            this._stopInputModalityDetector.next();\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n    /** Updates all the state on an element once its focus origin has changed. */\n    _originChanged(element, origin, elementInfo) {\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo.subject, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Collects the `MonitoredElementInfo` of a particular element and\n     * all of its ancestors that have enabled `checkChildren`.\n     * @param element Element from which to start the search.\n     */\n    _getClosestElementsInfo(element) {\n        const results = [];\n        this._elementInfo.forEach((info, currentElement) => {\n            if (currentElement === element || (info.checkChildren && currentElement.contains(element))) {\n                results.push([currentElement, info]);\n            }\n        });\n        return results;\n    }\n}\nFocusMonitor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: FocusMonitor, deps: [{ token: i0.NgZone }, { token: i1.Platform }, { token: InputModalityDetector }, { token: DOCUMENT, optional: true }, { token: FOCUS_MONITOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nFocusMonitor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: FocusMonitor, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: FocusMonitor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i1.Platform }, { type: InputModalityDetector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FOCUS_MONITOR_DEFAULT_OPTIONS]\n                }] }]; } });\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this.cdkFocusChange = new EventEmitter();\n    }\n    ngAfterViewInit() {\n        const element = this._elementRef.nativeElement;\n        this._monitorSubscription = this._focusMonitor\n            .monitor(element, element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(origin => this.cdkFocusChange.emit(origin));\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        if (this._monitorSubscription) {\n            this._monitorSubscription.unsubscribe();\n        }\n    }\n}\nCdkMonitorFocus.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: CdkMonitorFocus, deps: [{ token: i0.ElementRef }, { token: FocusMonitor }], target: i0.ɵɵFactoryTarget.Directive });\nCdkMonitorFocus.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: { cdkFocusChange: \"cdkFocusChange\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: CdkMonitorFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: FocusMonitor }]; }, propDecorators: { cdkFocusChange: [{\n                type: Output\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/** CSS class applied to the document body when in high-contrast mode. */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nclass HighContrastModeDetector {\n    constructor(_platform, document) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    /** Gets the current high-contrast-mode for the page. */\n    getHighContrastMode() {\n        if (!this._platform.isBrowser) {\n            return 0 /* NONE */;\n        }\n        // Create a test element with an arbitrary background-color that is neither black nor\n        // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n        // appending the test element to the DOM does not affect layout by absolutely positioning it\n        const testElement = this._document.createElement('div');\n        testElement.style.backgroundColor = 'rgb(1,2,3)';\n        testElement.style.position = 'absolute';\n        this._document.body.appendChild(testElement);\n        // Get the computed style for the background color, collapsing spaces to normalize between\n        // browsers. Once we get this color, we no longer need the test element. Access the `window`\n        // via the document so we can fake it in tests. Note that we have extra null checks, because\n        // this logic will likely run during app bootstrap and throwing can break the entire app.\n        const documentWindow = this._document.defaultView || window;\n        const computedStyle = documentWindow && documentWindow.getComputedStyle\n            ? documentWindow.getComputedStyle(testElement)\n            : null;\n        const computedColor = ((computedStyle && computedStyle.backgroundColor) || '').replace(/ /g, '');\n        testElement.remove();\n        switch (computedColor) {\n            case 'rgb(0,0,0)':\n                return 2 /* WHITE_ON_BLACK */;\n            case 'rgb(255,255,255)':\n                return 1 /* BLACK_ON_WHITE */;\n        }\n        return 0 /* NONE */;\n    }\n    /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n    _applyBodyHighContrastModeCssClasses() {\n        if (!this._hasCheckedHighContrastMode && this._platform.isBrowser && this._document.body) {\n            const bodyClasses = this._document.body.classList;\n            // IE11 doesn't support `classList` operations with multiple arguments\n            bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n            bodyClasses.remove(BLACK_ON_WHITE_CSS_CLASS);\n            bodyClasses.remove(WHITE_ON_BLACK_CSS_CLASS);\n            this._hasCheckedHighContrastMode = true;\n            const mode = this.getHighContrastMode();\n            if (mode === 1 /* BLACK_ON_WHITE */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(BLACK_ON_WHITE_CSS_CLASS);\n            }\n            else if (mode === 2 /* WHITE_ON_BLACK */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(WHITE_ON_BLACK_CSS_CLASS);\n            }\n        }\n    }\n}\nHighContrastModeDetector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: HighContrastModeDetector, deps: [{ token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nHighContrastModeDetector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: HighContrastModeDetector, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: HighContrastModeDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass A11yModule {\n    constructor(highContrastModeDetector) {\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n}\nA11yModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: A11yModule, deps: [{ token: HighContrastModeDetector }], target: i0.ɵɵFactoryTarget.NgModule });\nA11yModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: A11yModule, declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus], imports: [PlatformModule, ObserversModule], exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus] });\nA11yModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: A11yModule, imports: [[PlatformModule, ObserversModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: A11yModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [PlatformModule, ObserversModule],\n                    declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                    exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                }]\n        }], ctorParameters: function () { return [{ type: HighContrastModeDetector }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusTrap, FocusTrapFactory, HighContrastModeDetector, INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS, INPUT_MODALITY_DETECTOR_OPTIONS, InputModalityDetector, InteractivityChecker, IsFocusableConfig, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAC_ENTER = 3;\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst NUM_CENTER = 12;\nconst ENTER = 13;\nconst SHIFT = 16;\nconst CONTROL = 17;\nconst ALT = 18;\nconst PAUSE = 19;\nconst CAPS_LOCK = 20;\nconst ESCAPE = 27;\nconst SPACE = 32;\nconst PAGE_UP = 33;\nconst PAGE_DOWN = 34;\nconst END = 35;\nconst HOME = 36;\nconst LEFT_ARROW = 37;\nconst UP_ARROW = 38;\nconst RIGHT_ARROW = 39;\nconst DOWN_ARROW = 40;\nconst PLUS_SIGN = 43;\nconst PRINT_SCREEN = 44;\nconst INSERT = 45;\nconst DELETE = 46;\nconst ZERO = 48;\nconst ONE = 49;\nconst TWO = 50;\nconst THREE = 51;\nconst FOUR = 52;\nconst FIVE = 53;\nconst SIX = 54;\nconst SEVEN = 55;\nconst EIGHT = 56;\nconst NINE = 57;\nconst FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186\nconst FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187\nconst QUESTION_MARK = 63;\nconst AT_SIGN = 64;\nconst A = 65;\nconst B = 66;\nconst C = 67;\nconst D = 68;\nconst E = 69;\nconst F = 70;\nconst G = 71;\nconst H = 72;\nconst I = 73;\nconst J = 74;\nconst K = 75;\nconst L = 76;\nconst M = 77;\nconst N = 78;\nconst O = 79;\nconst P = 80;\nconst Q = 81;\nconst R = 82;\nconst S = 83;\nconst T = 84;\nconst U = 85;\nconst V = 86;\nconst W = 87;\nconst X = 88;\nconst Y = 89;\nconst Z = 90;\nconst META = 91; // WIN_KEY_LEFT\nconst MAC_WK_CMD_LEFT = 91;\nconst MAC_WK_CMD_RIGHT = 93;\nconst CONTEXT_MENU = 93;\nconst NUMPAD_ZERO = 96;\nconst NUMPAD_ONE = 97;\nconst NUMPAD_TWO = 98;\nconst NUMPAD_THREE = 99;\nconst NUMPAD_FOUR = 100;\nconst NUMPAD_FIVE = 101;\nconst NUMPAD_SIX = 102;\nconst NUMPAD_SEVEN = 103;\nconst NUMPAD_EIGHT = 104;\nconst NUMPAD_NINE = 105;\nconst NUMPAD_MULTIPLY = 106;\nconst NUMPAD_PLUS = 107;\nconst NUMPAD_MINUS = 109;\nconst NUMPAD_PERIOD = 110;\nconst NUMPAD_DIVIDE = 111;\nconst F1 = 112;\nconst F2 = 113;\nconst F3 = 114;\nconst F4 = 115;\nconst F5 = 116;\nconst F6 = 117;\nconst F7 = 118;\nconst F8 = 119;\nconst F9 = 120;\nconst F10 = 121;\nconst F11 = 122;\nconst F12 = 123;\nconst NUM_LOCK = 144;\nconst SCROLL_LOCK = 145;\nconst FIRST_MEDIA = 166;\nconst FF_MINUS = 173;\nconst MUTE = 173; // Firefox (Gecko) fires 181 for MUTE\nconst VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN\nconst VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP\nconst FF_MUTE = 181;\nconst FF_VOLUME_DOWN = 182;\nconst LAST_MEDIA = 183;\nconst FF_VOLUME_UP = 183;\nconst SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON\nconst EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS\nconst COMMA = 188;\nconst DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS\nconst PERIOD = 190;\nconst SLASH = 191;\nconst APOSTROPHE = 192;\nconst TILDE = 192;\nconst OPEN_SQUARE_BRACKET = 219;\nconst BACKSLASH = 220;\nconst CLOSE_SQUARE_BRACKET = 221;\nconst SINGLE_QUOTE = 222;\nconst MAC_META = 224;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Checks whether a modifier key is pressed.\n * @param event Event to be checked.\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some(modifier => event[modifier]);\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A, ALT, APOSTROPHE, AT_SIGN, B, BACKSLASH, BACKSPACE, C, CAPS_LOCK, CLOSE_SQUARE_BRACKET, COMMA, CONTEXT_MENU, CONTROL, D, DASH, DELETE, DOWN_ARROW, E, EIGHT, END, ENTER, EQUALS, ESCAPE, F, F1, F10, F11, F12, F2, F3, F4, F5, F6, F7, F8, F9, FF_EQUALS, FF_MINUS, FF_MUTE, FF_SEMICOLON, FF_VOLUME_DOWN, FF_VOLUME_UP, FIRST_MEDIA, FIVE, FOUR, G, H, HOME, I, INSERT, J, K, L, LAST_MEDIA, LEFT_ARROW, M, MAC_ENTER, MAC_META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, META, MUTE, N, NINE, NUMPAD_DIVIDE, NUMPAD_EIGHT, NUMPAD_FIVE, NUMPAD_FOUR, NUMPAD_MINUS, NUMPAD_MULTIPLY, NUMPAD_NINE, NUMPAD_ONE, NUMPAD_PERIOD, NUMPAD_PLUS, NUMPAD_SEVEN, NUMPAD_SIX, NUMPAD_THREE, NUMPAD_TWO, NUMPAD_ZERO, NUM_CENTER, NUM_LOCK, O, ONE, OPEN_SQUARE_BRACKET, P, PAGE_DOWN, PAGE_UP, PAUSE, PERIOD, PLUS_SIGN, PRINT_SCREEN, Q, QUESTION_MARK, R, RIGHT_ARROW, S, SCROLL_LOCK, SEMICOLON, SEVEN, SHIFT, SINGLE_QUOTE, SIX, SLASH, SPACE, T, TAB, THREE, TILDE, TWO, U, UP_ARROW, V, VOLUME_DOWN, VOLUME_UP, W, X, Y, Z, ZERO, hasModifierKey };\n","import { filter } from './filter';\nexport function skip(count) {\n    return filter((_, index) => count <= index);\n}\n","import { Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of the Angular Component Development Kit. */\nconst VERSION = new Version('13.0.3');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { VERSION };\n","import * as i0 from '@angular/core';\nimport { Version, InjectionToken, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, Output } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$2 } from '@angular/cdk';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { _isTestEnvironment, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of Angular Material. */\nconst VERSION$1 = new Version('13.0.3');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/** @docs-private */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\nconst VERSION = new Version('13.0.3');\n/** @docs-private */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    constructor(highContrastModeDetector, _sanityChecks, _document) {\n        this._sanityChecks = _sanityChecks;\n        this._document = _document;\n        /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n        this._hasDoneGlobalChecks = false;\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n        if (!this._hasDoneGlobalChecks) {\n            this._hasDoneGlobalChecks = true;\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (this._checkIsEnabled('doctype')) {\n                    _checkDoctypeIsDefined(this._document);\n                }\n                if (this._checkIsEnabled('theme')) {\n                    _checkThemeIsPresent(this._document);\n                }\n                if (this._checkIsEnabled('version')) {\n                    _checkCdkVersionMatch();\n                }\n            }\n        }\n    }\n    /** Gets whether a specific sanity check is enabled. */\n    _checkIsEnabled(name) {\n        if (_isTestEnvironment()) {\n            return false;\n        }\n        if (typeof this._sanityChecks === 'boolean') {\n            return this._sanityChecks;\n        }\n        return !!this._sanityChecks[name];\n    }\n}\nMatCommonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCommonModule, deps: [{ token: i1.HighContrastModeDetector }, { token: MATERIAL_SANITY_CHECKS, optional: true }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.NgModule });\nMatCommonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCommonModule, imports: [BidiModule], exports: [BidiModule] });\nMatCommonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCommonModule, imports: [[BidiModule], BidiModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule],\n                    exports: [BidiModule],\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HighContrastModeDetector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MATERIAL_SANITY_CHECKS]\n                }] }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/** Checks that the page has a doctype. */\nfunction _checkDoctypeIsDefined(doc) {\n    if (!doc.doctype) {\n        console.warn('Current document does not have a doctype. This may cause ' +\n            'some Angular Material components not to behave as expected.');\n    }\n}\n/** Checks that a theme has been included. */\nfunction _checkThemeIsPresent(doc) {\n    // We need to assert that the `body` is defined, because these checks run very early\n    // and the `body` won't be defined if the consumer put their scripts in the `head`.\n    if (!doc.body || typeof getComputedStyle !== 'function') {\n        return;\n    }\n    const testElement = doc.createElement('div');\n    testElement.classList.add('mat-theme-loaded-marker');\n    doc.body.appendChild(testElement);\n    const computedStyle = getComputedStyle(testElement);\n    // In some situations the computed style of the test element can be null. For example in\n    // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n    if (computedStyle && computedStyle.display !== 'none') {\n        console.warn('Could not find Angular Material core theme. Most Material ' +\n            'components may not work as expected. For more info refer ' +\n            'to the theming guide: https://material.angular.io/guide/theming');\n    }\n    testElement.remove();\n}\n/** Checks whether the Material version matches the CDK version. */\nfunction _checkCdkVersionMatch() {\n    if (VERSION.full !== VERSION$2.full) {\n        console.warn('The Angular Material version (' +\n            VERSION.full +\n            ') does not match ' +\n            'the Angular CDK version (' +\n            VERSION$2.full +\n            ').\\n' +\n            'Please ensure the versions of these two packages exactly match.');\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinDisabled(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        get disabled() {\n            return this._disabled;\n        }\n        set disabled(value) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this.defaultColor = defaultColor;\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n        get color() {\n            return this._color;\n        }\n        set color(value) {\n            const colorPalette = value || this.defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /** Whether the ripple effect is disabled or not. */\n        get disableRipple() {\n            return this._disableRipple;\n        }\n        set disableRipple(value) {\n            this._disableRipple = coerceBooleanProperty(value);\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n            this.defaultTabIndex = defaultTabIndex;\n        }\n        get tabIndex() {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            // This class member exists as an interop with `MatFormFieldControl` which expects\n            // a public `stateChanges` observable to emit whenever the form field should be updated.\n            // The description is not specifically mentioning the error state, as classes using this\n            // mixin can/should emit an event in other cases too.\n            /** Emits whenever the component state changes. */\n            this.stateChanges = new Subject();\n            /** Whether the component is in an error state. */\n            this.errorState = false;\n        }\n        /** Updates the error state based on the provided error state matcher. */\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control : null;\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nfunction mixinInitialized(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            /** Whether this directive has been marked as initialized. */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable(subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    this._pendingSubscribers.push(subscriber);\n                }\n            });\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * @docs-private\n         */\n        _markInitialized() {\n            if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            this._pendingSubscribers.forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /** Emits and completes the subscriber stream (should only emit once). */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/** @docs-private */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n        /** A stream that emits when the locale changes. */\n        this.localeChanges = this._localeChanges;\n    }\n    /**\n     * Given a potential date object, returns that same date object if it is\n     * a valid date, or `null` if it's not a valid date.\n     * @param obj The object to check.\n     * @returns A date or `null`.\n     */\n    getValidDateOrNull(obj) {\n        return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n    }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param value The value to be deserialized into a date object.\n     * @returns The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || (this.isDateInstance(value) && this.isValid(value))) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param locale The new locale.\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param first The first date to compare.\n     * @param second The second date to compare.\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return (this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second));\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param first The first date to check.\n     * @param second The second date to check.\n     * @returns Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            let firstValid = this.isValid(first);\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param date The date to clamp.\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nclass NativeDateAdapter extends DateAdapter {\n    constructor(matDateLocale, \n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    _platform) {\n        super();\n        /**\n         * @deprecated No longer being used. To be removed.\n         * @breaking-change 14.0.0\n         */\n        this.useUtcForDisplay = false;\n        super.setLocale(matDateLocale);\n    }\n    getYear(date) {\n        return date.getFullYear();\n    }\n    getMonth(date) {\n        return date.getMonth();\n    }\n    getDate(date) {\n        return date.getDate();\n    }\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    getMonthNames(style) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n        return range(12, i => this._format(dtf, new Date(2017, i, 1)));\n    }\n    getDateNames() {\n        const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n        return range(31, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getDayOfWeekNames(style) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n        return range(7, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getYearName(date) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n        return this._format(dtf, date);\n    }\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    createDate(year, month, date) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            // Check for invalid month and date (except upper bound on date which we have to check after\n            // creating the Date).\n            if (month < 0 || month > 11) {\n                throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n            }\n            if (date < 1) {\n                throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n            }\n        }\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    today() {\n        return new Date();\n    }\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        const dtf = new Intl.DateTimeFormat(this.locale, { ...displayFormat, timeZone: 'utc' });\n        return this._format(dtf, date);\n    }\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    addCalendarMonths(date, months) {\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != (((this.getMonth(date) + months) % 12) + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate()),\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    invalid() {\n        return new Date(NaN);\n    }\n    /** Creates a date but allows the month and date to overflow. */\n    _createDateWithOverflow(year, month, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setFullYear` and `setHours` instead.\n        const d = new Date();\n        d.setFullYear(year, month, date);\n        d.setHours(0, 0, 0, 0);\n        return d;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param n The number to pad.\n     * @returns The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param date Date from which we want to get the string representation according to dtf\n     * @returns A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n        const d = new Date();\n        d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n        d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NativeDateAdapter, deps: [{ token: MAT_DATE_LOCALE, optional: true }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nNativeDateAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NativeDateAdapter });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NativeDateAdapter, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_LOCALE]\n                }] }, { type: i1$1.Platform }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    },\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass NativeDateModule {\n}\nNativeDateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NativeDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNativeDateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NativeDateModule, imports: [PlatformModule] });\nNativeDateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NativeDateModule, providers: [{ provide: DateAdapter, useClass: NativeDateAdapter }], imports: [[PlatformModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NativeDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [PlatformModule],\n                    providers: [{ provide: DateAdapter, useClass: NativeDateAdapter }],\n                }]\n        }] });\nclass MatNativeDateModule {\n}\nMatNativeDateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatNativeDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatNativeDateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatNativeDateModule, imports: [NativeDateModule] });\nMatNativeDateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatNativeDateModule, providers: [{ provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS }], imports: [[NativeDateModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatNativeDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NativeDateModule],\n                    providers: [{ provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nShowOnDirtyErrorStateMatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, decorators: [{\n            type: Injectable\n        }] });\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: ErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nErrorStateMatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: ErrorStateMatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: ErrorStateMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatLine, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatLine.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatLine, selector: \"[mat-line], [matLine]\", host: { classAttribute: \"mat-line\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatLine, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-line], [matLine]',\n                    host: { 'class': 'mat-line' },\n                }]\n        }] });\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nfunction setLines(lines, element, prefix = 'mat') {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe(({ length }) => {\n        setClass(element, `${prefix}-2-line`, false);\n        setClass(element, `${prefix}-3-line`, false);\n        setClass(element, `${prefix}-multi-line`, false);\n        if (length === 2 || length === 3) {\n            setClass(element, `${prefix}-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `${prefix}-multi-line`, true);\n        }\n    });\n}\n/** Adds or removes a class from an element. */\nfunction setClass(element, className, isAdd) {\n    element.nativeElement.classList.toggle(className, isAdd);\n}\nclass MatLineModule {\n}\nMatLineModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatLineModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatLineModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatLineModule, declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine, MatCommonModule] });\nMatLineModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatLineModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatLineModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatLine, MatCommonModule],\n                    declarations: [MatLine],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    constructor(_renderer, \n    /** Reference to the ripple HTML element. */\n    element, \n    /** Ripple configuration used for the ripple. */\n    config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /** Current state of the ripple. */\n        this.state = 3 /* HIDDEN */;\n    }\n    /** Fades out the ripple element. */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n// TODO: import these values from `@material/ripple` eventually.\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 225,\n    exitDuration: 150,\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n    constructor(_target, _ngZone, elementOrElementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /** Whether the pointer is currently down or not. */\n        this._isPointerDown = false;\n        /** Set of currently active ripple references. */\n        this._activeRipples = new Set();\n        /** Whether pointer-up event listeners have been registered. */\n        this._pointerUpEventsRegistered = false;\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param config Extra ripple options.\n     */\n    fadeInRipple(x, y, config = {}) {\n        const containerRect = (this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect());\n        const animationConfig = { ...defaultRippleAnimationConfig, ...config.animation };\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        const offsetX = x - containerRect.left;\n        const offsetY = y - containerRect.top;\n        const duration = animationConfig.enterDuration;\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${duration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        const rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = 0 /* FADING_IN */;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this._runTimeoutOutsideZone(() => {\n            const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n            rippleRef.state = 1 /* VISIBLE */;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }, duration);\n        return rippleRef;\n    }\n    /** Fades out a ripple reference. */\n    fadeOutRipple(rippleRef) {\n        const wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-run the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        const rippleEl = rippleRef.element;\n        const animationConfig = { ...defaultRippleAnimationConfig, ...rippleRef.config.animation };\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = 2 /* FADING_OUT */;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this._runTimeoutOutsideZone(() => {\n            rippleRef.state = 3 /* HIDDEN */;\n            rippleEl.remove();\n        }, animationConfig.exitDuration);\n    }\n    /** Fades out all currently active ripples. */\n    fadeOutAll() {\n        this._activeRipples.forEach(ripple => ripple.fadeOut());\n    }\n    /** Fades out all currently active non-persistent ripples. */\n    fadeOutAllNonPersistent() {\n        this._activeRipples.forEach(ripple => {\n            if (!ripple.config.persistent) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Sets up the trigger event listeners */\n    setupTriggerEvents(elementOrElementRef) {\n        const element = coerceElement(elementOrElementRef);\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._triggerElement = element;\n        this._registerEvents(pointerDownEvents);\n    }\n    /**\n     * Handles all registered events.\n     * @docs-private\n     */\n    handleEvent(event) {\n        if (event.type === 'mousedown') {\n            this._onMousedown(event);\n        }\n        else if (event.type === 'touchstart') {\n            this._onTouchStart(event);\n        }\n        else {\n            this._onPointerUp();\n        }\n        // If pointer-up events haven't been registered yet, do so now.\n        // We do this on-demand in order to reduce the total number of event listeners\n        // registered by the ripples, which speeds up the rendering time for large UIs.\n        if (!this._pointerUpEventsRegistered) {\n            this._registerEvents(pointerUpEvents);\n            this._pointerUpEventsRegistered = true;\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using mouse. */\n    _onMousedown(event) {\n        // Screen readers will fire fake mouse events for space/enter. Skip launching a\n        // ripple in this case for consistency with the non-screen-reader experience.\n        const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n        const isSyntheticEvent = this._lastTouchStartEvent &&\n            Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n        if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n            this._isPointerDown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using touch. */\n    _onTouchStart(event) {\n        if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n            // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n            // events will launch a second ripple if we don't ignore mouse events for a specific\n            // time after a touchstart event.\n            this._lastTouchStartEvent = Date.now();\n            this._isPointerDown = true;\n            // Use `changedTouches` so we skip any touches where the user put\n            // their finger down, but used another finger to tap the element again.\n            const touches = event.changedTouches;\n            for (let i = 0; i < touches.length; i++) {\n                this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n            }\n        }\n    }\n    /** Function being called whenever the trigger is being released. */\n    _onPointerUp() {\n        if (!this._isPointerDown) {\n            return;\n        }\n        this._isPointerDown = false;\n        // Fade-out all ripples that are visible and not persistent.\n        this._activeRipples.forEach(ripple => {\n            // By default, only ripples that are completely visible will fade out on pointer release.\n            // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n            const isVisible = ripple.state === 1 /* VISIBLE */ ||\n                (ripple.config.terminateOnPointerUp && ripple.state === 0 /* FADING_IN */);\n            if (!ripple.config.persistent && isVisible) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n    _runTimeoutOutsideZone(fn, delay = 0) {\n        this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n    }\n    /** Registers event listeners for a given list of events. */\n    _registerEvents(eventTypes) {\n        this._ngZone.runOutsideAngular(() => {\n            eventTypes.forEach(type => {\n                this._triggerElement.addEventListener(type, this, passiveEventOptions);\n            });\n        });\n    }\n    /** Removes previously registered event listeners from the trigger element. */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            pointerDownEvents.forEach(type => {\n                this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n            });\n            if (this._pointerUpEventsRegistered) {\n                pointerUpEvents.forEach(type => {\n                    this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n                });\n            }\n        }\n    }\n}\n/** Enforces a style recalculation of a DOM element by computing its styles. */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n        this._elementRef = _elementRef;\n        this._animationMode = _animationMode;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /** Whether ripple directive is initialized and the input bindings are set. */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        if (value) {\n            this.fadeOutAllNonPersistent();\n        }\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n    get trigger() {\n        return this._trigger || this._elementRef.nativeElement;\n    }\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /** Fades out all currently showing non-persistent ripple elements. */\n    fadeOutAllNonPersistent() {\n        this._rippleRenderer.fadeOutAllNonPersistent();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: {\n                ...this._globalOptions.animation,\n                ...(this._animationMode === 'NoopAnimations' ? { enterDuration: 0, exitDuration: 0 } : {}),\n                ...this.animation,\n            },\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, { ...this.rippleConfig, ...config });\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, { ...this.rippleConfig, ...configOrX });\n        }\n    }\n}\nMatRipple.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatRipple, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i1$1.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatRipple.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: { color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], radius: [\"matRippleRadius\", \"radius\"], animation: [\"matRippleAnimation\", \"animation\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"] }, host: { properties: { \"class.mat-ripple-unbounded\": \"unbounded\" }, classAttribute: \"mat-ripple\" }, exportAs: [\"matRipple\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatRipple, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-ripple], [matRipple]',\n                    exportAs: 'matRipple',\n                    host: {\n                        'class': 'mat-ripple',\n                        '[class.mat-ripple-unbounded]': 'unbounded',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i1$1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { color: [{\n                type: Input,\n                args: ['matRippleColor']\n            }], unbounded: [{\n                type: Input,\n                args: ['matRippleUnbounded']\n            }], centered: [{\n                type: Input,\n                args: ['matRippleCentered']\n            }], radius: [{\n                type: Input,\n                args: ['matRippleRadius']\n            }], animation: [{\n                type: Input,\n                args: ['matRippleAnimation']\n            }], disabled: [{\n                type: Input,\n                args: ['matRippleDisabled']\n            }], trigger: [{\n                type: Input,\n                args: ['matRippleTrigger']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRippleModule {\n}\nMatRippleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatRippleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatRippleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatRippleModule, declarations: [MatRipple], imports: [MatCommonModule, PlatformModule], exports: [MatRipple, MatCommonModule] });\nMatRippleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatRippleModule, imports: [[MatCommonModule, PlatformModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatRippleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, PlatformModule],\n                    exports: [MatRipple, MatCommonModule],\n                    declarations: [MatRipple],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nclass MatPseudoCheckbox {\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /** Display state of the checkbox. */\n        this.state = 'unchecked';\n        /** Whether the checkbox is disabled. */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatPseudoCheckbox, deps: [{ token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatPseudoCheckbox.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: { state: \"state\", disabled: \"disabled\" }, host: { properties: { \"class.mat-pseudo-checkbox-indeterminate\": \"state === \\\"indeterminate\\\"\", \"class.mat-pseudo-checkbox-checked\": \"state === \\\"checked\\\"\", \"class.mat-pseudo-checkbox-disabled\": \"disabled\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\" }, classAttribute: \"mat-pseudo-checkbox\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatPseudoCheckbox, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'mat-pseudo-checkbox', template: '', host: {\n                        'class': 'mat-pseudo-checkbox',\n                        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { state: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatPseudoCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatPseudoCheckboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatPseudoCheckboxModule, declarations: [MatPseudoCheckbox], imports: [MatCommonModule], exports: [MatPseudoCheckbox] });\nMatPseudoCheckboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatPseudoCheckboxModule, imports: [[MatCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatPseudoCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatPseudoCheckbox],\n                    declarations: [MatPseudoCheckbox],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nconst _MatOptgroupMixinBase = mixinDisabled(class {\n});\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\nclass _MatOptgroupBase extends _MatOptgroupMixinBase {\n    constructor(parent) {\n        super();\n        /** Unique id for the underlying label. */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n        this._inert = parent?.inertGroups ?? false;\n    }\n}\n_MatOptgroupBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatOptgroupBase, deps: [{ token: MAT_OPTION_PARENT_COMPONENT, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatOptgroupBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: _MatOptgroupBase, inputs: { label: \"label\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatOptgroupBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_OPTION_PARENT_COMPONENT]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { label: [{\n                type: Input\n            }] } });\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupBase {\n}\nMatOptgroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatOptgroup, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatOptgroup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatOptgroup, selector: \"mat-optgroup\", inputs: { disabled: \"disabled\" }, host: { properties: { \"attr.role\": \"_inert ? null : \\\"group\\\"\", \"attr.aria-disabled\": \"_inert ? null : disabled.toString()\", \"attr.aria-labelledby\": \"_inert ? null : _labelId\", \"class.mat-optgroup-disabled\": \"disabled\" }, classAttribute: \"mat-optgroup\" }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], exportAs: [\"matOptgroup\"], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-optgroup-label\\\" aria-hidden=\\\"true\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></span>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatOptgroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-optgroup', exportAs: 'matOptgroup', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled'], host: {\n                        'class': 'mat-optgroup',\n                        '[attr.role]': '_inert ? null : \"group\"',\n                        '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n                        '[attr.aria-labelledby]': '_inert ? null : _labelId',\n                        '[class.mat-optgroup-disabled]': 'disabled',\n                    }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], template: \"<span class=\\\"mat-optgroup-label\\\" aria-hidden=\\\"true\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></span>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n    constructor(\n    /** Reference to the option that emitted the event. */\n    source, \n    /** Whether the change in the option's value was a result of a user action. */\n    isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\nclass _MatOptionBase {\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /** The unique ID of the option. */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /** Emits when the state of the option changes and any parents have to be notified. */\n        this._stateChanges = new Subject();\n    }\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n    /** Whether or not the option is currently selected. */\n    get selected() {\n        return this._selected;\n    }\n    /** Whether the option is disabled. */\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return this._parent && this._parent.disableRipple;\n    }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /** Selects the option. */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Deselects the option. */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Sets focus onto this option. */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     */\n    _getAriaSelected() {\n        return this.selected || (this.multiple ? false : null);\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\n_MatOptionBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatOptionBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatOptionBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: _MatOptionBase, inputs: { value: \"value\", id: \"id\", disabled: \"disabled\" }, outputs: { onSelectionChange: \"onSelectionChange\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatOptionBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined }, { type: _MatOptgroupBase }]; }, propDecorators: { value: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], onSelectionChange: [{\n                type: Output\n            }] } });\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption extends _MatOptionBase {\n    constructor(element, changeDetectorRef, parent, group) {\n        super(element, changeDetectorRef, parent, group);\n    }\n}\nMatOption.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatOption, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_OPTION_PARENT_COMPONENT, optional: true }, { token: MAT_OPTGROUP, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatOption.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatOption, selector: \"mat-option\", host: { attributes: { \"role\": \"option\" }, listeners: { \"click\": \"_selectViaInteraction()\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.tabindex\": \"_getTabIndex()\", \"class.mat-selected\": \"selected\", \"class.mat-option-multiple\": \"multiple\", \"class.mat-active\": \"active\", \"id\": \"id\", \"attr.aria-selected\": \"_getAriaSelected()\", \"attr.aria-disabled\": \"disabled.toString()\", \"class.mat-option-disabled\": \"disabled\" }, classAttribute: \"mat-option mat-focus-indicator\" }, exportAs: [\"matOption\"], usesInheritance: true, ngImport: i0, template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"], components: [{ type: MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: [\"state\", \"disabled\"] }], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-option', exportAs: 'matOption', host: {\n                        'role': 'option',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[class.mat-selected]': 'selected',\n                        '[class.mat-option-multiple]': 'multiple',\n                        '[class.mat-active]': 'active',\n                        '[id]': 'id',\n                        '[attr.aria-selected]': '_getAriaSelected()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[class.mat-option-disabled]': 'disabled',\n                        '(click)': '_selectViaInteraction()',\n                        '(keydown)': '_handleKeydown($event)',\n                        'class': 'mat-option mat-focus-indicator',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_OPTION_PARENT_COMPONENT]\n                }] }, { type: MatOptgroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_OPTGROUP]\n                }] }]; } });\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        let optionsArray = options.toArray();\n        let groups = optionGroups.toArray();\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatOptionModule {\n}\nMatOptionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatOptionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatOptionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatOptionModule, declarations: [MatOption, MatOptgroup], imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule], exports: [MatOption, MatOptgroup] });\nMatOptionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatOptionModule, imports: [[MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatOptionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule],\n                    exports: [MatOption, MatOptgroup],\n                    declarations: [MatOption, MatOptgroup],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationCurves, AnimationDurations, DateAdapter, ErrorStateMatcher, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatLine, MatLineModule, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NativeDateAdapter, NativeDateModule, RippleRef, RippleRenderer, ShowOnDirtyErrorStateMatcher, VERSION$1 as VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines };\n","/**\n * @license Angular v13.0.3\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * An injectable service that produces an animation sequence programmatically within an\n * Angular component or directive.\n * Provided by the `BrowserAnimationsModule` or `NoopAnimationsModule`.\n *\n * @usageNotes\n *\n * To use this service, add it to your component or directive as a dependency.\n * The service is instantiated along with your component.\n *\n * Apps do not typically need to create their own animation players, but if you\n * do need to, follow these steps:\n *\n * 1. Use the `build()` method to create a programmatic animation using the\n * `animate()` function. The method returns an `AnimationFactory` instance.\n *\n * 2. Use the factory object to create an `AnimationPlayer` and attach it to a DOM element.\n *\n * 3. Use the player object to control the animation programmatically.\n *\n * For example:\n *\n * ```ts\n * // import the service from BrowserAnimationsModule\n * import {AnimationBuilder} from '@angular/animations';\n * // require the service as a dependency\n * class MyCmp {\n *   constructor(private _builder: AnimationBuilder) {}\n *\n *   makeAnimation(element: any) {\n *     // first define a reusable animation\n *     const myAnimation = this._builder.build([\n *       style({ width: 0 }),\n *       animate(1000, style({ width: '100px' }))\n *     ]);\n *\n *     // use the returned factory object to create a player\n *     const player = myAnimation.create(element);\n *\n *     player.play();\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass AnimationBuilder {\n}\n/**\n * A factory object returned from the `AnimationBuilder`.`build()` method.\n *\n * @publicApi\n */\nclass AnimationFactory {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Specifies automatic styling.\n *\n * @publicApi\n */\nconst AUTO_STYLE = '*';\n/**\n * Creates a named animation trigger, containing a  list of `state()`\n * and `transition()` entries to be evaluated when the expression\n * bound to the trigger changes.\n *\n * @param name An identifying string.\n * @param definitions  An animation definition object, containing an array of `state()`\n * and `transition()` declarations.\n *\n * @return An object that encapsulates the trigger data.\n *\n * @usageNotes\n * Define an animation trigger in the `animations` section of `@Component` metadata.\n * In the template, reference the trigger by name and bind it to a trigger expression that\n * evaluates to a defined animation state, using the following format:\n *\n * `[@triggerName]=\"expression\"`\n *\n * Animation trigger bindings convert all values to strings, and then match the\n * previous and current values against any linked transitions.\n * Booleans can be specified as `1` or `true` and `0` or `false`.\n *\n * ### Usage Example\n *\n * The following example creates an animation trigger reference based on the provided\n * name value.\n * The provided animation value is expected to be an array consisting of state and\n * transition declarations.\n *\n * ```typescript\n * @Component({\n *   selector: \"my-component\",\n *   templateUrl: \"my-component-tpl.html\",\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component makes use of the defined trigger\n * by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ### Using an inline function\n * The `transition` animation method also supports reading an inline function which can decide\n * if its associated animation should be run.\n *\n * ```typescript\n * // this method is run each time the `myAnimationTrigger` trigger value changes.\n * function myInlineMatcherFn(fromState: string, toState: string, element: any, params: {[key:\n string]: any}): boolean {\n *   // notice that `element` and `params` are also available here\n *   return toState == 'yes-please-animate';\n * }\n *\n * @Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger('myAnimationTrigger', [\n *       transition(myInlineMatcherFn, [\n *         // the animation sequence code\n *       ]),\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"yes-please-animate\";\n * }\n * ```\n *\n * ### Disabling Animations\n * When true, the special animation control binding `@.disabled` binding prevents\n * all animations from rendering.\n * Place the  `@.disabled` binding on an element to disable\n * animations on the element itself, as well as any inner animation triggers\n * within the element.\n *\n * The following example shows how to use this feature:\n *\n * ```typescript\n * @Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [@.disabled]=\"isDisabled\">\n *       <div [@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * When `@.disabled` is true, it prevents the `@childAnimation` trigger from animating,\n * along with any inner animations.\n *\n * ### Disable animations application-wide\n * When an area of the template is set to have animations disabled,\n * **all** inner components have their animations disabled as well.\n * This means that you can disable all animations for an app\n * by placing a host binding set on `@.disabled` on the topmost Angular component.\n *\n * ```typescript\n * import {Component, HostBinding} from '@angular/core';\n *\n * @Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   @HostBinding('@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### Overriding disablement of inner animations\n * Despite inner animations being disabled, a parent animation can `query()`\n * for inner elements located in disabled areas of the template and still animate\n * them if needed. This is also the case for when a sub animation is\n * queried by a parent and then later animated using `animateChild()`.\n *\n * ### Detecting when an animation is disabled\n * If a region of the DOM (or the entire application) has its animations disabled, the animation\n * trigger callbacks still fire, but for zero seconds. When the callback fires, it provides\n * an instance of an `AnimationEvent`. If animations are disabled,\n * the `.disabled` flag on the event is true.\n *\n * @publicApi\n */\nfunction trigger(name, definitions) {\n    return { type: 7 /* Trigger */, name, definitions, options: {} };\n}\n/**\n * Defines an animation step that combines styling information with timing information.\n *\n * @param timings Sets `AnimateTimings` for the parent animation.\n * A string in the format \"duration [delay] [easing]\".\n *  - Duration and delay are expressed as a number and optional time unit,\n * such as \"1s\" or \"10ms\" for one second and 10 milliseconds, respectively.\n * The default unit is milliseconds.\n *  - The easing value controls how the animation accelerates and decelerates\n * during its runtime. Value is one of  `ease`, `ease-in`, `ease-out`,\n * `ease-in-out`, or a `cubic-bezier()` function call.\n * If not supplied, no easing is applied.\n *\n * For example, the string \"1s 100ms ease-out\" specifies a duration of\n * 1000 milliseconds, and delay of 100 ms, and the \"ease-out\" easing style,\n * which decelerates near the end of the duration.\n * @param styles Sets AnimationStyles for the parent animation.\n * A function call to either `style()` or `keyframes()`\n * that returns a collection of CSS style entries to be applied to the parent animation.\n * When null, uses the styles from the destination state.\n * This is useful when describing an animation step that will complete an animation;\n * see \"Animating to the final state\" in `transitions()`.\n * @returns An object that encapsulates the animation step.\n *\n * @usageNotes\n * Call within an animation `sequence()`, `{@link animations/group group()}`, or\n * `transition()` call to specify an animation step\n * that applies given style data to the parent animation for a given amount of time.\n *\n * ### Syntax Examples\n * **Timing examples**\n *\n * The following examples show various `timings` specifications.\n * - `animate(500)` : Duration is 500 milliseconds.\n * - `animate(\"1s\")` : Duration is 1000 milliseconds.\n * - `animate(\"100ms 0.5s\")` : Duration is 100 milliseconds, delay is 500 milliseconds.\n * - `animate(\"5s ease-in\")` : Duration is 5000 milliseconds, easing in.\n * - `animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\")` : Duration is 5000 milliseconds, delay is 10\n * milliseconds, easing according to a bezier curve.\n *\n * **Style examples**\n *\n * The following example calls `style()` to set a single CSS style.\n * ```typescript\n * animate(500, style({ background: \"red\" }))\n * ```\n * The following example calls `keyframes()` to set a CSS style\n * to different values for successive keyframes.\n * ```typescript\n * animate(500, keyframes(\n *  [\n *   style({ background: \"blue\" }),\n *   style({ background: \"red\" })\n *  ])\n * ```\n *\n * @publicApi\n */\nfunction animate(timings, styles = null) {\n    return { type: 4 /* Animate */, styles, timings };\n}\n/**\n * @description Defines a list of animation steps to be run in parallel.\n *\n * @param steps An array of animation step objects.\n * - When steps are defined by `style()` or `animate()`\n * function calls, each call within the group is executed instantly.\n * - To specify offset styles to be applied at a later time, define steps with\n * `keyframes()`, or use `animate()` calls with a delay value.\n * For example:\n *\n * ```typescript\n * group([\n *   animate(\"1s\", style({ background: \"black\" })),\n *   animate(\"2s\", style({ color: \"white\" }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the group data.\n *\n * @usageNotes\n * Grouped animations are useful when a series of styles must be\n * animated at different starting times and closed off at different ending times.\n *\n * When called within a `sequence()` or a\n * `transition()` call, does not continue to the next\n * instruction until all of the inner animation steps have completed.\n *\n * @publicApi\n */\nfunction group(steps, options = null) {\n    return { type: 3 /* Group */, steps, options };\n}\n/**\n * Defines a list of animation steps to be run sequentially, one by one.\n *\n * @param steps An array of animation step objects.\n * - Steps defined by `style()` calls apply the styling data immediately.\n * - Steps defined by `animate()` calls apply the styling data over time\n *   as specified by the timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 }),\n *   animate(\"1s\", style({ opacity: 1 }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the sequence data.\n *\n * @usageNotes\n * When you pass an array of steps to a\n * `transition()` call, the steps run sequentially by default.\n * Compare this to the `{@link animations/group group()}` call, which runs animation steps in\n *parallel.\n *\n * When a sequence is used within a `{@link animations/group group()}` or a `transition()` call,\n * execution continues to the next instruction only after each of the inner animation\n * steps have completed.\n *\n * @publicApi\n **/\nfunction sequence(steps, options = null) {\n    return { type: 2 /* Sequence */, steps, options };\n}\n/**\n * Declares a key/value object containing CSS properties/styles that\n * can then be used for an animation `state`, within an animation `sequence`,\n * or as styling data for calls to `animate()` and `keyframes()`.\n *\n * @param tokens A set of CSS styles or HTML styles associated with an animation state.\n * The value can be any of the following:\n * - A key-value style pair associating a CSS property with a value.\n * - An array of key-value style pairs.\n * - An asterisk (*), to use auto-styling, where styles are derived from the element\n * being animated and applied to the animation when it starts.\n *\n * Auto-styling can be used to define a state that depends on layout or other\n * environmental factors.\n *\n * @return An object that encapsulates the style data.\n *\n * @usageNotes\n * The following examples create animation styles that collect a set of\n * CSS property values:\n *\n * ```typescript\n * // string values for CSS properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical pixel values\n * style({ width: 100, height: 0 })\n * ```\n *\n * The following example uses auto-styling to allow an element to animate from\n * a height of 0 up to its full height:\n *\n * ```\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * @publicApi\n **/\nfunction style(tokens) {\n    return { type: 6 /* Style */, styles: tokens, offset: null };\n}\n/**\n * Declares an animation state within a trigger attached to an element.\n *\n * @param name One or more names for the defined state in a comma-separated string.\n * The following reserved state names can be supplied to define a style for specific use\n * cases:\n *\n * - `void` You can associate styles with this name to be used when\n * the element is detached from the application. For example, when an `ngIf` evaluates\n * to false, the state of the associated element is void.\n *  - `*` (asterisk) Indicates the default state. You can associate styles with this name\n * to be used as the fallback when the state that is being animated is not declared\n * within the trigger.\n *\n * @param styles A set of CSS styles associated with this state, created using the\n * `style()` function.\n * This set of styles persists on the element once the state has been reached.\n * @param options Parameters that can be passed to the state when it is invoked.\n * 0 or more key-value pairs.\n * @return An object that encapsulates the new state data.\n *\n * @usageNotes\n * Use the `trigger()` function to register states to an animation trigger.\n * Use the `transition()` function to animate between states.\n * When a state is active within a component, its associated styles persist on the element,\n * even when the animation ends.\n *\n * @publicApi\n **/\nfunction state(name, styles, options) {\n    return { type: 0 /* State */, name, styles, options };\n}\n/**\n * Defines a set of animation styles, associating each style with an optional `offset` value.\n *\n * @param steps A set of animation styles with optional offset data.\n * The optional `offset` value for a style specifies a percentage of the total animation\n * time at which that style is applied.\n * @returns An object that encapsulates the keyframes data.\n *\n * @usageNotes\n * Use with the `animate()` call. Instead of applying animations\n * from the current state\n * to the destination state, keyframes describe how each style entry is applied and at what point\n * within the animation arc.\n * Compare [CSS Keyframe Animations](https://www.w3schools.com/css/css3_animations.asp).\n *\n * ### Usage\n *\n * In the following example, the offset values describe\n * when each `backgroundColor` value is applied. The color is red at the start, and changes to\n * blue when 20% of the total time has elapsed.\n *\n * ```typescript\n * // the provided offset values\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * If there are no `offset` values specified in the style entries, the offsets\n * are calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n *```\n\n * @publicApi\n */\nfunction keyframes(steps) {\n    return { type: 5 /* Keyframes */, steps };\n}\n/**\n * Declares an animation transition as a sequence of animation steps to run when a given\n * condition is satisfied. The condition is a Boolean expression or function that compares\n * the previous and current animation states, and returns true if this transition should occur.\n * When the state criteria of a defined transition are met, the associated animation is\n * triggered.\n *\n * @param stateChangeExpr A Boolean expression or function that compares the previous and current\n * animation states, and returns true if this transition should occur. Note that  \"true\" and \"false\"\n * match 1 and 0, respectively. An expression is evaluated each time a state change occurs in the\n * animation trigger element.\n * The animation steps run when the expression evaluates to true.\n *\n * - A state-change string takes the form \"state1 => state2\", where each side is a defined animation\n * state, or an asterisk (*) to refer to a dynamic start or end state.\n *   - The expression string can contain multiple comma-separated statements;\n * for example \"state1 => state2, state3 => state4\".\n *   - Special values `:enter` and `:leave` initiate a transition on the entry and exit states,\n * equivalent to  \"void => *\"  and \"* => void\".\n *   - Special values `:increment` and `:decrement` initiate a transition when a numeric value has\n * increased or decreased in value.\n * - A function is executed each time a state change occurs in the animation trigger element.\n * The animation steps run when the function returns true.\n *\n * @param steps One or more animation objects, as returned by the `animate()` or\n * `sequence()` function, that form a transformation from one state to another.\n * A sequence is used by default when you pass an array.\n * @param options An options object that can contain a delay value for the start of the animation,\n * and additional developer-defined parameters. Provided values for additional parameters are used\n * as defaults, and override values can be passed to the caller on invocation.\n * @returns An object that encapsulates the transition data.\n *\n * @usageNotes\n * The template associated with a component binds an animation trigger to an element.\n *\n * ```HTML\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * All transitions are defined within an animation trigger,\n * along with named states that the transitions change to and from.\n *\n * ```typescript\n * trigger(\"myAnimationTrigger\", [\n *  // define states\n *  state(\"on\", style({ background: \"green\" })),\n *  state(\"off\", style({ background: \"grey\" })),\n *  ...]\n * ```\n *\n * Note that when you call the `sequence()` function within a `{@link animations/group group()}`\n * or a `transition()` call, execution does not continue to the next instruction\n * until each of the inner animation steps have completed.\n *\n * ### Syntax examples\n *\n * The following examples define transitions between the two defined states (and default states),\n * using various options:\n *\n * ```typescript\n * // Transition occurs when the state value\n * // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n * transition(\"on => off\", animate(500))\n * // Run the same animation for both directions\n * transition(\"on <=> off\", animate(500))\n * // Define multiple state-change pairs separated by commas\n * transition(\"on => off, off => void\", animate(500))\n * ```\n *\n * ### Special values for state-change expressions\n *\n * - Catch-all state change for when an element is inserted into the page and the\n * destination state is unknown:\n *\n * ```typescript\n * transition(\"void => *\", [\n *  style({ opacity: 0 }),\n *  animate(500)\n *  ])\n * ```\n *\n * - Capture a state change between any states:\n *\n *  `transition(\"* => *\", animate(\"1s 0s\"))`\n *\n * - Entry and exit transitions:\n *\n * ```typescript\n * transition(\":enter\", [\n *   style({ opacity: 0 }),\n *   animate(500, style({ opacity: 1 }))\n *   ]),\n * transition(\":leave\", [\n *   animate(500, style({ opacity: 0 }))\n *   ])\n * ```\n *\n * - Use `:increment` and `:decrement` to initiate transitions:\n *\n * ```typescript\n * transition(\":increment\", group([\n *  query(':enter', [\n *     style({ left: '100%' }),\n *     animate('0.5s ease-out', style('*'))\n *   ]),\n *  query(':leave', [\n *     animate('0.5s ease-out', style({ left: '-100%' }))\n *  ])\n * ]))\n *\n * transition(\":decrement\", group([\n *  query(':enter', [\n *     style({ left: '100%' }),\n *     animate('0.5s ease-out', style('*'))\n *   ]),\n *  query(':leave', [\n *     animate('0.5s ease-out', style({ left: '-100%' }))\n *  ])\n * ]))\n * ```\n *\n * ### State-change functions\n *\n * Here is an example of a `fromState` specified as a state-change function that invokes an\n * animation when true:\n *\n * ```typescript\n * transition((fromState, toState) =>\n *  {\n *   return fromState == \"off\" && toState == \"on\";\n *  },\n *  animate(\"1s 0s\"))\n * ```\n *\n * ### Animating to the final state\n *\n * If the final step in a transition is a call to `animate()` that uses a timing value\n * with no style data, that step is automatically considered the final animation arc,\n * for the element to reach the final state. Angular automatically adds or removes\n * CSS styles to ensure that the element is in the correct final state.\n *\n * The following example defines a transition that starts by hiding the element,\n * then makes sure that it animates properly to whatever state is currently active for trigger:\n *\n * ```typescript\n * transition(\"void => *\", [\n *   style({ opacity: 0 }),\n *   animate(500)\n *  ])\n * ```\n * ### Boolean value matching\n * If a trigger binding value is a Boolean, it can be matched using a transition expression\n * that compares true and false or 1 and 0. For example:\n *\n * ```\n * // in the template\n * <div [@openClose]=\"open ? true : false\">...</div>\n * // in the component metadata\n * trigger('openClose', [\n *   state('true', style({ height: '*' })),\n *   state('false', style({ height: '0px' })),\n *   transition('false <=> true', animate(500))\n * ])\n * ```\n *\n * @publicApi\n **/\nfunction transition(stateChangeExpr, steps, options = null) {\n    return { type: 1 /* Transition */, expr: stateChangeExpr, animation: steps, options };\n}\n/**\n * Produces a reusable animation that can be invoked in another animation or sequence,\n * by calling the `useAnimation()` function.\n *\n * @param steps One or more animation objects, as returned by the `animate()`\n * or `sequence()` function, that form a transformation from one state to another.\n * A sequence is used by default when you pass an array.\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional developer-defined parameters.\n * Provided values for additional parameters are used as defaults,\n * and override values can be passed to the caller on invocation.\n * @returns An object that encapsulates the animation data.\n *\n * @usageNotes\n * The following example defines a reusable animation, providing some default parameter\n * values.\n *\n * ```typescript\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *   style({ opacity: '{{ end }}'}))\n *   ],\n *   { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * The following invokes the defined animation with a call to `useAnimation()`,\n * passing in override parameter values.\n *\n * ```js\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If any of the passed-in parameter values are missing from this call,\n * the default values are used. If one or more parameter values are missing before a step is\n * animated, `useAnimation()` throws an error.\n *\n * @publicApi\n */\nfunction animation(steps, options = null) {\n    return { type: 8 /* Reference */, animation: steps, options };\n}\n/**\n * Executes a queried inner animation element within an animation sequence.\n *\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional override values for developer-defined parameters.\n * @return An object that encapsulates the child animation data.\n *\n * @usageNotes\n * Each time an animation is triggered in Angular, the parent animation\n * has priority and any child animations are blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations, and run them using this function.\n *\n * Note that this feature is designed to be used with `query()` and it will only work\n * with animations that are assigned using the Angular animation library. CSS keyframes\n * and transitions are not handled by this API.\n *\n * @publicApi\n */\nfunction animateChild(options = null) {\n    return { type: 9 /* AnimateChild */, options };\n}\n/**\n * Starts a reusable animation that is created using the `animation()` function.\n *\n * @param animation The reusable animation to start.\n * @param options An options object that can contain a delay value for the start of\n * the animation, and additional override values for developer-defined parameters.\n * @return An object that contains the animation parameters.\n *\n * @publicApi\n */\nfunction useAnimation(animation, options = null) {\n    return { type: 10 /* AnimateRef */, animation, options };\n}\n/**\n * Finds one or more inner elements within the current element that is\n * being animated within a sequence. Use with `animate()`.\n *\n * @param selector The element to query, or a set of elements that contain Angular-specific\n * characteristics, specified with one or more of the following tokens.\n *  - `query(\":enter\")` or `query(\":leave\")` : Query for newly inserted/removed elements.\n *  - `query(\":animating\")` : Query all currently animating elements.\n *  - `query(\"@triggerName\")` : Query elements that contain an animation trigger.\n *  - `query(\"@*\")` : Query all elements that contain an animation triggers.\n *  - `query(\":self\")` : Include the current element into the animation sequence.\n *\n * @param animation One or more animation steps to apply to the queried element or elements.\n * An array is treated as an animation sequence.\n * @param options An options object. Use the 'limit' field to limit the total number of\n * items to collect.\n * @return An object that encapsulates the query data.\n *\n * @usageNotes\n * Tokens can be merged into a combined query selector string. For example:\n *\n * ```typescript\n *  query(':self, .record:enter, .record:leave, @subTrigger', [...])\n * ```\n *\n * The `query()` function collects multiple elements and works internally by using\n * `element.querySelectorAll`. Use the `limit` field of an options object to limit\n * the total number of items to be collected. For example:\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * By default, throws an error when zero items are found. Set the\n * `optional` flag to ignore this error. For example:\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Usage Example\n *\n * The following example queries for inner elements and animates them\n * individually using `animate()`.\n *\n * ```typescript\n * @Component({\n *   selector: 'inner',\n *   template: `\n *     <div [@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 }))),\n *        query('.content', animate(1000, style({ opacity: 1 }))),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nfunction query(selector, animation, options = null) {\n    return { type: 11 /* Query */, selector, animation, options };\n}\n/**\n * Use within an animation `query()` call to issue a timing gap after\n * each queried item is animated.\n *\n * @param timings A delay value.\n * @param animation One ore more animation steps.\n * @returns An object that encapsulates the stagger data.\n *\n * @usageNotes\n * In the following example, a container element wraps a list of items stamped out\n * by an `ngFor`. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * Each time items are added, the opacity fade-in animation runs,\n * and each removed item is faded out.\n * When either of these animations occur, the stagger effect is\n * applied after each item's animation is started.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * Here is the component code:\n *\n * ```typescript\n * import {trigger, transition, style, animate, query, stagger} from '@angular/animations';\n * @Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *     ...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *    }\n *  }\n * ```\n *\n * Here is the animation trigger code:\n *\n * ```typescript\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * @publicApi\n */\nfunction stagger(timings, animation) {\n    return { type: 12 /* Stagger */, timings, animation };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction scheduleMicroTask(cb) {\n    Promise.resolve(null).then(cb);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An empty programmatic controller for reusable animations.\n * Used internally when animations are disabled, to avoid\n * checking for the null case when an animation player is expected.\n *\n * @see `animate()`\n * @see `AnimationPlayer`\n * @see `GroupPlayer`\n *\n * @publicApi\n */\nclass NoopAnimationPlayer {\n    constructor(duration = 0, delay = 0) {\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._onDestroyFns = [];\n        this._started = false;\n        this._destroyed = false;\n        this._finished = false;\n        this._position = 0;\n        this.parentPlayer = null;\n        this.totalTime = duration + delay;\n    }\n    _onFinish() {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(fn => fn());\n            this._onDoneFns = [];\n        }\n    }\n    onStart(fn) {\n        this._onStartFns.push(fn);\n    }\n    onDone(fn) {\n        this._onDoneFns.push(fn);\n    }\n    onDestroy(fn) {\n        this._onDestroyFns.push(fn);\n    }\n    hasStarted() {\n        return this._started;\n    }\n    init() { }\n    play() {\n        if (!this.hasStarted()) {\n            this._onStart();\n            this.triggerMicrotask();\n        }\n        this._started = true;\n    }\n    /** @internal */\n    triggerMicrotask() {\n        scheduleMicroTask(() => this._onFinish());\n    }\n    _onStart() {\n        this._onStartFns.forEach(fn => fn());\n        this._onStartFns = [];\n    }\n    pause() { }\n    restart() { }\n    finish() {\n        this._onFinish();\n    }\n    destroy() {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            if (!this.hasStarted()) {\n                this._onStart();\n            }\n            this.finish();\n            this._onDestroyFns.forEach(fn => fn());\n            this._onDestroyFns = [];\n        }\n    }\n    reset() {\n        this._started = false;\n    }\n    setPosition(position) {\n        this._position = this.totalTime ? position * this.totalTime : 1;\n    }\n    getPosition() {\n        return this.totalTime ? this._position / this.totalTime : 1;\n    }\n    /** @internal */\n    triggerCallback(phaseName) {\n        const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n        methods.forEach(fn => fn());\n        methods.length = 0;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A programmatic controller for a group of reusable animations.\n * Used internally to control animations.\n *\n * @see `AnimationPlayer`\n * @see `{@link animations/group group()}`\n *\n */\nclass AnimationGroupPlayer {\n    constructor(_players) {\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._finished = false;\n        this._started = false;\n        this._destroyed = false;\n        this._onDestroyFns = [];\n        this.parentPlayer = null;\n        this.totalTime = 0;\n        this.players = _players;\n        let doneCount = 0;\n        let destroyCount = 0;\n        let startCount = 0;\n        const total = this.players.length;\n        if (total == 0) {\n            scheduleMicroTask(() => this._onFinish());\n        }\n        else {\n            this.players.forEach(player => {\n                player.onDone(() => {\n                    if (++doneCount == total) {\n                        this._onFinish();\n                    }\n                });\n                player.onDestroy(() => {\n                    if (++destroyCount == total) {\n                        this._onDestroy();\n                    }\n                });\n                player.onStart(() => {\n                    if (++startCount == total) {\n                        this._onStart();\n                    }\n                });\n            });\n        }\n        this.totalTime = this.players.reduce((time, player) => Math.max(time, player.totalTime), 0);\n    }\n    _onFinish() {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(fn => fn());\n            this._onDoneFns = [];\n        }\n    }\n    init() {\n        this.players.forEach(player => player.init());\n    }\n    onStart(fn) {\n        this._onStartFns.push(fn);\n    }\n    _onStart() {\n        if (!this.hasStarted()) {\n            this._started = true;\n            this._onStartFns.forEach(fn => fn());\n            this._onStartFns = [];\n        }\n    }\n    onDone(fn) {\n        this._onDoneFns.push(fn);\n    }\n    onDestroy(fn) {\n        this._onDestroyFns.push(fn);\n    }\n    hasStarted() {\n        return this._started;\n    }\n    play() {\n        if (!this.parentPlayer) {\n            this.init();\n        }\n        this._onStart();\n        this.players.forEach(player => player.play());\n    }\n    pause() {\n        this.players.forEach(player => player.pause());\n    }\n    restart() {\n        this.players.forEach(player => player.restart());\n    }\n    finish() {\n        this._onFinish();\n        this.players.forEach(player => player.finish());\n    }\n    destroy() {\n        this._onDestroy();\n    }\n    _onDestroy() {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            this._onFinish();\n            this.players.forEach(player => player.destroy());\n            this._onDestroyFns.forEach(fn => fn());\n            this._onDestroyFns = [];\n        }\n    }\n    reset() {\n        this.players.forEach(player => player.reset());\n        this._destroyed = false;\n        this._finished = false;\n        this._started = false;\n    }\n    setPosition(p) {\n        const timeAtPosition = p * this.totalTime;\n        this.players.forEach(player => {\n            const position = player.totalTime ? Math.min(1, timeAtPosition / player.totalTime) : 1;\n            player.setPosition(position);\n        });\n    }\n    getPosition() {\n        const longestPlayer = this.players.reduce((longestSoFar, player) => {\n            const newPlayerIsLongest = longestSoFar === null || player.totalTime > longestSoFar.totalTime;\n            return newPlayerIsLongest ? player : longestSoFar;\n        }, null);\n        return longestPlayer != null ? longestPlayer.getPosition() : 0;\n    }\n    beforeDestroy() {\n        this.players.forEach(player => {\n            if (player.beforeDestroy) {\n                player.beforeDestroy();\n            }\n        });\n    }\n    /** @internal */\n    triggerCallback(phaseName) {\n        const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n        methods.forEach(fn => fn());\n        methods.length = 0;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ɵPRE_STYLE = '!';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTO_STYLE, AnimationBuilder, AnimationFactory, NoopAnimationPlayer, animate, animateChild, animation, group, keyframes, query, sequence, stagger, state, style, transition, trigger, useAnimation, AnimationGroupPlayer as ɵAnimationGroupPlayer, ɵPRE_STYLE };\n","/**\n * @license Angular v13.0.3\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵAnimationGroupPlayer, NoopAnimationPlayer, AUTO_STYLE, ɵPRE_STYLE, sequence, style } from '@angular/animations';\nimport * as i0 from '@angular/core';\nimport { Injectable } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isBrowser() {\n    return (typeof window !== 'undefined' && typeof window.document !== 'undefined');\n}\nfunction isNode() {\n    // Checking only for `process` isn't enough to identify whether or not we're in a Node\n    // environment, because Webpack by default will polyfill the `process`. While we can discern\n    // that Webpack polyfilled it by looking at `process.browser`, it's very Webpack-specific and\n    // might not be future-proof. Instead we look at the stringified version of `process` which\n    // is `[object process]` in Node and `[object Object]` when polyfilled.\n    return typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n}\nfunction optimizeGroupPlayer(players) {\n    switch (players.length) {\n        case 0:\n            return new NoopAnimationPlayer();\n        case 1:\n            return players[0];\n        default:\n            return new ɵAnimationGroupPlayer(players);\n    }\n}\nfunction normalizeKeyframes(driver, normalizer, element, keyframes, preStyles = {}, postStyles = {}) {\n    const errors = [];\n    const normalizedKeyframes = [];\n    let previousOffset = -1;\n    let previousKeyframe = null;\n    keyframes.forEach(kf => {\n        const offset = kf['offset'];\n        const isSameOffset = offset == previousOffset;\n        const normalizedKeyframe = (isSameOffset && previousKeyframe) || {};\n        Object.keys(kf).forEach(prop => {\n            let normalizedProp = prop;\n            let normalizedValue = kf[prop];\n            if (prop !== 'offset') {\n                normalizedProp = normalizer.normalizePropertyName(normalizedProp, errors);\n                switch (normalizedValue) {\n                    case ɵPRE_STYLE:\n                        normalizedValue = preStyles[prop];\n                        break;\n                    case AUTO_STYLE:\n                        normalizedValue = postStyles[prop];\n                        break;\n                    default:\n                        normalizedValue =\n                            normalizer.normalizeStyleValue(prop, normalizedProp, normalizedValue, errors);\n                        break;\n                }\n            }\n            normalizedKeyframe[normalizedProp] = normalizedValue;\n        });\n        if (!isSameOffset) {\n            normalizedKeyframes.push(normalizedKeyframe);\n        }\n        previousKeyframe = normalizedKeyframe;\n        previousOffset = offset;\n    });\n    if (errors.length) {\n        const LINE_START = '\\n - ';\n        throw new Error(`Unable to animate due to the following errors:${LINE_START}${errors.join(LINE_START)}`);\n    }\n    return normalizedKeyframes;\n}\nfunction listenOnPlayer(player, eventName, event, callback) {\n    switch (eventName) {\n        case 'start':\n            player.onStart(() => callback(event && copyAnimationEvent(event, 'start', player)));\n            break;\n        case 'done':\n            player.onDone(() => callback(event && copyAnimationEvent(event, 'done', player)));\n            break;\n        case 'destroy':\n            player.onDestroy(() => callback(event && copyAnimationEvent(event, 'destroy', player)));\n            break;\n    }\n}\nfunction copyAnimationEvent(e, phaseName, player) {\n    const totalTime = player.totalTime;\n    const disabled = player.disabled ? true : false;\n    const event = makeAnimationEvent(e.element, e.triggerName, e.fromState, e.toState, phaseName || e.phaseName, totalTime == undefined ? e.totalTime : totalTime, disabled);\n    const data = e['_data'];\n    if (data != null) {\n        event['_data'] = data;\n    }\n    return event;\n}\nfunction makeAnimationEvent(element, triggerName, fromState, toState, phaseName = '', totalTime = 0, disabled) {\n    return { element, triggerName, fromState, toState, phaseName, totalTime, disabled: !!disabled };\n}\nfunction getOrSetAsInMap(map, key, defaultValue) {\n    let value;\n    if (map instanceof Map) {\n        value = map.get(key);\n        if (!value) {\n            map.set(key, value = defaultValue);\n        }\n    }\n    else {\n        value = map[key];\n        if (!value) {\n            value = map[key] = defaultValue;\n        }\n    }\n    return value;\n}\nfunction parseTimelineCommand(command) {\n    const separatorPos = command.indexOf(':');\n    const id = command.substring(1, separatorPos);\n    const action = command.substr(separatorPos + 1);\n    return [id, action];\n}\nlet _contains = (elm1, elm2) => false;\nlet _matches = (element, selector) => false;\nlet _query = (element, selector, multi) => {\n    return [];\n};\n// Define utility methods for browsers and platform-server(domino) where Element\n// and utility methods exist.\nconst _isNode = isNode();\nif (_isNode || typeof Element !== 'undefined') {\n    if (!isBrowser()) {\n        _contains = (elm1, elm2) => elm1.contains(elm2);\n    }\n    else {\n        _contains = (elm1, elm2) => {\n            while (elm2 && elm2 !== document.documentElement) {\n                if (elm2 === elm1) {\n                    return true;\n                }\n                elm2 = elm2.parentNode || elm2.host; // consider host to support shadow DOM\n            }\n            return false;\n        };\n    }\n    _matches = (() => {\n        if (_isNode || Element.prototype.matches) {\n            return (element, selector) => element.matches(selector);\n        }\n        else {\n            const proto = Element.prototype;\n            const fn = proto.matchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector ||\n                proto.oMatchesSelector || proto.webkitMatchesSelector;\n            if (fn) {\n                return (element, selector) => fn.apply(element, [selector]);\n            }\n            else {\n                return _matches;\n            }\n        }\n    })();\n    _query = (element, selector, multi) => {\n        let results = [];\n        if (multi) {\n            // DO NOT REFACTOR TO USE SPREAD SYNTAX.\n            // For element queries that return sufficiently large NodeList objects,\n            // using spread syntax to populate the results array causes a RangeError\n            // due to the call stack limit being reached. `Array.from` can not be used\n            // as well, since NodeList is not iterable in IE 11, see\n            // https://developer.mozilla.org/en-US/docs/Web/API/NodeList\n            // More info is available in #38551.\n            const elems = element.querySelectorAll(selector);\n            for (let i = 0; i < elems.length; i++) {\n                results.push(elems[i]);\n            }\n        }\n        else {\n            const elm = element.querySelector(selector);\n            if (elm) {\n                results.push(elm);\n            }\n        }\n        return results;\n    };\n}\nfunction containsVendorPrefix(prop) {\n    // Webkit is the only real popular vendor prefix nowadays\n    // cc: http://shouldiprefix.com/\n    return prop.substring(1, 6) == 'ebkit'; // webkit or Webkit\n}\nlet _CACHED_BODY = null;\nlet _IS_WEBKIT = false;\nfunction validateStyleProperty(prop) {\n    if (!_CACHED_BODY) {\n        _CACHED_BODY = getBodyNode() || {};\n        _IS_WEBKIT = _CACHED_BODY.style ? ('WebkitAppearance' in _CACHED_BODY.style) : false;\n    }\n    let result = true;\n    if (_CACHED_BODY.style && !containsVendorPrefix(prop)) {\n        result = prop in _CACHED_BODY.style;\n        if (!result && _IS_WEBKIT) {\n            const camelProp = 'Webkit' + prop.charAt(0).toUpperCase() + prop.substr(1);\n            result = camelProp in _CACHED_BODY.style;\n        }\n    }\n    return result;\n}\nfunction getBodyNode() {\n    if (typeof document != 'undefined') {\n        return document.body;\n    }\n    return null;\n}\nconst matchesElement = _matches;\nconst containsElement = _contains;\nconst invokeQuery = _query;\nfunction hypenatePropsObject(object) {\n    const newObj = {};\n    Object.keys(object).forEach(prop => {\n        const newProp = prop.replace(/([a-z])([A-Z])/g, '$1-$2');\n        newObj[newProp] = object[prop];\n    });\n    return newObj;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nclass NoopAnimationDriver {\n    validateStyleProperty(prop) {\n        return validateStyleProperty(prop);\n    }\n    matchesElement(element, selector) {\n        return matchesElement(element, selector);\n    }\n    containsElement(elm1, elm2) {\n        return containsElement(elm1, elm2);\n    }\n    query(element, selector, multi) {\n        return invokeQuery(element, selector, multi);\n    }\n    computeStyle(element, prop, defaultValue) {\n        return defaultValue || '';\n    }\n    animate(element, keyframes, duration, delay, easing, previousPlayers = [], scrubberAccessRequested) {\n        return new NoopAnimationPlayer(duration, delay);\n    }\n}\nNoopAnimationDriver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NoopAnimationDriver, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNoopAnimationDriver.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NoopAnimationDriver });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NoopAnimationDriver, decorators: [{\n            type: Injectable\n        }] });\n/**\n * @publicApi\n */\nclass AnimationDriver {\n}\nAnimationDriver.NOOP = ( /* @__PURE__ */new NoopAnimationDriver());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ONE_SECOND$1 = 1000;\nconst SUBSTITUTION_EXPR_START = '{{';\nconst SUBSTITUTION_EXPR_END = '}}';\nconst ENTER_CLASSNAME = 'ng-enter';\nconst LEAVE_CLASSNAME = 'ng-leave';\nconst ENTER_SELECTOR = '.ng-enter';\nconst LEAVE_SELECTOR = '.ng-leave';\nconst NG_TRIGGER_CLASSNAME = 'ng-trigger';\nconst NG_TRIGGER_SELECTOR = '.ng-trigger';\nconst NG_ANIMATING_CLASSNAME = 'ng-animating';\nconst NG_ANIMATING_SELECTOR = '.ng-animating';\nfunction resolveTimingValue(value) {\n    if (typeof value == 'number')\n        return value;\n    const matches = value.match(/^(-?[\\.\\d]+)(m?s)/);\n    if (!matches || matches.length < 2)\n        return 0;\n    return _convertTimeValueToMS(parseFloat(matches[1]), matches[2]);\n}\nfunction _convertTimeValueToMS(value, unit) {\n    switch (unit) {\n        case 's':\n            return value * ONE_SECOND$1;\n        default: // ms or something else\n            return value;\n    }\n}\nfunction resolveTiming(timings, errors, allowNegativeValues) {\n    return timings.hasOwnProperty('duration') ?\n        timings :\n        parseTimeExpression(timings, errors, allowNegativeValues);\n}\nfunction parseTimeExpression(exp, errors, allowNegativeValues) {\n    const regex = /^(-?[\\.\\d]+)(m?s)(?:\\s+(-?[\\.\\d]+)(m?s))?(?:\\s+([-a-z]+(?:\\(.+?\\))?))?$/i;\n    let duration;\n    let delay = 0;\n    let easing = '';\n    if (typeof exp === 'string') {\n        const matches = exp.match(regex);\n        if (matches === null) {\n            errors.push(`The provided timing value \"${exp}\" is invalid.`);\n            return { duration: 0, delay: 0, easing: '' };\n        }\n        duration = _convertTimeValueToMS(parseFloat(matches[1]), matches[2]);\n        const delayMatch = matches[3];\n        if (delayMatch != null) {\n            delay = _convertTimeValueToMS(parseFloat(delayMatch), matches[4]);\n        }\n        const easingVal = matches[5];\n        if (easingVal) {\n            easing = easingVal;\n        }\n    }\n    else {\n        duration = exp;\n    }\n    if (!allowNegativeValues) {\n        let containsErrors = false;\n        let startIndex = errors.length;\n        if (duration < 0) {\n            errors.push(`Duration values below 0 are not allowed for this animation step.`);\n            containsErrors = true;\n        }\n        if (delay < 0) {\n            errors.push(`Delay values below 0 are not allowed for this animation step.`);\n            containsErrors = true;\n        }\n        if (containsErrors) {\n            errors.splice(startIndex, 0, `The provided timing value \"${exp}\" is invalid.`);\n        }\n    }\n    return { duration, delay, easing };\n}\nfunction copyObj(obj, destination = {}) {\n    Object.keys(obj).forEach(prop => {\n        destination[prop] = obj[prop];\n    });\n    return destination;\n}\nfunction normalizeStyles(styles) {\n    const normalizedStyles = {};\n    if (Array.isArray(styles)) {\n        styles.forEach(data => copyStyles(data, false, normalizedStyles));\n    }\n    else {\n        copyStyles(styles, false, normalizedStyles);\n    }\n    return normalizedStyles;\n}\nfunction copyStyles(styles, readPrototype, destination = {}) {\n    if (readPrototype) {\n        // we make use of a for-in loop so that the\n        // prototypically inherited properties are\n        // revealed from the backFill map\n        for (let prop in styles) {\n            destination[prop] = styles[prop];\n        }\n    }\n    else {\n        copyObj(styles, destination);\n    }\n    return destination;\n}\nfunction getStyleAttributeString(element, key, value) {\n    // Return the key-value pair string to be added to the style attribute for the\n    // given CSS style key.\n    if (value) {\n        return key + ':' + value + ';';\n    }\n    else {\n        return '';\n    }\n}\nfunction writeStyleAttribute(element) {\n    // Read the style property of the element and manually reflect it to the\n    // style attribute. This is needed because Domino on platform-server doesn't\n    // understand the full set of allowed CSS properties and doesn't reflect some\n    // of them automatically.\n    let styleAttrValue = '';\n    for (let i = 0; i < element.style.length; i++) {\n        const key = element.style.item(i);\n        styleAttrValue += getStyleAttributeString(element, key, element.style.getPropertyValue(key));\n    }\n    for (const key in element.style) {\n        // Skip internal Domino properties that don't need to be reflected.\n        if (!element.style.hasOwnProperty(key) || key.startsWith('_')) {\n            continue;\n        }\n        const dashKey = camelCaseToDashCase(key);\n        styleAttrValue += getStyleAttributeString(element, dashKey, element.style[key]);\n    }\n    element.setAttribute('style', styleAttrValue);\n}\nfunction setStyles(element, styles, formerStyles) {\n    if (element['style']) {\n        Object.keys(styles).forEach(prop => {\n            const camelProp = dashCaseToCamelCase(prop);\n            if (formerStyles && !formerStyles.hasOwnProperty(prop)) {\n                formerStyles[prop] = element.style[camelProp];\n            }\n            element.style[camelProp] = styles[prop];\n        });\n        // On the server set the 'style' attribute since it's not automatically reflected.\n        if (isNode()) {\n            writeStyleAttribute(element);\n        }\n    }\n}\nfunction eraseStyles(element, styles) {\n    if (element['style']) {\n        Object.keys(styles).forEach(prop => {\n            const camelProp = dashCaseToCamelCase(prop);\n            element.style[camelProp] = '';\n        });\n        // On the server set the 'style' attribute since it's not automatically reflected.\n        if (isNode()) {\n            writeStyleAttribute(element);\n        }\n    }\n}\nfunction normalizeAnimationEntry(steps) {\n    if (Array.isArray(steps)) {\n        if (steps.length == 1)\n            return steps[0];\n        return sequence(steps);\n    }\n    return steps;\n}\nfunction validateStyleParams(value, options, errors) {\n    const params = options.params || {};\n    const matches = extractStyleParams(value);\n    if (matches.length) {\n        matches.forEach(varName => {\n            if (!params.hasOwnProperty(varName)) {\n                errors.push(`Unable to resolve the local animation param ${varName} in the given list of values`);\n            }\n        });\n    }\n}\nconst PARAM_REGEX = new RegExp(`${SUBSTITUTION_EXPR_START}\\\\s*(.+?)\\\\s*${SUBSTITUTION_EXPR_END}`, 'g');\nfunction extractStyleParams(value) {\n    let params = [];\n    if (typeof value === 'string') {\n        let match;\n        while (match = PARAM_REGEX.exec(value)) {\n            params.push(match[1]);\n        }\n        PARAM_REGEX.lastIndex = 0;\n    }\n    return params;\n}\nfunction interpolateParams(value, params, errors) {\n    const original = value.toString();\n    const str = original.replace(PARAM_REGEX, (_, varName) => {\n        let localVal = params[varName];\n        // this means that the value was never overridden by the data passed in by the user\n        if (!params.hasOwnProperty(varName)) {\n            errors.push(`Please provide a value for the animation param ${varName}`);\n            localVal = '';\n        }\n        return localVal.toString();\n    });\n    // we do this to assert that numeric values stay as they are\n    return str == original ? value : str;\n}\nfunction iteratorToArray(iterator) {\n    const arr = [];\n    let item = iterator.next();\n    while (!item.done) {\n        arr.push(item.value);\n        item = iterator.next();\n    }\n    return arr;\n}\nconst DASH_CASE_REGEXP = /-+([a-z0-9])/g;\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, (...m) => m[1].toUpperCase());\n}\nfunction camelCaseToDashCase(input) {\n    return input.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\nfunction allowPreviousPlayerStylesMerge(duration, delay) {\n    return duration === 0 || delay === 0;\n}\nfunction balancePreviousStylesIntoKeyframes(element, keyframes, previousStyles) {\n    const previousStyleProps = Object.keys(previousStyles);\n    if (previousStyleProps.length && keyframes.length) {\n        let startingKeyframe = keyframes[0];\n        let missingStyleProps = [];\n        previousStyleProps.forEach(prop => {\n            if (!startingKeyframe.hasOwnProperty(prop)) {\n                missingStyleProps.push(prop);\n            }\n            startingKeyframe[prop] = previousStyles[prop];\n        });\n        if (missingStyleProps.length) {\n            // tslint:disable-next-line\n            for (var i = 1; i < keyframes.length; i++) {\n                let kf = keyframes[i];\n                missingStyleProps.forEach(function (prop) {\n                    kf[prop] = computeStyle(element, prop);\n                });\n            }\n        }\n    }\n    return keyframes;\n}\nfunction visitDslNode(visitor, node, context) {\n    switch (node.type) {\n        case 7 /* Trigger */:\n            return visitor.visitTrigger(node, context);\n        case 0 /* State */:\n            return visitor.visitState(node, context);\n        case 1 /* Transition */:\n            return visitor.visitTransition(node, context);\n        case 2 /* Sequence */:\n            return visitor.visitSequence(node, context);\n        case 3 /* Group */:\n            return visitor.visitGroup(node, context);\n        case 4 /* Animate */:\n            return visitor.visitAnimate(node, context);\n        case 5 /* Keyframes */:\n            return visitor.visitKeyframes(node, context);\n        case 6 /* Style */:\n            return visitor.visitStyle(node, context);\n        case 8 /* Reference */:\n            return visitor.visitReference(node, context);\n        case 9 /* AnimateChild */:\n            return visitor.visitAnimateChild(node, context);\n        case 10 /* AnimateRef */:\n            return visitor.visitAnimateRef(node, context);\n        case 11 /* Query */:\n            return visitor.visitQuery(node, context);\n        case 12 /* Stagger */:\n            return visitor.visitStagger(node, context);\n        default:\n            throw new Error(`Unable to resolve animation metadata node #${node.type}`);\n    }\n}\nfunction computeStyle(element, prop) {\n    return window.getComputedStyle(element)[prop];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ANY_STATE = '*';\nfunction parseTransitionExpr(transitionValue, errors) {\n    const expressions = [];\n    if (typeof transitionValue == 'string') {\n        transitionValue.split(/\\s*,\\s*/).forEach(str => parseInnerTransitionStr(str, expressions, errors));\n    }\n    else {\n        expressions.push(transitionValue);\n    }\n    return expressions;\n}\nfunction parseInnerTransitionStr(eventStr, expressions, errors) {\n    if (eventStr[0] == ':') {\n        const result = parseAnimationAlias(eventStr, errors);\n        if (typeof result == 'function') {\n            expressions.push(result);\n            return;\n        }\n        eventStr = result;\n    }\n    const match = eventStr.match(/^(\\*|[-\\w]+)\\s*(<?[=-]>)\\s*(\\*|[-\\w]+)$/);\n    if (match == null || match.length < 4) {\n        errors.push(`The provided transition expression \"${eventStr}\" is not supported`);\n        return expressions;\n    }\n    const fromState = match[1];\n    const separator = match[2];\n    const toState = match[3];\n    expressions.push(makeLambdaFromStates(fromState, toState));\n    const isFullAnyStateExpr = fromState == ANY_STATE && toState == ANY_STATE;\n    if (separator[0] == '<' && !isFullAnyStateExpr) {\n        expressions.push(makeLambdaFromStates(toState, fromState));\n    }\n}\nfunction parseAnimationAlias(alias, errors) {\n    switch (alias) {\n        case ':enter':\n            return 'void => *';\n        case ':leave':\n            return '* => void';\n        case ':increment':\n            return (fromState, toState) => parseFloat(toState) > parseFloat(fromState);\n        case ':decrement':\n            return (fromState, toState) => parseFloat(toState) < parseFloat(fromState);\n        default:\n            errors.push(`The transition alias value \"${alias}\" is not supported`);\n            return '* => *';\n    }\n}\n// DO NOT REFACTOR ... keep the follow set instantiations\n// with the values intact (closure compiler for some reason\n// removes follow-up lines that add the values outside of\n// the constructor...\nconst TRUE_BOOLEAN_VALUES = new Set(['true', '1']);\nconst FALSE_BOOLEAN_VALUES = new Set(['false', '0']);\nfunction makeLambdaFromStates(lhs, rhs) {\n    const LHS_MATCH_BOOLEAN = TRUE_BOOLEAN_VALUES.has(lhs) || FALSE_BOOLEAN_VALUES.has(lhs);\n    const RHS_MATCH_BOOLEAN = TRUE_BOOLEAN_VALUES.has(rhs) || FALSE_BOOLEAN_VALUES.has(rhs);\n    return (fromState, toState) => {\n        let lhsMatch = lhs == ANY_STATE || lhs == fromState;\n        let rhsMatch = rhs == ANY_STATE || rhs == toState;\n        if (!lhsMatch && LHS_MATCH_BOOLEAN && typeof fromState === 'boolean') {\n            lhsMatch = fromState ? TRUE_BOOLEAN_VALUES.has(lhs) : FALSE_BOOLEAN_VALUES.has(lhs);\n        }\n        if (!rhsMatch && RHS_MATCH_BOOLEAN && typeof toState === 'boolean') {\n            rhsMatch = toState ? TRUE_BOOLEAN_VALUES.has(rhs) : FALSE_BOOLEAN_VALUES.has(rhs);\n        }\n        return lhsMatch && rhsMatch;\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SELF_TOKEN = ':self';\nconst SELF_TOKEN_REGEX = new RegExp(`\\s*${SELF_TOKEN}\\s*,?`, 'g');\n/*\n * [Validation]\n * The visitor code below will traverse the animation AST generated by the animation verb functions\n * (the output is a tree of objects) and attempt to perform a series of validations on the data. The\n * following corner-cases will be validated:\n *\n * 1. Overlap of animations\n * Given that a CSS property cannot be animated in more than one place at the same time, it's\n * important that this behavior is detected and validated. The way in which this occurs is that\n * each time a style property is examined, a string-map containing the property will be updated with\n * the start and end times for when the property is used within an animation step.\n *\n * If there are two or more parallel animations that are currently running (these are invoked by the\n * group()) on the same element then the validator will throw an error. Since the start/end timing\n * values are collected for each property then if the current animation step is animating the same\n * property and its timing values fall anywhere into the window of time that the property is\n * currently being animated within then this is what causes an error.\n *\n * 2. Timing values\n * The validator will validate to see if a timing value of `duration delay easing` or\n * `durationNumber` is valid or not.\n *\n * (note that upon validation the code below will replace the timing data with an object containing\n * {duration,delay,easing}.\n *\n * 3. Offset Validation\n * Each of the style() calls are allowed to have an offset value when placed inside of keyframes().\n * Offsets within keyframes() are considered valid when:\n *\n *   - No offsets are used at all\n *   - Each style() entry contains an offset value\n *   - Each offset is between 0 and 1\n *   - Each offset is greater to or equal than the previous one\n *\n * Otherwise an error will be thrown.\n */\nfunction buildAnimationAst(driver, metadata, errors) {\n    return new AnimationAstBuilderVisitor(driver).build(metadata, errors);\n}\nconst ROOT_SELECTOR = '';\nclass AnimationAstBuilderVisitor {\n    constructor(_driver) {\n        this._driver = _driver;\n    }\n    build(metadata, errors) {\n        const context = new AnimationAstBuilderContext(errors);\n        this._resetContextStyleTimingState(context);\n        return visitDslNode(this, normalizeAnimationEntry(metadata), context);\n    }\n    _resetContextStyleTimingState(context) {\n        context.currentQuerySelector = ROOT_SELECTOR;\n        context.collectedStyles = {};\n        context.collectedStyles[ROOT_SELECTOR] = {};\n        context.currentTime = 0;\n    }\n    visitTrigger(metadata, context) {\n        let queryCount = context.queryCount = 0;\n        let depCount = context.depCount = 0;\n        const states = [];\n        const transitions = [];\n        if (metadata.name.charAt(0) == '@') {\n            context.errors.push('animation triggers cannot be prefixed with an `@` sign (e.g. trigger(\\'@foo\\', [...]))');\n        }\n        metadata.definitions.forEach(def => {\n            this._resetContextStyleTimingState(context);\n            if (def.type == 0 /* State */) {\n                const stateDef = def;\n                const name = stateDef.name;\n                name.toString().split(/\\s*,\\s*/).forEach(n => {\n                    stateDef.name = n;\n                    states.push(this.visitState(stateDef, context));\n                });\n                stateDef.name = name;\n            }\n            else if (def.type == 1 /* Transition */) {\n                const transition = this.visitTransition(def, context);\n                queryCount += transition.queryCount;\n                depCount += transition.depCount;\n                transitions.push(transition);\n            }\n            else {\n                context.errors.push('only state() and transition() definitions can sit inside of a trigger()');\n            }\n        });\n        return {\n            type: 7 /* Trigger */,\n            name: metadata.name,\n            states,\n            transitions,\n            queryCount,\n            depCount,\n            options: null\n        };\n    }\n    visitState(metadata, context) {\n        const styleAst = this.visitStyle(metadata.styles, context);\n        const astParams = (metadata.options && metadata.options.params) || null;\n        if (styleAst.containsDynamicStyles) {\n            const missingSubs = new Set();\n            const params = astParams || {};\n            styleAst.styles.forEach(value => {\n                if (isObject(value)) {\n                    const stylesObj = value;\n                    Object.keys(stylesObj).forEach(prop => {\n                        extractStyleParams(stylesObj[prop]).forEach(sub => {\n                            if (!params.hasOwnProperty(sub)) {\n                                missingSubs.add(sub);\n                            }\n                        });\n                    });\n                }\n            });\n            if (missingSubs.size) {\n                const missingSubsArr = iteratorToArray(missingSubs.values());\n                context.errors.push(`state(\"${metadata\n                    .name}\", ...) must define default values for all the following style substitutions: ${missingSubsArr.join(', ')}`);\n            }\n        }\n        return {\n            type: 0 /* State */,\n            name: metadata.name,\n            style: styleAst,\n            options: astParams ? { params: astParams } : null\n        };\n    }\n    visitTransition(metadata, context) {\n        context.queryCount = 0;\n        context.depCount = 0;\n        const animation = visitDslNode(this, normalizeAnimationEntry(metadata.animation), context);\n        const matchers = parseTransitionExpr(metadata.expr, context.errors);\n        return {\n            type: 1 /* Transition */,\n            matchers,\n            animation,\n            queryCount: context.queryCount,\n            depCount: context.depCount,\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    }\n    visitSequence(metadata, context) {\n        return {\n            type: 2 /* Sequence */,\n            steps: metadata.steps.map(s => visitDslNode(this, s, context)),\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    }\n    visitGroup(metadata, context) {\n        const currentTime = context.currentTime;\n        let furthestTime = 0;\n        const steps = metadata.steps.map(step => {\n            context.currentTime = currentTime;\n            const innerAst = visitDslNode(this, step, context);\n            furthestTime = Math.max(furthestTime, context.currentTime);\n            return innerAst;\n        });\n        context.currentTime = furthestTime;\n        return {\n            type: 3 /* Group */,\n            steps,\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    }\n    visitAnimate(metadata, context) {\n        const timingAst = constructTimingAst(metadata.timings, context.errors);\n        context.currentAnimateTimings = timingAst;\n        let styleAst;\n        let styleMetadata = metadata.styles ? metadata.styles : style({});\n        if (styleMetadata.type == 5 /* Keyframes */) {\n            styleAst = this.visitKeyframes(styleMetadata, context);\n        }\n        else {\n            let styleMetadata = metadata.styles;\n            let isEmpty = false;\n            if (!styleMetadata) {\n                isEmpty = true;\n                const newStyleData = {};\n                if (timingAst.easing) {\n                    newStyleData['easing'] = timingAst.easing;\n                }\n                styleMetadata = style(newStyleData);\n            }\n            context.currentTime += timingAst.duration + timingAst.delay;\n            const _styleAst = this.visitStyle(styleMetadata, context);\n            _styleAst.isEmptyStep = isEmpty;\n            styleAst = _styleAst;\n        }\n        context.currentAnimateTimings = null;\n        return {\n            type: 4 /* Animate */,\n            timings: timingAst,\n            style: styleAst,\n            options: null\n        };\n    }\n    visitStyle(metadata, context) {\n        const ast = this._makeStyleAst(metadata, context);\n        this._validateStyleAst(ast, context);\n        return ast;\n    }\n    _makeStyleAst(metadata, context) {\n        const styles = [];\n        if (Array.isArray(metadata.styles)) {\n            metadata.styles.forEach(styleTuple => {\n                if (typeof styleTuple == 'string') {\n                    if (styleTuple == AUTO_STYLE) {\n                        styles.push(styleTuple);\n                    }\n                    else {\n                        context.errors.push(`The provided style string value ${styleTuple} is not allowed.`);\n                    }\n                }\n                else {\n                    styles.push(styleTuple);\n                }\n            });\n        }\n        else {\n            styles.push(metadata.styles);\n        }\n        let containsDynamicStyles = false;\n        let collectedEasing = null;\n        styles.forEach(styleData => {\n            if (isObject(styleData)) {\n                const styleMap = styleData;\n                const easing = styleMap['easing'];\n                if (easing) {\n                    collectedEasing = easing;\n                    delete styleMap['easing'];\n                }\n                if (!containsDynamicStyles) {\n                    for (let prop in styleMap) {\n                        const value = styleMap[prop];\n                        if (value.toString().indexOf(SUBSTITUTION_EXPR_START) >= 0) {\n                            containsDynamicStyles = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        });\n        return {\n            type: 6 /* Style */,\n            styles,\n            easing: collectedEasing,\n            offset: metadata.offset,\n            containsDynamicStyles,\n            options: null\n        };\n    }\n    _validateStyleAst(ast, context) {\n        const timings = context.currentAnimateTimings;\n        let endTime = context.currentTime;\n        let startTime = context.currentTime;\n        if (timings && startTime > 0) {\n            startTime -= timings.duration + timings.delay;\n        }\n        ast.styles.forEach(tuple => {\n            if (typeof tuple == 'string')\n                return;\n            Object.keys(tuple).forEach(prop => {\n                if (!this._driver.validateStyleProperty(prop)) {\n                    context.errors.push(`The provided animation property \"${prop}\" is not a supported CSS property for animations`);\n                    return;\n                }\n                const collectedStyles = context.collectedStyles[context.currentQuerySelector];\n                const collectedEntry = collectedStyles[prop];\n                let updateCollectedStyle = true;\n                if (collectedEntry) {\n                    if (startTime != endTime && startTime >= collectedEntry.startTime &&\n                        endTime <= collectedEntry.endTime) {\n                        context.errors.push(`The CSS property \"${prop}\" that exists between the times of \"${collectedEntry.startTime}ms\" and \"${collectedEntry\n                            .endTime}ms\" is also being animated in a parallel animation between the times of \"${startTime}ms\" and \"${endTime}ms\"`);\n                        updateCollectedStyle = false;\n                    }\n                    // we always choose the smaller start time value since we\n                    // want to have a record of the entire animation window where\n                    // the style property is being animated in between\n                    startTime = collectedEntry.startTime;\n                }\n                if (updateCollectedStyle) {\n                    collectedStyles[prop] = { startTime, endTime };\n                }\n                if (context.options) {\n                    validateStyleParams(tuple[prop], context.options, context.errors);\n                }\n            });\n        });\n    }\n    visitKeyframes(metadata, context) {\n        const ast = { type: 5 /* Keyframes */, styles: [], options: null };\n        if (!context.currentAnimateTimings) {\n            context.errors.push(`keyframes() must be placed inside of a call to animate()`);\n            return ast;\n        }\n        const MAX_KEYFRAME_OFFSET = 1;\n        let totalKeyframesWithOffsets = 0;\n        const offsets = [];\n        let offsetsOutOfOrder = false;\n        let keyframesOutOfRange = false;\n        let previousOffset = 0;\n        const keyframes = metadata.steps.map(styles => {\n            const style = this._makeStyleAst(styles, context);\n            let offsetVal = style.offset != null ? style.offset : consumeOffset(style.styles);\n            let offset = 0;\n            if (offsetVal != null) {\n                totalKeyframesWithOffsets++;\n                offset = style.offset = offsetVal;\n            }\n            keyframesOutOfRange = keyframesOutOfRange || offset < 0 || offset > 1;\n            offsetsOutOfOrder = offsetsOutOfOrder || offset < previousOffset;\n            previousOffset = offset;\n            offsets.push(offset);\n            return style;\n        });\n        if (keyframesOutOfRange) {\n            context.errors.push(`Please ensure that all keyframe offsets are between 0 and 1`);\n        }\n        if (offsetsOutOfOrder) {\n            context.errors.push(`Please ensure that all keyframe offsets are in order`);\n        }\n        const length = metadata.steps.length;\n        let generatedOffset = 0;\n        if (totalKeyframesWithOffsets > 0 && totalKeyframesWithOffsets < length) {\n            context.errors.push(`Not all style() steps within the declared keyframes() contain offsets`);\n        }\n        else if (totalKeyframesWithOffsets == 0) {\n            generatedOffset = MAX_KEYFRAME_OFFSET / (length - 1);\n        }\n        const limit = length - 1;\n        const currentTime = context.currentTime;\n        const currentAnimateTimings = context.currentAnimateTimings;\n        const animateDuration = currentAnimateTimings.duration;\n        keyframes.forEach((kf, i) => {\n            const offset = generatedOffset > 0 ? (i == limit ? 1 : (generatedOffset * i)) : offsets[i];\n            const durationUpToThisFrame = offset * animateDuration;\n            context.currentTime = currentTime + currentAnimateTimings.delay + durationUpToThisFrame;\n            currentAnimateTimings.duration = durationUpToThisFrame;\n            this._validateStyleAst(kf, context);\n            kf.offset = offset;\n            ast.styles.push(kf);\n        });\n        return ast;\n    }\n    visitReference(metadata, context) {\n        return {\n            type: 8 /* Reference */,\n            animation: visitDslNode(this, normalizeAnimationEntry(metadata.animation), context),\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    }\n    visitAnimateChild(metadata, context) {\n        context.depCount++;\n        return {\n            type: 9 /* AnimateChild */,\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    }\n    visitAnimateRef(metadata, context) {\n        return {\n            type: 10 /* AnimateRef */,\n            animation: this.visitReference(metadata.animation, context),\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    }\n    visitQuery(metadata, context) {\n        const parentSelector = context.currentQuerySelector;\n        const options = (metadata.options || {});\n        context.queryCount++;\n        context.currentQuery = metadata;\n        const [selector, includeSelf] = normalizeSelector(metadata.selector);\n        context.currentQuerySelector =\n            parentSelector.length ? (parentSelector + ' ' + selector) : selector;\n        getOrSetAsInMap(context.collectedStyles, context.currentQuerySelector, {});\n        const animation = visitDslNode(this, normalizeAnimationEntry(metadata.animation), context);\n        context.currentQuery = null;\n        context.currentQuerySelector = parentSelector;\n        return {\n            type: 11 /* Query */,\n            selector,\n            limit: options.limit || 0,\n            optional: !!options.optional,\n            includeSelf,\n            animation,\n            originalSelector: metadata.selector,\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    }\n    visitStagger(metadata, context) {\n        if (!context.currentQuery) {\n            context.errors.push(`stagger() can only be used inside of query()`);\n        }\n        const timings = metadata.timings === 'full' ?\n            { duration: 0, delay: 0, easing: 'full' } :\n            resolveTiming(metadata.timings, context.errors, true);\n        return {\n            type: 12 /* Stagger */,\n            animation: visitDslNode(this, normalizeAnimationEntry(metadata.animation), context),\n            timings,\n            options: null\n        };\n    }\n}\nfunction normalizeSelector(selector) {\n    const hasAmpersand = selector.split(/\\s*,\\s*/).find(token => token == SELF_TOKEN) ? true : false;\n    if (hasAmpersand) {\n        selector = selector.replace(SELF_TOKEN_REGEX, '');\n    }\n    // Note: the :enter and :leave aren't normalized here since those\n    // selectors are filled in at runtime during timeline building\n    selector = selector.replace(/@\\*/g, NG_TRIGGER_SELECTOR)\n        .replace(/@\\w+/g, match => NG_TRIGGER_SELECTOR + '-' + match.substr(1))\n        .replace(/:animating/g, NG_ANIMATING_SELECTOR);\n    return [selector, hasAmpersand];\n}\nfunction normalizeParams(obj) {\n    return obj ? copyObj(obj) : null;\n}\nclass AnimationAstBuilderContext {\n    constructor(errors) {\n        this.errors = errors;\n        this.queryCount = 0;\n        this.depCount = 0;\n        this.currentTransition = null;\n        this.currentQuery = null;\n        this.currentQuerySelector = null;\n        this.currentAnimateTimings = null;\n        this.currentTime = 0;\n        this.collectedStyles = {};\n        this.options = null;\n    }\n}\nfunction consumeOffset(styles) {\n    if (typeof styles == 'string')\n        return null;\n    let offset = null;\n    if (Array.isArray(styles)) {\n        styles.forEach(styleTuple => {\n            if (isObject(styleTuple) && styleTuple.hasOwnProperty('offset')) {\n                const obj = styleTuple;\n                offset = parseFloat(obj['offset']);\n                delete obj['offset'];\n            }\n        });\n    }\n    else if (isObject(styles) && styles.hasOwnProperty('offset')) {\n        const obj = styles;\n        offset = parseFloat(obj['offset']);\n        delete obj['offset'];\n    }\n    return offset;\n}\nfunction isObject(value) {\n    return !Array.isArray(value) && typeof value == 'object';\n}\nfunction constructTimingAst(value, errors) {\n    let timings = null;\n    if (value.hasOwnProperty('duration')) {\n        timings = value;\n    }\n    else if (typeof value == 'number') {\n        const duration = resolveTiming(value, errors).duration;\n        return makeTimingAst(duration, 0, '');\n    }\n    const strValue = value;\n    const isDynamic = strValue.split(/\\s+/).some(v => v.charAt(0) == '{' && v.charAt(1) == '{');\n    if (isDynamic) {\n        const ast = makeTimingAst(0, 0, '');\n        ast.dynamic = true;\n        ast.strValue = strValue;\n        return ast;\n    }\n    timings = timings || resolveTiming(strValue, errors);\n    return makeTimingAst(timings.duration, timings.delay, timings.easing);\n}\nfunction normalizeAnimationOptions(options) {\n    if (options) {\n        options = copyObj(options);\n        if (options['params']) {\n            options['params'] = normalizeParams(options['params']);\n        }\n    }\n    else {\n        options = {};\n    }\n    return options;\n}\nfunction makeTimingAst(duration, delay, easing) {\n    return { duration, delay, easing };\n}\n\nfunction createTimelineInstruction(element, keyframes, preStyleProps, postStyleProps, duration, delay, easing = null, subTimeline = false) {\n    return {\n        type: 1 /* TimelineAnimation */,\n        element,\n        keyframes,\n        preStyleProps,\n        postStyleProps,\n        duration,\n        delay,\n        totalTime: duration + delay,\n        easing,\n        subTimeline\n    };\n}\n\nclass ElementInstructionMap {\n    constructor() {\n        this._map = new Map();\n    }\n    consume(element) {\n        let instructions = this._map.get(element);\n        if (instructions) {\n            this._map.delete(element);\n        }\n        else {\n            instructions = [];\n        }\n        return instructions;\n    }\n    append(element, instructions) {\n        let existingInstructions = this._map.get(element);\n        if (!existingInstructions) {\n            this._map.set(element, existingInstructions = []);\n        }\n        existingInstructions.push(...instructions);\n    }\n    has(element) {\n        return this._map.has(element);\n    }\n    clear() {\n        this._map.clear();\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ONE_FRAME_IN_MILLISECONDS = 1;\nconst ENTER_TOKEN = ':enter';\nconst ENTER_TOKEN_REGEX = new RegExp(ENTER_TOKEN, 'g');\nconst LEAVE_TOKEN = ':leave';\nconst LEAVE_TOKEN_REGEX = new RegExp(LEAVE_TOKEN, 'g');\n/*\n * The code within this file aims to generate web-animations-compatible keyframes from Angular's\n * animation DSL code.\n *\n * The code below will be converted from:\n *\n * ```\n * sequence([\n *   style({ opacity: 0 }),\n *   animate(1000, style({ opacity: 0 }))\n * ])\n * ```\n *\n * To:\n * ```\n * keyframes = [{ opacity: 0, offset: 0 }, { opacity: 1, offset: 1 }]\n * duration = 1000\n * delay = 0\n * easing = ''\n * ```\n *\n * For this operation to cover the combination of animation verbs (style, animate, group, etc...) a\n * combination of prototypical inheritance, AST traversal and merge-sort-like algorithms are used.\n *\n * [AST Traversal]\n * Each of the animation verbs, when executed, will return an string-map object representing what\n * type of action it is (style, animate, group, etc...) and the data associated with it. This means\n * that when functional composition mix of these functions is evaluated (like in the example above)\n * then it will end up producing a tree of objects representing the animation itself.\n *\n * When this animation object tree is processed by the visitor code below it will visit each of the\n * verb statements within the visitor. And during each visit it will build the context of the\n * animation keyframes by interacting with the `TimelineBuilder`.\n *\n * [TimelineBuilder]\n * This class is responsible for tracking the styles and building a series of keyframe objects for a\n * timeline between a start and end time. The builder starts off with an initial timeline and each\n * time the AST comes across a `group()`, `keyframes()` or a combination of the two within a\n * `sequence()` then it will generate a sub timeline for each step as well as a new one after\n * they are complete.\n *\n * As the AST is traversed, the timing state on each of the timelines will be incremented. If a sub\n * timeline was created (based on one of the cases above) then the parent timeline will attempt to\n * merge the styles used within the sub timelines into itself (only with group() this will happen).\n * This happens with a merge operation (much like how the merge works in mergeSort) and it will only\n * copy the most recently used styles from the sub timelines into the parent timeline. This ensures\n * that if the styles are used later on in another phase of the animation then they will be the most\n * up-to-date values.\n *\n * [How Missing Styles Are Updated]\n * Each timeline has a `backFill` property which is responsible for filling in new styles into\n * already processed keyframes if a new style shows up later within the animation sequence.\n *\n * ```\n * sequence([\n *   style({ width: 0 }),\n *   animate(1000, style({ width: 100 })),\n *   animate(1000, style({ width: 200 })),\n *   animate(1000, style({ width: 300 }))\n *   animate(1000, style({ width: 400, height: 400 })) // notice how `height` doesn't exist anywhere\n * else\n * ])\n * ```\n *\n * What is happening here is that the `height` value is added later in the sequence, but is missing\n * from all previous animation steps. Therefore when a keyframe is created it would also be missing\n * from all previous keyframes up until where it is first used. For the timeline keyframe generation\n * to properly fill in the style it will place the previous value (the value from the parent\n * timeline) or a default value of `*` into the backFill object. Given that each of the keyframe\n * styles are objects that prototypically inherits from the backFill object, this means that if a\n * value is added into the backFill then it will automatically propagate any missing values to all\n * keyframes. Therefore the missing `height` value will be properly filled into the already\n * processed keyframes.\n *\n * When a sub-timeline is created it will have its own backFill property. This is done so that\n * styles present within the sub-timeline do not accidentally seep into the previous/future timeline\n * keyframes\n *\n * (For prototypically-inherited contents to be detected a `for(i in obj)` loop must be used.)\n *\n * [Validation]\n * The code in this file is not responsible for validation. That functionality happens with within\n * the `AnimationValidatorVisitor` code.\n */\nfunction buildAnimationTimelines(driver, rootElement, ast, enterClassName, leaveClassName, startingStyles = {}, finalStyles = {}, options, subInstructions, errors = []) {\n    return new AnimationTimelineBuilderVisitor().buildKeyframes(driver, rootElement, ast, enterClassName, leaveClassName, startingStyles, finalStyles, options, subInstructions, errors);\n}\nclass AnimationTimelineBuilderVisitor {\n    buildKeyframes(driver, rootElement, ast, enterClassName, leaveClassName, startingStyles, finalStyles, options, subInstructions, errors = []) {\n        subInstructions = subInstructions || new ElementInstructionMap();\n        const context = new AnimationTimelineContext(driver, rootElement, subInstructions, enterClassName, leaveClassName, errors, []);\n        context.options = options;\n        context.currentTimeline.setStyles([startingStyles], null, context.errors, options);\n        visitDslNode(this, ast, context);\n        // this checks to see if an actual animation happened\n        const timelines = context.timelines.filter(timeline => timeline.containsAnimation());\n        if (timelines.length && Object.keys(finalStyles).length) {\n            const tl = timelines[timelines.length - 1];\n            if (!tl.allowOnlyTimelineStyles()) {\n                tl.setStyles([finalStyles], null, context.errors, options);\n            }\n        }\n        return timelines.length ? timelines.map(timeline => timeline.buildKeyframes()) :\n            [createTimelineInstruction(rootElement, [], [], [], 0, 0, '', false)];\n    }\n    visitTrigger(ast, context) {\n        // these values are not visited in this AST\n    }\n    visitState(ast, context) {\n        // these values are not visited in this AST\n    }\n    visitTransition(ast, context) {\n        // these values are not visited in this AST\n    }\n    visitAnimateChild(ast, context) {\n        const elementInstructions = context.subInstructions.consume(context.element);\n        if (elementInstructions) {\n            const innerContext = context.createSubContext(ast.options);\n            const startTime = context.currentTimeline.currentTime;\n            const endTime = this._visitSubInstructions(elementInstructions, innerContext, innerContext.options);\n            if (startTime != endTime) {\n                // we do this on the upper context because we created a sub context for\n                // the sub child animations\n                context.transformIntoNewTimeline(endTime);\n            }\n        }\n        context.previousNode = ast;\n    }\n    visitAnimateRef(ast, context) {\n        const innerContext = context.createSubContext(ast.options);\n        innerContext.transformIntoNewTimeline();\n        this.visitReference(ast.animation, innerContext);\n        context.transformIntoNewTimeline(innerContext.currentTimeline.currentTime);\n        context.previousNode = ast;\n    }\n    _visitSubInstructions(instructions, context, options) {\n        const startTime = context.currentTimeline.currentTime;\n        let furthestTime = startTime;\n        // this is a special-case for when a user wants to skip a sub\n        // animation from being fired entirely.\n        const duration = options.duration != null ? resolveTimingValue(options.duration) : null;\n        const delay = options.delay != null ? resolveTimingValue(options.delay) : null;\n        if (duration !== 0) {\n            instructions.forEach(instruction => {\n                const instructionTimings = context.appendInstructionToTimeline(instruction, duration, delay);\n                furthestTime =\n                    Math.max(furthestTime, instructionTimings.duration + instructionTimings.delay);\n            });\n        }\n        return furthestTime;\n    }\n    visitReference(ast, context) {\n        context.updateOptions(ast.options, true);\n        visitDslNode(this, ast.animation, context);\n        context.previousNode = ast;\n    }\n    visitSequence(ast, context) {\n        const subContextCount = context.subContextCount;\n        let ctx = context;\n        const options = ast.options;\n        if (options && (options.params || options.delay)) {\n            ctx = context.createSubContext(options);\n            ctx.transformIntoNewTimeline();\n            if (options.delay != null) {\n                if (ctx.previousNode.type == 6 /* Style */) {\n                    ctx.currentTimeline.snapshotCurrentStyles();\n                    ctx.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n                }\n                const delay = resolveTimingValue(options.delay);\n                ctx.delayNextStep(delay);\n            }\n        }\n        if (ast.steps.length) {\n            ast.steps.forEach(s => visitDslNode(this, s, ctx));\n            // this is here just in case the inner steps only contain or end with a style() call\n            ctx.currentTimeline.applyStylesToKeyframe();\n            // this means that some animation function within the sequence\n            // ended up creating a sub timeline (which means the current\n            // timeline cannot overlap with the contents of the sequence)\n            if (ctx.subContextCount > subContextCount) {\n                ctx.transformIntoNewTimeline();\n            }\n        }\n        context.previousNode = ast;\n    }\n    visitGroup(ast, context) {\n        const innerTimelines = [];\n        let furthestTime = context.currentTimeline.currentTime;\n        const delay = ast.options && ast.options.delay ? resolveTimingValue(ast.options.delay) : 0;\n        ast.steps.forEach(s => {\n            const innerContext = context.createSubContext(ast.options);\n            if (delay) {\n                innerContext.delayNextStep(delay);\n            }\n            visitDslNode(this, s, innerContext);\n            furthestTime = Math.max(furthestTime, innerContext.currentTimeline.currentTime);\n            innerTimelines.push(innerContext.currentTimeline);\n        });\n        // this operation is run after the AST loop because otherwise\n        // if the parent timeline's collected styles were updated then\n        // it would pass in invalid data into the new-to-be forked items\n        innerTimelines.forEach(timeline => context.currentTimeline.mergeTimelineCollectedStyles(timeline));\n        context.transformIntoNewTimeline(furthestTime);\n        context.previousNode = ast;\n    }\n    _visitTiming(ast, context) {\n        if (ast.dynamic) {\n            const strValue = ast.strValue;\n            const timingValue = context.params ? interpolateParams(strValue, context.params, context.errors) : strValue;\n            return resolveTiming(timingValue, context.errors);\n        }\n        else {\n            return { duration: ast.duration, delay: ast.delay, easing: ast.easing };\n        }\n    }\n    visitAnimate(ast, context) {\n        const timings = context.currentAnimateTimings = this._visitTiming(ast.timings, context);\n        const timeline = context.currentTimeline;\n        if (timings.delay) {\n            context.incrementTime(timings.delay);\n            timeline.snapshotCurrentStyles();\n        }\n        const style = ast.style;\n        if (style.type == 5 /* Keyframes */) {\n            this.visitKeyframes(style, context);\n        }\n        else {\n            context.incrementTime(timings.duration);\n            this.visitStyle(style, context);\n            timeline.applyStylesToKeyframe();\n        }\n        context.currentAnimateTimings = null;\n        context.previousNode = ast;\n    }\n    visitStyle(ast, context) {\n        const timeline = context.currentTimeline;\n        const timings = context.currentAnimateTimings;\n        // this is a special case for when a style() call\n        // directly follows  an animate() call (but not inside of an animate() call)\n        if (!timings && timeline.getCurrentStyleProperties().length) {\n            timeline.forwardFrame();\n        }\n        const easing = (timings && timings.easing) || ast.easing;\n        if (ast.isEmptyStep) {\n            timeline.applyEmptyStep(easing);\n        }\n        else {\n            timeline.setStyles(ast.styles, easing, context.errors, context.options);\n        }\n        context.previousNode = ast;\n    }\n    visitKeyframes(ast, context) {\n        const currentAnimateTimings = context.currentAnimateTimings;\n        const startTime = (context.currentTimeline).duration;\n        const duration = currentAnimateTimings.duration;\n        const innerContext = context.createSubContext();\n        const innerTimeline = innerContext.currentTimeline;\n        innerTimeline.easing = currentAnimateTimings.easing;\n        ast.styles.forEach(step => {\n            const offset = step.offset || 0;\n            innerTimeline.forwardTime(offset * duration);\n            innerTimeline.setStyles(step.styles, step.easing, context.errors, context.options);\n            innerTimeline.applyStylesToKeyframe();\n        });\n        // this will ensure that the parent timeline gets all the styles from\n        // the child even if the new timeline below is not used\n        context.currentTimeline.mergeTimelineCollectedStyles(innerTimeline);\n        // we do this because the window between this timeline and the sub timeline\n        // should ensure that the styles within are exactly the same as they were before\n        context.transformIntoNewTimeline(startTime + duration);\n        context.previousNode = ast;\n    }\n    visitQuery(ast, context) {\n        // in the event that the first step before this is a style step we need\n        // to ensure the styles are applied before the children are animated\n        const startTime = context.currentTimeline.currentTime;\n        const options = (ast.options || {});\n        const delay = options.delay ? resolveTimingValue(options.delay) : 0;\n        if (delay &&\n            (context.previousNode.type === 6 /* Style */ ||\n                (startTime == 0 && context.currentTimeline.getCurrentStyleProperties().length))) {\n            context.currentTimeline.snapshotCurrentStyles();\n            context.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n        }\n        let furthestTime = startTime;\n        const elms = context.invokeQuery(ast.selector, ast.originalSelector, ast.limit, ast.includeSelf, options.optional ? true : false, context.errors);\n        context.currentQueryTotal = elms.length;\n        let sameElementTimeline = null;\n        elms.forEach((element, i) => {\n            context.currentQueryIndex = i;\n            const innerContext = context.createSubContext(ast.options, element);\n            if (delay) {\n                innerContext.delayNextStep(delay);\n            }\n            if (element === context.element) {\n                sameElementTimeline = innerContext.currentTimeline;\n            }\n            visitDslNode(this, ast.animation, innerContext);\n            // this is here just incase the inner steps only contain or end\n            // with a style() call (which is here to signal that this is a preparatory\n            // call to style an element before it is animated again)\n            innerContext.currentTimeline.applyStylesToKeyframe();\n            const endTime = innerContext.currentTimeline.currentTime;\n            furthestTime = Math.max(furthestTime, endTime);\n        });\n        context.currentQueryIndex = 0;\n        context.currentQueryTotal = 0;\n        context.transformIntoNewTimeline(furthestTime);\n        if (sameElementTimeline) {\n            context.currentTimeline.mergeTimelineCollectedStyles(sameElementTimeline);\n            context.currentTimeline.snapshotCurrentStyles();\n        }\n        context.previousNode = ast;\n    }\n    visitStagger(ast, context) {\n        const parentContext = context.parentContext;\n        const tl = context.currentTimeline;\n        const timings = ast.timings;\n        const duration = Math.abs(timings.duration);\n        const maxTime = duration * (context.currentQueryTotal - 1);\n        let delay = duration * context.currentQueryIndex;\n        let staggerTransformer = timings.duration < 0 ? 'reverse' : timings.easing;\n        switch (staggerTransformer) {\n            case 'reverse':\n                delay = maxTime - delay;\n                break;\n            case 'full':\n                delay = parentContext.currentStaggerTime;\n                break;\n        }\n        const timeline = context.currentTimeline;\n        if (delay) {\n            timeline.delayNextStep(delay);\n        }\n        const startingTime = timeline.currentTime;\n        visitDslNode(this, ast.animation, context);\n        context.previousNode = ast;\n        // time = duration + delay\n        // the reason why this computation is so complex is because\n        // the inner timeline may either have a delay value or a stretched\n        // keyframe depending on if a subtimeline is not used or is used.\n        parentContext.currentStaggerTime =\n            (tl.currentTime - startingTime) + (tl.startTime - parentContext.currentTimeline.startTime);\n    }\n}\nconst DEFAULT_NOOP_PREVIOUS_NODE = {};\nclass AnimationTimelineContext {\n    constructor(_driver, element, subInstructions, _enterClassName, _leaveClassName, errors, timelines, initialTimeline) {\n        this._driver = _driver;\n        this.element = element;\n        this.subInstructions = subInstructions;\n        this._enterClassName = _enterClassName;\n        this._leaveClassName = _leaveClassName;\n        this.errors = errors;\n        this.timelines = timelines;\n        this.parentContext = null;\n        this.currentAnimateTimings = null;\n        this.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n        this.subContextCount = 0;\n        this.options = {};\n        this.currentQueryIndex = 0;\n        this.currentQueryTotal = 0;\n        this.currentStaggerTime = 0;\n        this.currentTimeline = initialTimeline || new TimelineBuilder(this._driver, element, 0);\n        timelines.push(this.currentTimeline);\n    }\n    get params() {\n        return this.options.params;\n    }\n    updateOptions(options, skipIfExists) {\n        if (!options)\n            return;\n        const newOptions = options;\n        let optionsToUpdate = this.options;\n        // NOTE: this will get patched up when other animation methods support duration overrides\n        if (newOptions.duration != null) {\n            optionsToUpdate.duration = resolveTimingValue(newOptions.duration);\n        }\n        if (newOptions.delay != null) {\n            optionsToUpdate.delay = resolveTimingValue(newOptions.delay);\n        }\n        const newParams = newOptions.params;\n        if (newParams) {\n            let paramsToUpdate = optionsToUpdate.params;\n            if (!paramsToUpdate) {\n                paramsToUpdate = this.options.params = {};\n            }\n            Object.keys(newParams).forEach(name => {\n                if (!skipIfExists || !paramsToUpdate.hasOwnProperty(name)) {\n                    paramsToUpdate[name] = interpolateParams(newParams[name], paramsToUpdate, this.errors);\n                }\n            });\n        }\n    }\n    _copyOptions() {\n        const options = {};\n        if (this.options) {\n            const oldParams = this.options.params;\n            if (oldParams) {\n                const params = options['params'] = {};\n                Object.keys(oldParams).forEach(name => {\n                    params[name] = oldParams[name];\n                });\n            }\n        }\n        return options;\n    }\n    createSubContext(options = null, element, newTime) {\n        const target = element || this.element;\n        const context = new AnimationTimelineContext(this._driver, target, this.subInstructions, this._enterClassName, this._leaveClassName, this.errors, this.timelines, this.currentTimeline.fork(target, newTime || 0));\n        context.previousNode = this.previousNode;\n        context.currentAnimateTimings = this.currentAnimateTimings;\n        context.options = this._copyOptions();\n        context.updateOptions(options);\n        context.currentQueryIndex = this.currentQueryIndex;\n        context.currentQueryTotal = this.currentQueryTotal;\n        context.parentContext = this;\n        this.subContextCount++;\n        return context;\n    }\n    transformIntoNewTimeline(newTime) {\n        this.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n        this.currentTimeline = this.currentTimeline.fork(this.element, newTime);\n        this.timelines.push(this.currentTimeline);\n        return this.currentTimeline;\n    }\n    appendInstructionToTimeline(instruction, duration, delay) {\n        const updatedTimings = {\n            duration: duration != null ? duration : instruction.duration,\n            delay: this.currentTimeline.currentTime + (delay != null ? delay : 0) + instruction.delay,\n            easing: ''\n        };\n        const builder = new SubTimelineBuilder(this._driver, instruction.element, instruction.keyframes, instruction.preStyleProps, instruction.postStyleProps, updatedTimings, instruction.stretchStartingKeyframe);\n        this.timelines.push(builder);\n        return updatedTimings;\n    }\n    incrementTime(time) {\n        this.currentTimeline.forwardTime(this.currentTimeline.duration + time);\n    }\n    delayNextStep(delay) {\n        // negative delays are not yet supported\n        if (delay > 0) {\n            this.currentTimeline.delayNextStep(delay);\n        }\n    }\n    invokeQuery(selector, originalSelector, limit, includeSelf, optional, errors) {\n        let results = [];\n        if (includeSelf) {\n            results.push(this.element);\n        }\n        if (selector.length > 0) { // only if :self is used then the selector can be empty\n            selector = selector.replace(ENTER_TOKEN_REGEX, '.' + this._enterClassName);\n            selector = selector.replace(LEAVE_TOKEN_REGEX, '.' + this._leaveClassName);\n            const multi = limit != 1;\n            let elements = this._driver.query(this.element, selector, multi);\n            if (limit !== 0) {\n                elements = limit < 0 ? elements.slice(elements.length + limit, elements.length) :\n                    elements.slice(0, limit);\n            }\n            results.push(...elements);\n        }\n        if (!optional && results.length == 0) {\n            errors.push(`\\`query(\"${originalSelector}\")\\` returned zero elements. (Use \\`query(\"${originalSelector}\", { optional: true })\\` if you wish to allow this.)`);\n        }\n        return results;\n    }\n}\nclass TimelineBuilder {\n    constructor(_driver, element, startTime, _elementTimelineStylesLookup) {\n        this._driver = _driver;\n        this.element = element;\n        this.startTime = startTime;\n        this._elementTimelineStylesLookup = _elementTimelineStylesLookup;\n        this.duration = 0;\n        this._previousKeyframe = {};\n        this._currentKeyframe = {};\n        this._keyframes = new Map();\n        this._styleSummary = {};\n        this._pendingStyles = {};\n        this._backFill = {};\n        this._currentEmptyStepKeyframe = null;\n        if (!this._elementTimelineStylesLookup) {\n            this._elementTimelineStylesLookup = new Map();\n        }\n        this._localTimelineStyles = Object.create(this._backFill, {});\n        this._globalTimelineStyles = this._elementTimelineStylesLookup.get(element);\n        if (!this._globalTimelineStyles) {\n            this._globalTimelineStyles = this._localTimelineStyles;\n            this._elementTimelineStylesLookup.set(element, this._localTimelineStyles);\n        }\n        this._loadKeyframe();\n    }\n    containsAnimation() {\n        switch (this._keyframes.size) {\n            case 0:\n                return false;\n            case 1:\n                return this.getCurrentStyleProperties().length > 0;\n            default:\n                return true;\n        }\n    }\n    getCurrentStyleProperties() {\n        return Object.keys(this._currentKeyframe);\n    }\n    get currentTime() {\n        return this.startTime + this.duration;\n    }\n    delayNextStep(delay) {\n        // in the event that a style() step is placed right before a stagger()\n        // and that style() step is the very first style() value in the animation\n        // then we need to make a copy of the keyframe [0, copy, 1] so that the delay\n        // properly applies the style() values to work with the stagger...\n        const hasPreStyleStep = this._keyframes.size == 1 && Object.keys(this._pendingStyles).length;\n        if (this.duration || hasPreStyleStep) {\n            this.forwardTime(this.currentTime + delay);\n            if (hasPreStyleStep) {\n                this.snapshotCurrentStyles();\n            }\n        }\n        else {\n            this.startTime += delay;\n        }\n    }\n    fork(element, currentTime) {\n        this.applyStylesToKeyframe();\n        return new TimelineBuilder(this._driver, element, currentTime || this.currentTime, this._elementTimelineStylesLookup);\n    }\n    _loadKeyframe() {\n        if (this._currentKeyframe) {\n            this._previousKeyframe = this._currentKeyframe;\n        }\n        this._currentKeyframe = this._keyframes.get(this.duration);\n        if (!this._currentKeyframe) {\n            this._currentKeyframe = Object.create(this._backFill, {});\n            this._keyframes.set(this.duration, this._currentKeyframe);\n        }\n    }\n    forwardFrame() {\n        this.duration += ONE_FRAME_IN_MILLISECONDS;\n        this._loadKeyframe();\n    }\n    forwardTime(time) {\n        this.applyStylesToKeyframe();\n        this.duration = time;\n        this._loadKeyframe();\n    }\n    _updateStyle(prop, value) {\n        this._localTimelineStyles[prop] = value;\n        this._globalTimelineStyles[prop] = value;\n        this._styleSummary[prop] = { time: this.currentTime, value };\n    }\n    allowOnlyTimelineStyles() {\n        return this._currentEmptyStepKeyframe !== this._currentKeyframe;\n    }\n    applyEmptyStep(easing) {\n        if (easing) {\n            this._previousKeyframe['easing'] = easing;\n        }\n        // special case for animate(duration):\n        // all missing styles are filled with a `*` value then\n        // if any destination styles are filled in later on the same\n        // keyframe then they will override the overridden styles\n        // We use `_globalTimelineStyles` here because there may be\n        // styles in previous keyframes that are not present in this timeline\n        Object.keys(this._globalTimelineStyles).forEach(prop => {\n            this._backFill[prop] = this._globalTimelineStyles[prop] || AUTO_STYLE;\n            this._currentKeyframe[prop] = AUTO_STYLE;\n        });\n        this._currentEmptyStepKeyframe = this._currentKeyframe;\n    }\n    setStyles(input, easing, errors, options) {\n        if (easing) {\n            this._previousKeyframe['easing'] = easing;\n        }\n        const params = (options && options.params) || {};\n        const styles = flattenStyles(input, this._globalTimelineStyles);\n        Object.keys(styles).forEach(prop => {\n            const val = interpolateParams(styles[prop], params, errors);\n            this._pendingStyles[prop] = val;\n            if (!this._localTimelineStyles.hasOwnProperty(prop)) {\n                this._backFill[prop] = this._globalTimelineStyles.hasOwnProperty(prop) ?\n                    this._globalTimelineStyles[prop] :\n                    AUTO_STYLE;\n            }\n            this._updateStyle(prop, val);\n        });\n    }\n    applyStylesToKeyframe() {\n        const styles = this._pendingStyles;\n        const props = Object.keys(styles);\n        if (props.length == 0)\n            return;\n        this._pendingStyles = {};\n        props.forEach(prop => {\n            const val = styles[prop];\n            this._currentKeyframe[prop] = val;\n        });\n        Object.keys(this._localTimelineStyles).forEach(prop => {\n            if (!this._currentKeyframe.hasOwnProperty(prop)) {\n                this._currentKeyframe[prop] = this._localTimelineStyles[prop];\n            }\n        });\n    }\n    snapshotCurrentStyles() {\n        Object.keys(this._localTimelineStyles).forEach(prop => {\n            const val = this._localTimelineStyles[prop];\n            this._pendingStyles[prop] = val;\n            this._updateStyle(prop, val);\n        });\n    }\n    getFinalKeyframe() {\n        return this._keyframes.get(this.duration);\n    }\n    get properties() {\n        const properties = [];\n        for (let prop in this._currentKeyframe) {\n            properties.push(prop);\n        }\n        return properties;\n    }\n    mergeTimelineCollectedStyles(timeline) {\n        Object.keys(timeline._styleSummary).forEach(prop => {\n            const details0 = this._styleSummary[prop];\n            const details1 = timeline._styleSummary[prop];\n            if (!details0 || details1.time > details0.time) {\n                this._updateStyle(prop, details1.value);\n            }\n        });\n    }\n    buildKeyframes() {\n        this.applyStylesToKeyframe();\n        const preStyleProps = new Set();\n        const postStyleProps = new Set();\n        const isEmpty = this._keyframes.size === 1 && this.duration === 0;\n        let finalKeyframes = [];\n        this._keyframes.forEach((keyframe, time) => {\n            const finalKeyframe = copyStyles(keyframe, true);\n            Object.keys(finalKeyframe).forEach(prop => {\n                const value = finalKeyframe[prop];\n                if (value == ɵPRE_STYLE) {\n                    preStyleProps.add(prop);\n                }\n                else if (value == AUTO_STYLE) {\n                    postStyleProps.add(prop);\n                }\n            });\n            if (!isEmpty) {\n                finalKeyframe['offset'] = time / this.duration;\n            }\n            finalKeyframes.push(finalKeyframe);\n        });\n        const preProps = preStyleProps.size ? iteratorToArray(preStyleProps.values()) : [];\n        const postProps = postStyleProps.size ? iteratorToArray(postStyleProps.values()) : [];\n        // special case for a 0-second animation (which is designed just to place styles onscreen)\n        if (isEmpty) {\n            const kf0 = finalKeyframes[0];\n            const kf1 = copyObj(kf0);\n            kf0['offset'] = 0;\n            kf1['offset'] = 1;\n            finalKeyframes = [kf0, kf1];\n        }\n        return createTimelineInstruction(this.element, finalKeyframes, preProps, postProps, this.duration, this.startTime, this.easing, false);\n    }\n}\nclass SubTimelineBuilder extends TimelineBuilder {\n    constructor(driver, element, keyframes, preStyleProps, postStyleProps, timings, _stretchStartingKeyframe = false) {\n        super(driver, element, timings.delay);\n        this.keyframes = keyframes;\n        this.preStyleProps = preStyleProps;\n        this.postStyleProps = postStyleProps;\n        this._stretchStartingKeyframe = _stretchStartingKeyframe;\n        this.timings = { duration: timings.duration, delay: timings.delay, easing: timings.easing };\n    }\n    containsAnimation() {\n        return this.keyframes.length > 1;\n    }\n    buildKeyframes() {\n        let keyframes = this.keyframes;\n        let { delay, duration, easing } = this.timings;\n        if (this._stretchStartingKeyframe && delay) {\n            const newKeyframes = [];\n            const totalTime = duration + delay;\n            const startingGap = delay / totalTime;\n            // the original starting keyframe now starts once the delay is done\n            const newFirstKeyframe = copyStyles(keyframes[0], false);\n            newFirstKeyframe['offset'] = 0;\n            newKeyframes.push(newFirstKeyframe);\n            const oldFirstKeyframe = copyStyles(keyframes[0], false);\n            oldFirstKeyframe['offset'] = roundOffset(startingGap);\n            newKeyframes.push(oldFirstKeyframe);\n            /*\n              When the keyframe is stretched then it means that the delay before the animation\n              starts is gone. Instead the first keyframe is placed at the start of the animation\n              and it is then copied to where it starts when the original delay is over. This basically\n              means nothing animates during that delay, but the styles are still rendered. For this\n              to work the original offset values that exist in the original keyframes must be \"warped\"\n              so that they can take the new keyframe + delay into account.\n      \n              delay=1000, duration=1000, keyframes = 0 .5 1\n      \n              turns into\n      \n              delay=0, duration=2000, keyframes = 0 .33 .66 1\n             */\n            // offsets between 1 ... n -1 are all warped by the keyframe stretch\n            const limit = keyframes.length - 1;\n            for (let i = 1; i <= limit; i++) {\n                let kf = copyStyles(keyframes[i], false);\n                const oldOffset = kf['offset'];\n                const timeAtKeyframe = delay + oldOffset * duration;\n                kf['offset'] = roundOffset(timeAtKeyframe / totalTime);\n                newKeyframes.push(kf);\n            }\n            // the new starting keyframe should be added at the start\n            duration = totalTime;\n            delay = 0;\n            easing = '';\n            keyframes = newKeyframes;\n        }\n        return createTimelineInstruction(this.element, keyframes, this.preStyleProps, this.postStyleProps, duration, delay, easing, true);\n    }\n}\nfunction roundOffset(offset, decimalPoints = 3) {\n    const mult = Math.pow(10, decimalPoints - 1);\n    return Math.round(offset * mult) / mult;\n}\nfunction flattenStyles(input, allStyles) {\n    const styles = {};\n    let allProperties;\n    input.forEach(token => {\n        if (token === '*') {\n            allProperties = allProperties || Object.keys(allStyles);\n            allProperties.forEach(prop => {\n                styles[prop] = AUTO_STYLE;\n            });\n        }\n        else {\n            copyStyles(token, false, styles);\n        }\n    });\n    return styles;\n}\n\nclass Animation {\n    constructor(_driver, input) {\n        this._driver = _driver;\n        const errors = [];\n        const ast = buildAnimationAst(_driver, input, errors);\n        if (errors.length) {\n            const errorMessage = `animation validation failed:\\n${errors.join('\\n')}`;\n            throw new Error(errorMessage);\n        }\n        this._animationAst = ast;\n    }\n    buildTimelines(element, startingStyles, destinationStyles, options, subInstructions) {\n        const start = Array.isArray(startingStyles) ? normalizeStyles(startingStyles) :\n            startingStyles;\n        const dest = Array.isArray(destinationStyles) ? normalizeStyles(destinationStyles) :\n            destinationStyles;\n        const errors = [];\n        subInstructions = subInstructions || new ElementInstructionMap();\n        const result = buildAnimationTimelines(this._driver, element, this._animationAst, ENTER_CLASSNAME, LEAVE_CLASSNAME, start, dest, options, subInstructions, errors);\n        if (errors.length) {\n            const errorMessage = `animation building failed:\\n${errors.join('\\n')}`;\n            throw new Error(errorMessage);\n        }\n        return result;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nclass AnimationStyleNormalizer {\n}\n/**\n * @publicApi\n */\nclass NoopAnimationStyleNormalizer {\n    normalizePropertyName(propertyName, errors) {\n        return propertyName;\n    }\n    normalizeStyleValue(userProvidedProperty, normalizedProperty, value, errors) {\n        return value;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass WebAnimationsStyleNormalizer extends AnimationStyleNormalizer {\n    normalizePropertyName(propertyName, errors) {\n        return dashCaseToCamelCase(propertyName);\n    }\n    normalizeStyleValue(userProvidedProperty, normalizedProperty, value, errors) {\n        let unit = '';\n        const strVal = value.toString().trim();\n        if (DIMENSIONAL_PROP_MAP[normalizedProperty] && value !== 0 && value !== '0') {\n            if (typeof value === 'number') {\n                unit = 'px';\n            }\n            else {\n                const valAndSuffixMatch = value.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errors.push(`Please provide a CSS unit value for ${userProvidedProperty}:${value}`);\n                }\n            }\n        }\n        return strVal + unit;\n    }\n}\nconst DIMENSIONAL_PROP_MAP = (() => makeBooleanMap('width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective'\n    .split(',')))();\nfunction makeBooleanMap(keys) {\n    const map = {};\n    keys.forEach(key => map[key] = true);\n    return map;\n}\n\nfunction createTransitionInstruction(element, triggerName, fromState, toState, isRemovalTransition, fromStyles, toStyles, timelines, queriedElements, preStyleProps, postStyleProps, totalTime, errors) {\n    return {\n        type: 0 /* TransitionAnimation */,\n        element,\n        triggerName,\n        isRemovalTransition,\n        fromState,\n        fromStyles,\n        toState,\n        toStyles,\n        timelines,\n        queriedElements,\n        preStyleProps,\n        postStyleProps,\n        totalTime,\n        errors\n    };\n}\n\nconst EMPTY_OBJECT = {};\nclass AnimationTransitionFactory {\n    constructor(_triggerName, ast, _stateStyles) {\n        this._triggerName = _triggerName;\n        this.ast = ast;\n        this._stateStyles = _stateStyles;\n    }\n    match(currentState, nextState, element, params) {\n        return oneOrMoreTransitionsMatch(this.ast.matchers, currentState, nextState, element, params);\n    }\n    buildStyles(stateName, params, errors) {\n        const backupStateStyler = this._stateStyles['*'];\n        const stateStyler = this._stateStyles[stateName];\n        const backupStyles = backupStateStyler ? backupStateStyler.buildStyles(params, errors) : {};\n        return stateStyler ? stateStyler.buildStyles(params, errors) : backupStyles;\n    }\n    build(driver, element, currentState, nextState, enterClassName, leaveClassName, currentOptions, nextOptions, subInstructions, skipAstBuild) {\n        const errors = [];\n        const transitionAnimationParams = this.ast.options && this.ast.options.params || EMPTY_OBJECT;\n        const currentAnimationParams = currentOptions && currentOptions.params || EMPTY_OBJECT;\n        const currentStateStyles = this.buildStyles(currentState, currentAnimationParams, errors);\n        const nextAnimationParams = nextOptions && nextOptions.params || EMPTY_OBJECT;\n        const nextStateStyles = this.buildStyles(nextState, nextAnimationParams, errors);\n        const queriedElements = new Set();\n        const preStyleMap = new Map();\n        const postStyleMap = new Map();\n        const isRemoval = nextState === 'void';\n        const animationOptions = { params: { ...transitionAnimationParams, ...nextAnimationParams } };\n        const timelines = skipAstBuild ?\n            [] :\n            buildAnimationTimelines(driver, element, this.ast.animation, enterClassName, leaveClassName, currentStateStyles, nextStateStyles, animationOptions, subInstructions, errors);\n        let totalTime = 0;\n        timelines.forEach(tl => {\n            totalTime = Math.max(tl.duration + tl.delay, totalTime);\n        });\n        if (errors.length) {\n            return createTransitionInstruction(element, this._triggerName, currentState, nextState, isRemoval, currentStateStyles, nextStateStyles, [], [], preStyleMap, postStyleMap, totalTime, errors);\n        }\n        timelines.forEach(tl => {\n            const elm = tl.element;\n            const preProps = getOrSetAsInMap(preStyleMap, elm, {});\n            tl.preStyleProps.forEach(prop => preProps[prop] = true);\n            const postProps = getOrSetAsInMap(postStyleMap, elm, {});\n            tl.postStyleProps.forEach(prop => postProps[prop] = true);\n            if (elm !== element) {\n                queriedElements.add(elm);\n            }\n        });\n        const queriedElementsList = iteratorToArray(queriedElements.values());\n        return createTransitionInstruction(element, this._triggerName, currentState, nextState, isRemoval, currentStateStyles, nextStateStyles, timelines, queriedElementsList, preStyleMap, postStyleMap, totalTime);\n    }\n}\nfunction oneOrMoreTransitionsMatch(matchFns, currentState, nextState, element, params) {\n    return matchFns.some(fn => fn(currentState, nextState, element, params));\n}\nclass AnimationStateStyles {\n    constructor(styles, defaultParams, normalizer) {\n        this.styles = styles;\n        this.defaultParams = defaultParams;\n        this.normalizer = normalizer;\n    }\n    buildStyles(params, errors) {\n        const finalStyles = {};\n        const combinedParams = copyObj(this.defaultParams);\n        Object.keys(params).forEach(key => {\n            const value = params[key];\n            if (value != null) {\n                combinedParams[key] = value;\n            }\n        });\n        this.styles.styles.forEach(value => {\n            if (typeof value !== 'string') {\n                const styleObj = value;\n                Object.keys(styleObj).forEach(prop => {\n                    let val = styleObj[prop];\n                    if (val.length > 1) {\n                        val = interpolateParams(val, combinedParams, errors);\n                    }\n                    const normalizedProp = this.normalizer.normalizePropertyName(prop, errors);\n                    val = this.normalizer.normalizeStyleValue(prop, normalizedProp, val, errors);\n                    finalStyles[normalizedProp] = val;\n                });\n            }\n        });\n        return finalStyles;\n    }\n}\n\nfunction buildTrigger(name, ast, normalizer) {\n    return new AnimationTrigger(name, ast, normalizer);\n}\nclass AnimationTrigger {\n    constructor(name, ast, _normalizer) {\n        this.name = name;\n        this.ast = ast;\n        this._normalizer = _normalizer;\n        this.transitionFactories = [];\n        this.states = {};\n        ast.states.forEach(ast => {\n            const defaultParams = (ast.options && ast.options.params) || {};\n            this.states[ast.name] = new AnimationStateStyles(ast.style, defaultParams, _normalizer);\n        });\n        balanceProperties(this.states, 'true', '1');\n        balanceProperties(this.states, 'false', '0');\n        ast.transitions.forEach(ast => {\n            this.transitionFactories.push(new AnimationTransitionFactory(name, ast, this.states));\n        });\n        this.fallbackTransition = createFallbackTransition(name, this.states, this._normalizer);\n    }\n    get containsQueries() {\n        return this.ast.queryCount > 0;\n    }\n    matchTransition(currentState, nextState, element, params) {\n        const entry = this.transitionFactories.find(f => f.match(currentState, nextState, element, params));\n        return entry || null;\n    }\n    matchStyles(currentState, params, errors) {\n        return this.fallbackTransition.buildStyles(currentState, params, errors);\n    }\n}\nfunction createFallbackTransition(triggerName, states, normalizer) {\n    const matchers = [(fromState, toState) => true];\n    const animation = { type: 2 /* Sequence */, steps: [], options: null };\n    const transition = {\n        type: 1 /* Transition */,\n        animation,\n        matchers,\n        options: null,\n        queryCount: 0,\n        depCount: 0\n    };\n    return new AnimationTransitionFactory(triggerName, transition, states);\n}\nfunction balanceProperties(obj, key1, key2) {\n    if (obj.hasOwnProperty(key1)) {\n        if (!obj.hasOwnProperty(key2)) {\n            obj[key2] = obj[key1];\n        }\n    }\n    else if (obj.hasOwnProperty(key2)) {\n        obj[key1] = obj[key2];\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EMPTY_INSTRUCTION_MAP = new ElementInstructionMap();\nclass TimelineAnimationEngine {\n    constructor(bodyNode, _driver, _normalizer) {\n        this.bodyNode = bodyNode;\n        this._driver = _driver;\n        this._normalizer = _normalizer;\n        this._animations = {};\n        this._playersById = {};\n        this.players = [];\n    }\n    register(id, metadata) {\n        const errors = [];\n        const ast = buildAnimationAst(this._driver, metadata, errors);\n        if (errors.length) {\n            throw new Error(`Unable to build the animation due to the following errors: ${errors.join('\\n')}`);\n        }\n        else {\n            this._animations[id] = ast;\n        }\n    }\n    _buildPlayer(i, preStyles, postStyles) {\n        const element = i.element;\n        const keyframes = normalizeKeyframes(this._driver, this._normalizer, element, i.keyframes, preStyles, postStyles);\n        return this._driver.animate(element, keyframes, i.duration, i.delay, i.easing, [], true);\n    }\n    create(id, element, options = {}) {\n        const errors = [];\n        const ast = this._animations[id];\n        let instructions;\n        const autoStylesMap = new Map();\n        if (ast) {\n            instructions = buildAnimationTimelines(this._driver, element, ast, ENTER_CLASSNAME, LEAVE_CLASSNAME, {}, {}, options, EMPTY_INSTRUCTION_MAP, errors);\n            instructions.forEach(inst => {\n                const styles = getOrSetAsInMap(autoStylesMap, inst.element, {});\n                inst.postStyleProps.forEach(prop => styles[prop] = null);\n            });\n        }\n        else {\n            errors.push('The requested animation doesn\\'t exist or has already been destroyed');\n            instructions = [];\n        }\n        if (errors.length) {\n            throw new Error(`Unable to create the animation due to the following errors: ${errors.join('\\n')}`);\n        }\n        autoStylesMap.forEach((styles, element) => {\n            Object.keys(styles).forEach(prop => {\n                styles[prop] = this._driver.computeStyle(element, prop, AUTO_STYLE);\n            });\n        });\n        const players = instructions.map(i => {\n            const styles = autoStylesMap.get(i.element);\n            return this._buildPlayer(i, {}, styles);\n        });\n        const player = optimizeGroupPlayer(players);\n        this._playersById[id] = player;\n        player.onDestroy(() => this.destroy(id));\n        this.players.push(player);\n        return player;\n    }\n    destroy(id) {\n        const player = this._getPlayer(id);\n        player.destroy();\n        delete this._playersById[id];\n        const index = this.players.indexOf(player);\n        if (index >= 0) {\n            this.players.splice(index, 1);\n        }\n    }\n    _getPlayer(id) {\n        const player = this._playersById[id];\n        if (!player) {\n            throw new Error(`Unable to find the timeline player referenced by ${id}`);\n        }\n        return player;\n    }\n    listen(id, element, eventName, callback) {\n        // triggerName, fromState, toState are all ignored for timeline animations\n        const baseEvent = makeAnimationEvent(element, '', '', '');\n        listenOnPlayer(this._getPlayer(id), eventName, baseEvent, callback);\n        return () => { };\n    }\n    command(id, element, command, args) {\n        if (command == 'register') {\n            this.register(id, args[0]);\n            return;\n        }\n        if (command == 'create') {\n            const options = (args[0] || {});\n            this.create(id, element, options);\n            return;\n        }\n        const player = this._getPlayer(id);\n        switch (command) {\n            case 'play':\n                player.play();\n                break;\n            case 'pause':\n                player.pause();\n                break;\n            case 'reset':\n                player.reset();\n                break;\n            case 'restart':\n                player.restart();\n                break;\n            case 'finish':\n                player.finish();\n                break;\n            case 'init':\n                player.init();\n                break;\n            case 'setPosition':\n                player.setPosition(parseFloat(args[0]));\n                break;\n            case 'destroy':\n                this.destroy(id);\n                break;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst QUEUED_CLASSNAME = 'ng-animate-queued';\nconst QUEUED_SELECTOR = '.ng-animate-queued';\nconst DISABLED_CLASSNAME = 'ng-animate-disabled';\nconst DISABLED_SELECTOR = '.ng-animate-disabled';\nconst STAR_CLASSNAME = 'ng-star-inserted';\nconst STAR_SELECTOR = '.ng-star-inserted';\nconst EMPTY_PLAYER_ARRAY = [];\nconst NULL_REMOVAL_STATE = {\n    namespaceId: '',\n    setForRemoval: false,\n    setForMove: false,\n    hasAnimation: false,\n    removedBeforeQueried: false\n};\nconst NULL_REMOVED_QUERIED_STATE = {\n    namespaceId: '',\n    setForMove: false,\n    setForRemoval: false,\n    hasAnimation: false,\n    removedBeforeQueried: true\n};\nconst REMOVAL_FLAG = '__ng_removed';\nclass StateValue {\n    constructor(input, namespaceId = '') {\n        this.namespaceId = namespaceId;\n        const isObj = input && input.hasOwnProperty('value');\n        const value = isObj ? input['value'] : input;\n        this.value = normalizeTriggerValue(value);\n        if (isObj) {\n            const options = copyObj(input);\n            delete options['value'];\n            this.options = options;\n        }\n        else {\n            this.options = {};\n        }\n        if (!this.options.params) {\n            this.options.params = {};\n        }\n    }\n    get params() {\n        return this.options.params;\n    }\n    absorbOptions(options) {\n        const newParams = options.params;\n        if (newParams) {\n            const oldParams = this.options.params;\n            Object.keys(newParams).forEach(prop => {\n                if (oldParams[prop] == null) {\n                    oldParams[prop] = newParams[prop];\n                }\n            });\n        }\n    }\n}\nconst VOID_VALUE = 'void';\nconst DEFAULT_STATE_VALUE = new StateValue(VOID_VALUE);\nclass AnimationTransitionNamespace {\n    constructor(id, hostElement, _engine) {\n        this.id = id;\n        this.hostElement = hostElement;\n        this._engine = _engine;\n        this.players = [];\n        this._triggers = {};\n        this._queue = [];\n        this._elementListeners = new Map();\n        this._hostClassName = 'ng-tns-' + id;\n        addClass(hostElement, this._hostClassName);\n    }\n    listen(element, name, phase, callback) {\n        if (!this._triggers.hasOwnProperty(name)) {\n            throw new Error(`Unable to listen on the animation trigger event \"${phase}\" because the animation trigger \"${name}\" doesn\\'t exist!`);\n        }\n        if (phase == null || phase.length == 0) {\n            throw new Error(`Unable to listen on the animation trigger \"${name}\" because the provided event is undefined!`);\n        }\n        if (!isTriggerEventValid(phase)) {\n            throw new Error(`The provided animation trigger event \"${phase}\" for the animation trigger \"${name}\" is not supported!`);\n        }\n        const listeners = getOrSetAsInMap(this._elementListeners, element, []);\n        const data = { name, phase, callback };\n        listeners.push(data);\n        const triggersWithStates = getOrSetAsInMap(this._engine.statesByElement, element, {});\n        if (!triggersWithStates.hasOwnProperty(name)) {\n            addClass(element, NG_TRIGGER_CLASSNAME);\n            addClass(element, NG_TRIGGER_CLASSNAME + '-' + name);\n            triggersWithStates[name] = DEFAULT_STATE_VALUE;\n        }\n        return () => {\n            // the event listener is removed AFTER the flush has occurred such\n            // that leave animations callbacks can fire (otherwise if the node\n            // is removed in between then the listeners would be deregistered)\n            this._engine.afterFlush(() => {\n                const index = listeners.indexOf(data);\n                if (index >= 0) {\n                    listeners.splice(index, 1);\n                }\n                if (!this._triggers[name]) {\n                    delete triggersWithStates[name];\n                }\n            });\n        };\n    }\n    register(name, ast) {\n        if (this._triggers[name]) {\n            // throw\n            return false;\n        }\n        else {\n            this._triggers[name] = ast;\n            return true;\n        }\n    }\n    _getTrigger(name) {\n        const trigger = this._triggers[name];\n        if (!trigger) {\n            throw new Error(`The provided animation trigger \"${name}\" has not been registered!`);\n        }\n        return trigger;\n    }\n    trigger(element, triggerName, value, defaultToFallback = true) {\n        const trigger = this._getTrigger(triggerName);\n        const player = new TransitionAnimationPlayer(this.id, triggerName, element);\n        let triggersWithStates = this._engine.statesByElement.get(element);\n        if (!triggersWithStates) {\n            addClass(element, NG_TRIGGER_CLASSNAME);\n            addClass(element, NG_TRIGGER_CLASSNAME + '-' + triggerName);\n            this._engine.statesByElement.set(element, triggersWithStates = {});\n        }\n        let fromState = triggersWithStates[triggerName];\n        const toState = new StateValue(value, this.id);\n        const isObj = value && value.hasOwnProperty('value');\n        if (!isObj && fromState) {\n            toState.absorbOptions(fromState.options);\n        }\n        triggersWithStates[triggerName] = toState;\n        if (!fromState) {\n            fromState = DEFAULT_STATE_VALUE;\n        }\n        const isRemoval = toState.value === VOID_VALUE;\n        // normally this isn't reached by here, however, if an object expression\n        // is passed in then it may be a new object each time. Comparing the value\n        // is important since that will stay the same despite there being a new object.\n        // The removal arc here is special cased because the same element is triggered\n        // twice in the event that it contains animations on the outer/inner portions\n        // of the host container\n        if (!isRemoval && fromState.value === toState.value) {\n            // this means that despite the value not changing, some inner params\n            // have changed which means that the animation final styles need to be applied\n            if (!objEquals(fromState.params, toState.params)) {\n                const errors = [];\n                const fromStyles = trigger.matchStyles(fromState.value, fromState.params, errors);\n                const toStyles = trigger.matchStyles(toState.value, toState.params, errors);\n                if (errors.length) {\n                    this._engine.reportError(errors);\n                }\n                else {\n                    this._engine.afterFlush(() => {\n                        eraseStyles(element, fromStyles);\n                        setStyles(element, toStyles);\n                    });\n                }\n            }\n            return;\n        }\n        const playersOnElement = getOrSetAsInMap(this._engine.playersByElement, element, []);\n        playersOnElement.forEach(player => {\n            // only remove the player if it is queued on the EXACT same trigger/namespace\n            // we only also deal with queued players here because if the animation has\n            // started then we want to keep the player alive until the flush happens\n            // (which is where the previousPlayers are passed into the new player)\n            if (player.namespaceId == this.id && player.triggerName == triggerName && player.queued) {\n                player.destroy();\n            }\n        });\n        let transition = trigger.matchTransition(fromState.value, toState.value, element, toState.params);\n        let isFallbackTransition = false;\n        if (!transition) {\n            if (!defaultToFallback)\n                return;\n            transition = trigger.fallbackTransition;\n            isFallbackTransition = true;\n        }\n        this._engine.totalQueuedPlayers++;\n        this._queue.push({ element, triggerName, transition, fromState, toState, player, isFallbackTransition });\n        if (!isFallbackTransition) {\n            addClass(element, QUEUED_CLASSNAME);\n            player.onStart(() => {\n                removeClass(element, QUEUED_CLASSNAME);\n            });\n        }\n        player.onDone(() => {\n            let index = this.players.indexOf(player);\n            if (index >= 0) {\n                this.players.splice(index, 1);\n            }\n            const players = this._engine.playersByElement.get(element);\n            if (players) {\n                let index = players.indexOf(player);\n                if (index >= 0) {\n                    players.splice(index, 1);\n                }\n            }\n        });\n        this.players.push(player);\n        playersOnElement.push(player);\n        return player;\n    }\n    deregister(name) {\n        delete this._triggers[name];\n        this._engine.statesByElement.forEach((stateMap, element) => {\n            delete stateMap[name];\n        });\n        this._elementListeners.forEach((listeners, element) => {\n            this._elementListeners.set(element, listeners.filter(entry => {\n                return entry.name != name;\n            }));\n        });\n    }\n    clearElementCache(element) {\n        this._engine.statesByElement.delete(element);\n        this._elementListeners.delete(element);\n        const elementPlayers = this._engine.playersByElement.get(element);\n        if (elementPlayers) {\n            elementPlayers.forEach(player => player.destroy());\n            this._engine.playersByElement.delete(element);\n        }\n    }\n    _signalRemovalForInnerTriggers(rootElement, context) {\n        const elements = this._engine.driver.query(rootElement, NG_TRIGGER_SELECTOR, true);\n        // emulate a leave animation for all inner nodes within this node.\n        // If there are no animations found for any of the nodes then clear the cache\n        // for the element.\n        elements.forEach(elm => {\n            // this means that an inner remove() operation has already kicked off\n            // the animation on this element...\n            if (elm[REMOVAL_FLAG])\n                return;\n            const namespaces = this._engine.fetchNamespacesByElement(elm);\n            if (namespaces.size) {\n                namespaces.forEach(ns => ns.triggerLeaveAnimation(elm, context, false, true));\n            }\n            else {\n                this.clearElementCache(elm);\n            }\n        });\n        // If the child elements were removed along with the parent, their animations might not\n        // have completed. Clear all the elements from the cache so we don't end up with a memory leak.\n        this._engine.afterFlushAnimationsDone(() => elements.forEach(elm => this.clearElementCache(elm)));\n    }\n    triggerLeaveAnimation(element, context, destroyAfterComplete, defaultToFallback) {\n        const triggerStates = this._engine.statesByElement.get(element);\n        if (triggerStates) {\n            const players = [];\n            Object.keys(triggerStates).forEach(triggerName => {\n                // this check is here in the event that an element is removed\n                // twice (both on the host level and the component level)\n                if (this._triggers[triggerName]) {\n                    const player = this.trigger(element, triggerName, VOID_VALUE, defaultToFallback);\n                    if (player) {\n                        players.push(player);\n                    }\n                }\n            });\n            if (players.length) {\n                this._engine.markElementAsRemoved(this.id, element, true, context);\n                if (destroyAfterComplete) {\n                    optimizeGroupPlayer(players).onDone(() => this._engine.processLeaveNode(element));\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    prepareLeaveAnimationListeners(element) {\n        const listeners = this._elementListeners.get(element);\n        const elementStates = this._engine.statesByElement.get(element);\n        // if this statement fails then it means that the element was picked up\n        // by an earlier flush (or there are no listeners at all to track the leave).\n        if (listeners && elementStates) {\n            const visitedTriggers = new Set();\n            listeners.forEach(listener => {\n                const triggerName = listener.name;\n                if (visitedTriggers.has(triggerName))\n                    return;\n                visitedTriggers.add(triggerName);\n                const trigger = this._triggers[triggerName];\n                const transition = trigger.fallbackTransition;\n                const fromState = elementStates[triggerName] || DEFAULT_STATE_VALUE;\n                const toState = new StateValue(VOID_VALUE);\n                const player = new TransitionAnimationPlayer(this.id, triggerName, element);\n                this._engine.totalQueuedPlayers++;\n                this._queue.push({\n                    element,\n                    triggerName,\n                    transition,\n                    fromState,\n                    toState,\n                    player,\n                    isFallbackTransition: true\n                });\n            });\n        }\n    }\n    removeNode(element, context) {\n        const engine = this._engine;\n        if (element.childElementCount) {\n            this._signalRemovalForInnerTriggers(element, context);\n        }\n        // this means that a * => VOID animation was detected and kicked off\n        if (this.triggerLeaveAnimation(element, context, true))\n            return;\n        // find the player that is animating and make sure that the\n        // removal is delayed until that player has completed\n        let containsPotentialParentTransition = false;\n        if (engine.totalAnimations) {\n            const currentPlayers = engine.players.length ? engine.playersByQueriedElement.get(element) : [];\n            // when this `if statement` does not continue forward it means that\n            // a previous animation query has selected the current element and\n            // is animating it. In this situation want to continue forwards and\n            // allow the element to be queued up for animation later.\n            if (currentPlayers && currentPlayers.length) {\n                containsPotentialParentTransition = true;\n            }\n            else {\n                let parent = element;\n                while (parent = parent.parentNode) {\n                    const triggers = engine.statesByElement.get(parent);\n                    if (triggers) {\n                        containsPotentialParentTransition = true;\n                        break;\n                    }\n                }\n            }\n        }\n        // at this stage we know that the element will either get removed\n        // during flush or will be picked up by a parent query. Either way\n        // we need to fire the listeners for this element when it DOES get\n        // removed (once the query parent animation is done or after flush)\n        this.prepareLeaveAnimationListeners(element);\n        // whether or not a parent has an animation we need to delay the deferral of the leave\n        // operation until we have more information (which we do after flush() has been called)\n        if (containsPotentialParentTransition) {\n            engine.markElementAsRemoved(this.id, element, false, context);\n        }\n        else {\n            const removalFlag = element[REMOVAL_FLAG];\n            if (!removalFlag || removalFlag === NULL_REMOVAL_STATE) {\n                // we do this after the flush has occurred such\n                // that the callbacks can be fired\n                engine.afterFlush(() => this.clearElementCache(element));\n                engine.destroyInnerAnimations(element);\n                engine._onRemovalComplete(element, context);\n            }\n        }\n    }\n    insertNode(element, parent) {\n        addClass(element, this._hostClassName);\n    }\n    drainQueuedTransitions(microtaskId) {\n        const instructions = [];\n        this._queue.forEach(entry => {\n            const player = entry.player;\n            if (player.destroyed)\n                return;\n            const element = entry.element;\n            const listeners = this._elementListeners.get(element);\n            if (listeners) {\n                listeners.forEach((listener) => {\n                    if (listener.name == entry.triggerName) {\n                        const baseEvent = makeAnimationEvent(element, entry.triggerName, entry.fromState.value, entry.toState.value);\n                        baseEvent['_data'] = microtaskId;\n                        listenOnPlayer(entry.player, listener.phase, baseEvent, listener.callback);\n                    }\n                });\n            }\n            if (player.markedForDestroy) {\n                this._engine.afterFlush(() => {\n                    // now we can destroy the element properly since the event listeners have\n                    // been bound to the player\n                    player.destroy();\n                });\n            }\n            else {\n                instructions.push(entry);\n            }\n        });\n        this._queue = [];\n        return instructions.sort((a, b) => {\n            // if depCount == 0 them move to front\n            // otherwise if a contains b then move back\n            const d0 = a.transition.ast.depCount;\n            const d1 = b.transition.ast.depCount;\n            if (d0 == 0 || d1 == 0) {\n                return d0 - d1;\n            }\n            return this._engine.driver.containsElement(a.element, b.element) ? 1 : -1;\n        });\n    }\n    destroy(context) {\n        this.players.forEach(p => p.destroy());\n        this._signalRemovalForInnerTriggers(this.hostElement, context);\n    }\n    elementContainsData(element) {\n        let containsData = false;\n        if (this._elementListeners.has(element))\n            containsData = true;\n        containsData =\n            (this._queue.find(entry => entry.element === element) ? true : false) || containsData;\n        return containsData;\n    }\n}\nclass TransitionAnimationEngine {\n    constructor(bodyNode, driver, _normalizer) {\n        this.bodyNode = bodyNode;\n        this.driver = driver;\n        this._normalizer = _normalizer;\n        this.players = [];\n        this.newHostElements = new Map();\n        this.playersByElement = new Map();\n        this.playersByQueriedElement = new Map();\n        this.statesByElement = new Map();\n        this.disabledNodes = new Set();\n        this.totalAnimations = 0;\n        this.totalQueuedPlayers = 0;\n        this._namespaceLookup = {};\n        this._namespaceList = [];\n        this._flushFns = [];\n        this._whenQuietFns = [];\n        this.namespacesByHostElement = new Map();\n        this.collectedEnterElements = [];\n        this.collectedLeaveElements = [];\n        // this method is designed to be overridden by the code that uses this engine\n        this.onRemovalComplete = (element, context) => { };\n    }\n    /** @internal */\n    _onRemovalComplete(element, context) {\n        this.onRemovalComplete(element, context);\n    }\n    get queuedPlayers() {\n        const players = [];\n        this._namespaceList.forEach(ns => {\n            ns.players.forEach(player => {\n                if (player.queued) {\n                    players.push(player);\n                }\n            });\n        });\n        return players;\n    }\n    createNamespace(namespaceId, hostElement) {\n        const ns = new AnimationTransitionNamespace(namespaceId, hostElement, this);\n        if (this.bodyNode && this.driver.containsElement(this.bodyNode, hostElement)) {\n            this._balanceNamespaceList(ns, hostElement);\n        }\n        else {\n            // defer this later until flush during when the host element has\n            // been inserted so that we know exactly where to place it in\n            // the namespace list\n            this.newHostElements.set(hostElement, ns);\n            // given that this host element is a part of the animation code, it\n            // may or may not be inserted by a parent node that is of an\n            // animation renderer type. If this happens then we can still have\n            // access to this item when we query for :enter nodes. If the parent\n            // is a renderer then the set data-structure will normalize the entry\n            this.collectEnterElement(hostElement);\n        }\n        return this._namespaceLookup[namespaceId] = ns;\n    }\n    _balanceNamespaceList(ns, hostElement) {\n        const limit = this._namespaceList.length - 1;\n        if (limit >= 0) {\n            let found = false;\n            for (let i = limit; i >= 0; i--) {\n                const nextNamespace = this._namespaceList[i];\n                if (this.driver.containsElement(nextNamespace.hostElement, hostElement)) {\n                    this._namespaceList.splice(i + 1, 0, ns);\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                this._namespaceList.splice(0, 0, ns);\n            }\n        }\n        else {\n            this._namespaceList.push(ns);\n        }\n        this.namespacesByHostElement.set(hostElement, ns);\n        return ns;\n    }\n    register(namespaceId, hostElement) {\n        let ns = this._namespaceLookup[namespaceId];\n        if (!ns) {\n            ns = this.createNamespace(namespaceId, hostElement);\n        }\n        return ns;\n    }\n    registerTrigger(namespaceId, name, trigger) {\n        let ns = this._namespaceLookup[namespaceId];\n        if (ns && ns.register(name, trigger)) {\n            this.totalAnimations++;\n        }\n    }\n    destroy(namespaceId, context) {\n        if (!namespaceId)\n            return;\n        const ns = this._fetchNamespace(namespaceId);\n        this.afterFlush(() => {\n            this.namespacesByHostElement.delete(ns.hostElement);\n            delete this._namespaceLookup[namespaceId];\n            const index = this._namespaceList.indexOf(ns);\n            if (index >= 0) {\n                this._namespaceList.splice(index, 1);\n            }\n        });\n        this.afterFlushAnimationsDone(() => ns.destroy(context));\n    }\n    _fetchNamespace(id) {\n        return this._namespaceLookup[id];\n    }\n    fetchNamespacesByElement(element) {\n        // normally there should only be one namespace per element, however\n        // if @triggers are placed on both the component element and then\n        // its host element (within the component code) then there will be\n        // two namespaces returned. We use a set here to simply deduplicate\n        // the namespaces in case (for the reason described above) there are multiple triggers\n        const namespaces = new Set();\n        const elementStates = this.statesByElement.get(element);\n        if (elementStates) {\n            const keys = Object.keys(elementStates);\n            for (let i = 0; i < keys.length; i++) {\n                const nsId = elementStates[keys[i]].namespaceId;\n                if (nsId) {\n                    const ns = this._fetchNamespace(nsId);\n                    if (ns) {\n                        namespaces.add(ns);\n                    }\n                }\n            }\n        }\n        return namespaces;\n    }\n    trigger(namespaceId, element, name, value) {\n        if (isElementNode(element)) {\n            const ns = this._fetchNamespace(namespaceId);\n            if (ns) {\n                ns.trigger(element, name, value);\n                return true;\n            }\n        }\n        return false;\n    }\n    insertNode(namespaceId, element, parent, insertBefore) {\n        if (!isElementNode(element))\n            return;\n        // special case for when an element is removed and reinserted (move operation)\n        // when this occurs we do not want to use the element for deletion later\n        const details = element[REMOVAL_FLAG];\n        if (details && details.setForRemoval) {\n            details.setForRemoval = false;\n            details.setForMove = true;\n            const index = this.collectedLeaveElements.indexOf(element);\n            if (index >= 0) {\n                this.collectedLeaveElements.splice(index, 1);\n            }\n        }\n        // in the event that the namespaceId is blank then the caller\n        // code does not contain any animation code in it, but it is\n        // just being called so that the node is marked as being inserted\n        if (namespaceId) {\n            const ns = this._fetchNamespace(namespaceId);\n            // This if-statement is a workaround for router issue #21947.\n            // The router sometimes hits a race condition where while a route\n            // is being instantiated a new navigation arrives, triggering leave\n            // animation of DOM that has not been fully initialized, until this\n            // is resolved, we need to handle the scenario when DOM is not in a\n            // consistent state during the animation.\n            if (ns) {\n                ns.insertNode(element, parent);\n            }\n        }\n        // only *directives and host elements are inserted before\n        if (insertBefore) {\n            this.collectEnterElement(element);\n        }\n    }\n    collectEnterElement(element) {\n        this.collectedEnterElements.push(element);\n    }\n    markElementAsDisabled(element, value) {\n        if (value) {\n            if (!this.disabledNodes.has(element)) {\n                this.disabledNodes.add(element);\n                addClass(element, DISABLED_CLASSNAME);\n            }\n        }\n        else if (this.disabledNodes.has(element)) {\n            this.disabledNodes.delete(element);\n            removeClass(element, DISABLED_CLASSNAME);\n        }\n    }\n    removeNode(namespaceId, element, isHostElement, context) {\n        if (isElementNode(element)) {\n            const ns = namespaceId ? this._fetchNamespace(namespaceId) : null;\n            if (ns) {\n                ns.removeNode(element, context);\n            }\n            else {\n                this.markElementAsRemoved(namespaceId, element, false, context);\n            }\n            if (isHostElement) {\n                const hostNS = this.namespacesByHostElement.get(element);\n                if (hostNS && hostNS.id !== namespaceId) {\n                    hostNS.removeNode(element, context);\n                }\n            }\n        }\n        else {\n            this._onRemovalComplete(element, context);\n        }\n    }\n    markElementAsRemoved(namespaceId, element, hasAnimation, context) {\n        this.collectedLeaveElements.push(element);\n        element[REMOVAL_FLAG] =\n            { namespaceId, setForRemoval: context, hasAnimation, removedBeforeQueried: false };\n    }\n    listen(namespaceId, element, name, phase, callback) {\n        if (isElementNode(element)) {\n            return this._fetchNamespace(namespaceId).listen(element, name, phase, callback);\n        }\n        return () => { };\n    }\n    _buildInstruction(entry, subTimelines, enterClassName, leaveClassName, skipBuildAst) {\n        return entry.transition.build(this.driver, entry.element, entry.fromState.value, entry.toState.value, enterClassName, leaveClassName, entry.fromState.options, entry.toState.options, subTimelines, skipBuildAst);\n    }\n    destroyInnerAnimations(containerElement) {\n        let elements = this.driver.query(containerElement, NG_TRIGGER_SELECTOR, true);\n        elements.forEach(element => this.destroyActiveAnimationsForElement(element));\n        if (this.playersByQueriedElement.size == 0)\n            return;\n        elements = this.driver.query(containerElement, NG_ANIMATING_SELECTOR, true);\n        elements.forEach(element => this.finishActiveQueriedAnimationOnElement(element));\n    }\n    destroyActiveAnimationsForElement(element) {\n        const players = this.playersByElement.get(element);\n        if (players) {\n            players.forEach(player => {\n                // special case for when an element is set for destruction, but hasn't started.\n                // in this situation we want to delay the destruction until the flush occurs\n                // so that any event listeners attached to the player are triggered.\n                if (player.queued) {\n                    player.markedForDestroy = true;\n                }\n                else {\n                    player.destroy();\n                }\n            });\n        }\n    }\n    finishActiveQueriedAnimationOnElement(element) {\n        const players = this.playersByQueriedElement.get(element);\n        if (players) {\n            players.forEach(player => player.finish());\n        }\n    }\n    whenRenderingDone() {\n        return new Promise(resolve => {\n            if (this.players.length) {\n                return optimizeGroupPlayer(this.players).onDone(() => resolve());\n            }\n            else {\n                resolve();\n            }\n        });\n    }\n    processLeaveNode(element) {\n        const details = element[REMOVAL_FLAG];\n        if (details && details.setForRemoval) {\n            // this will prevent it from removing it twice\n            element[REMOVAL_FLAG] = NULL_REMOVAL_STATE;\n            if (details.namespaceId) {\n                this.destroyInnerAnimations(element);\n                const ns = this._fetchNamespace(details.namespaceId);\n                if (ns) {\n                    ns.clearElementCache(element);\n                }\n            }\n            this._onRemovalComplete(element, details.setForRemoval);\n        }\n        if (this.driver.matchesElement(element, DISABLED_SELECTOR)) {\n            this.markElementAsDisabled(element, false);\n        }\n        this.driver.query(element, DISABLED_SELECTOR, true).forEach(node => {\n            this.markElementAsDisabled(node, false);\n        });\n    }\n    flush(microtaskId = -1) {\n        let players = [];\n        if (this.newHostElements.size) {\n            this.newHostElements.forEach((ns, element) => this._balanceNamespaceList(ns, element));\n            this.newHostElements.clear();\n        }\n        if (this.totalAnimations && this.collectedEnterElements.length) {\n            for (let i = 0; i < this.collectedEnterElements.length; i++) {\n                const elm = this.collectedEnterElements[i];\n                addClass(elm, STAR_CLASSNAME);\n            }\n        }\n        if (this._namespaceList.length &&\n            (this.totalQueuedPlayers || this.collectedLeaveElements.length)) {\n            const cleanupFns = [];\n            try {\n                players = this._flushAnimations(cleanupFns, microtaskId);\n            }\n            finally {\n                for (let i = 0; i < cleanupFns.length; i++) {\n                    cleanupFns[i]();\n                }\n            }\n        }\n        else {\n            for (let i = 0; i < this.collectedLeaveElements.length; i++) {\n                const element = this.collectedLeaveElements[i];\n                this.processLeaveNode(element);\n            }\n        }\n        this.totalQueuedPlayers = 0;\n        this.collectedEnterElements.length = 0;\n        this.collectedLeaveElements.length = 0;\n        this._flushFns.forEach(fn => fn());\n        this._flushFns = [];\n        if (this._whenQuietFns.length) {\n            // we move these over to a variable so that\n            // if any new callbacks are registered in another\n            // flush they do not populate the existing set\n            const quietFns = this._whenQuietFns;\n            this._whenQuietFns = [];\n            if (players.length) {\n                optimizeGroupPlayer(players).onDone(() => {\n                    quietFns.forEach(fn => fn());\n                });\n            }\n            else {\n                quietFns.forEach(fn => fn());\n            }\n        }\n    }\n    reportError(errors) {\n        throw new Error(`Unable to process animations due to the following failed trigger transitions\\n ${errors.join('\\n')}`);\n    }\n    _flushAnimations(cleanupFns, microtaskId) {\n        const subTimelines = new ElementInstructionMap();\n        const skippedPlayers = [];\n        const skippedPlayersMap = new Map();\n        const queuedInstructions = [];\n        const queriedElements = new Map();\n        const allPreStyleElements = new Map();\n        const allPostStyleElements = new Map();\n        const disabledElementsSet = new Set();\n        this.disabledNodes.forEach(node => {\n            disabledElementsSet.add(node);\n            const nodesThatAreDisabled = this.driver.query(node, QUEUED_SELECTOR, true);\n            for (let i = 0; i < nodesThatAreDisabled.length; i++) {\n                disabledElementsSet.add(nodesThatAreDisabled[i]);\n            }\n        });\n        const bodyNode = this.bodyNode;\n        const allTriggerElements = Array.from(this.statesByElement.keys());\n        const enterNodeMap = buildRootMap(allTriggerElements, this.collectedEnterElements);\n        // this must occur before the instructions are built below such that\n        // the :enter queries match the elements (since the timeline queries\n        // are fired during instruction building).\n        const enterNodeMapIds = new Map();\n        let i = 0;\n        enterNodeMap.forEach((nodes, root) => {\n            const className = ENTER_CLASSNAME + i++;\n            enterNodeMapIds.set(root, className);\n            nodes.forEach(node => addClass(node, className));\n        });\n        const allLeaveNodes = [];\n        const mergedLeaveNodes = new Set();\n        const leaveNodesWithoutAnimations = new Set();\n        for (let i = 0; i < this.collectedLeaveElements.length; i++) {\n            const element = this.collectedLeaveElements[i];\n            const details = element[REMOVAL_FLAG];\n            if (details && details.setForRemoval) {\n                allLeaveNodes.push(element);\n                mergedLeaveNodes.add(element);\n                if (details.hasAnimation) {\n                    this.driver.query(element, STAR_SELECTOR, true).forEach(elm => mergedLeaveNodes.add(elm));\n                }\n                else {\n                    leaveNodesWithoutAnimations.add(element);\n                }\n            }\n        }\n        const leaveNodeMapIds = new Map();\n        const leaveNodeMap = buildRootMap(allTriggerElements, Array.from(mergedLeaveNodes));\n        leaveNodeMap.forEach((nodes, root) => {\n            const className = LEAVE_CLASSNAME + i++;\n            leaveNodeMapIds.set(root, className);\n            nodes.forEach(node => addClass(node, className));\n        });\n        cleanupFns.push(() => {\n            enterNodeMap.forEach((nodes, root) => {\n                const className = enterNodeMapIds.get(root);\n                nodes.forEach(node => removeClass(node, className));\n            });\n            leaveNodeMap.forEach((nodes, root) => {\n                const className = leaveNodeMapIds.get(root);\n                nodes.forEach(node => removeClass(node, className));\n            });\n            allLeaveNodes.forEach(element => {\n                this.processLeaveNode(element);\n            });\n        });\n        const allPlayers = [];\n        const erroneousTransitions = [];\n        for (let i = this._namespaceList.length - 1; i >= 0; i--) {\n            const ns = this._namespaceList[i];\n            ns.drainQueuedTransitions(microtaskId).forEach(entry => {\n                const player = entry.player;\n                const element = entry.element;\n                allPlayers.push(player);\n                if (this.collectedEnterElements.length) {\n                    const details = element[REMOVAL_FLAG];\n                    // move animations are currently not supported...\n                    if (details && details.setForMove) {\n                        player.destroy();\n                        return;\n                    }\n                }\n                const nodeIsOrphaned = !bodyNode || !this.driver.containsElement(bodyNode, element);\n                const leaveClassName = leaveNodeMapIds.get(element);\n                const enterClassName = enterNodeMapIds.get(element);\n                const instruction = this._buildInstruction(entry, subTimelines, enterClassName, leaveClassName, nodeIsOrphaned);\n                if (instruction.errors && instruction.errors.length) {\n                    erroneousTransitions.push(instruction);\n                    return;\n                }\n                // even though the element may not be in the DOM, it may still\n                // be added at a later point (due to the mechanics of content\n                // projection and/or dynamic component insertion) therefore it's\n                // important to still style the element.\n                if (nodeIsOrphaned) {\n                    player.onStart(() => eraseStyles(element, instruction.fromStyles));\n                    player.onDestroy(() => setStyles(element, instruction.toStyles));\n                    skippedPlayers.push(player);\n                    return;\n                }\n                // if an unmatched transition is queued and ready to go\n                // then it SHOULD NOT render an animation and cancel the\n                // previously running animations.\n                if (entry.isFallbackTransition) {\n                    player.onStart(() => eraseStyles(element, instruction.fromStyles));\n                    player.onDestroy(() => setStyles(element, instruction.toStyles));\n                    skippedPlayers.push(player);\n                    return;\n                }\n                // this means that if a parent animation uses this animation as a sub-trigger\n                // then it will instruct the timeline builder not to add a player delay, but\n                // instead stretch the first keyframe gap until the animation starts. This is\n                // important in order to prevent extra initialization styles from being\n                // required by the user for the animation.\n                instruction.timelines.forEach(tl => tl.stretchStartingKeyframe = true);\n                subTimelines.append(element, instruction.timelines);\n                const tuple = { instruction, player, element };\n                queuedInstructions.push(tuple);\n                instruction.queriedElements.forEach(element => getOrSetAsInMap(queriedElements, element, []).push(player));\n                instruction.preStyleProps.forEach((stringMap, element) => {\n                    const props = Object.keys(stringMap);\n                    if (props.length) {\n                        let setVal = allPreStyleElements.get(element);\n                        if (!setVal) {\n                            allPreStyleElements.set(element, setVal = new Set());\n                        }\n                        props.forEach(prop => setVal.add(prop));\n                    }\n                });\n                instruction.postStyleProps.forEach((stringMap, element) => {\n                    const props = Object.keys(stringMap);\n                    let setVal = allPostStyleElements.get(element);\n                    if (!setVal) {\n                        allPostStyleElements.set(element, setVal = new Set());\n                    }\n                    props.forEach(prop => setVal.add(prop));\n                });\n            });\n        }\n        if (erroneousTransitions.length) {\n            const errors = [];\n            erroneousTransitions.forEach(instruction => {\n                errors.push(`@${instruction.triggerName} has failed due to:\\n`);\n                instruction.errors.forEach(error => errors.push(`- ${error}\\n`));\n            });\n            allPlayers.forEach(player => player.destroy());\n            this.reportError(errors);\n        }\n        const allPreviousPlayersMap = new Map();\n        // this map tells us which element in the DOM tree is contained by\n        // which animation. Further down this map will get populated once\n        // the players are built and in doing so we can use it to efficiently\n        // figure out if a sub player is skipped due to a parent player having priority.\n        const animationElementMap = new Map();\n        queuedInstructions.forEach(entry => {\n            const element = entry.element;\n            if (subTimelines.has(element)) {\n                animationElementMap.set(element, element);\n                this._beforeAnimationBuild(entry.player.namespaceId, entry.instruction, allPreviousPlayersMap);\n            }\n        });\n        skippedPlayers.forEach(player => {\n            const element = player.element;\n            const previousPlayers = this._getPreviousPlayers(element, false, player.namespaceId, player.triggerName, null);\n            previousPlayers.forEach(prevPlayer => {\n                getOrSetAsInMap(allPreviousPlayersMap, element, []).push(prevPlayer);\n                prevPlayer.destroy();\n            });\n        });\n        // this is a special case for nodes that will be removed either by\n        // having their own leave animations or by being queried in a container\n        // that will be removed once a parent animation is complete. The idea\n        // here is that * styles must be identical to ! styles because of\n        // backwards compatibility (* is also filled in by default in many places).\n        // Otherwise * styles will return an empty value or \"auto\" since the element\n        // passed to getComputedStyle will not be visible (since * === destination)\n        const replaceNodes = allLeaveNodes.filter(node => {\n            return replacePostStylesAsPre(node, allPreStyleElements, allPostStyleElements);\n        });\n        // POST STAGE: fill the * styles\n        const postStylesMap = new Map();\n        const allLeaveQueriedNodes = cloakAndComputeStyles(postStylesMap, this.driver, leaveNodesWithoutAnimations, allPostStyleElements, AUTO_STYLE);\n        allLeaveQueriedNodes.forEach(node => {\n            if (replacePostStylesAsPre(node, allPreStyleElements, allPostStyleElements)) {\n                replaceNodes.push(node);\n            }\n        });\n        // PRE STAGE: fill the ! styles\n        const preStylesMap = new Map();\n        enterNodeMap.forEach((nodes, root) => {\n            cloakAndComputeStyles(preStylesMap, this.driver, new Set(nodes), allPreStyleElements, ɵPRE_STYLE);\n        });\n        replaceNodes.forEach(node => {\n            const post = postStylesMap.get(node);\n            const pre = preStylesMap.get(node);\n            postStylesMap.set(node, { ...post, ...pre });\n        });\n        const rootPlayers = [];\n        const subPlayers = [];\n        const NO_PARENT_ANIMATION_ELEMENT_DETECTED = {};\n        queuedInstructions.forEach(entry => {\n            const { element, player, instruction } = entry;\n            // this means that it was never consumed by a parent animation which\n            // means that it is independent and therefore should be set for animation\n            if (subTimelines.has(element)) {\n                if (disabledElementsSet.has(element)) {\n                    player.onDestroy(() => setStyles(element, instruction.toStyles));\n                    player.disabled = true;\n                    player.overrideTotalTime(instruction.totalTime);\n                    skippedPlayers.push(player);\n                    return;\n                }\n                // this will flow up the DOM and query the map to figure out\n                // if a parent animation has priority over it. In the situation\n                // that a parent is detected then it will cancel the loop. If\n                // nothing is detected, or it takes a few hops to find a parent,\n                // then it will fill in the missing nodes and signal them as having\n                // a detected parent (or a NO_PARENT value via a special constant).\n                let parentWithAnimation = NO_PARENT_ANIMATION_ELEMENT_DETECTED;\n                if (animationElementMap.size > 1) {\n                    let elm = element;\n                    const parentsToAdd = [];\n                    while (elm = elm.parentNode) {\n                        const detectedParent = animationElementMap.get(elm);\n                        if (detectedParent) {\n                            parentWithAnimation = detectedParent;\n                            break;\n                        }\n                        parentsToAdd.push(elm);\n                    }\n                    parentsToAdd.forEach(parent => animationElementMap.set(parent, parentWithAnimation));\n                }\n                const innerPlayer = this._buildAnimation(player.namespaceId, instruction, allPreviousPlayersMap, skippedPlayersMap, preStylesMap, postStylesMap);\n                player.setRealPlayer(innerPlayer);\n                if (parentWithAnimation === NO_PARENT_ANIMATION_ELEMENT_DETECTED) {\n                    rootPlayers.push(player);\n                }\n                else {\n                    const parentPlayers = this.playersByElement.get(parentWithAnimation);\n                    if (parentPlayers && parentPlayers.length) {\n                        player.parentPlayer = optimizeGroupPlayer(parentPlayers);\n                    }\n                    skippedPlayers.push(player);\n                }\n            }\n            else {\n                eraseStyles(element, instruction.fromStyles);\n                player.onDestroy(() => setStyles(element, instruction.toStyles));\n                // there still might be a ancestor player animating this\n                // element therefore we will still add it as a sub player\n                // even if its animation may be disabled\n                subPlayers.push(player);\n                if (disabledElementsSet.has(element)) {\n                    skippedPlayers.push(player);\n                }\n            }\n        });\n        // find all of the sub players' corresponding inner animation players\n        subPlayers.forEach(player => {\n            // even if no players are found for a sub animation it\n            // will still complete itself after the next tick since it's Noop\n            const playersForElement = skippedPlayersMap.get(player.element);\n            if (playersForElement && playersForElement.length) {\n                const innerPlayer = optimizeGroupPlayer(playersForElement);\n                player.setRealPlayer(innerPlayer);\n            }\n        });\n        // the reason why we don't actually play the animation is\n        // because all that a skipped player is designed to do is to\n        // fire the start/done transition callback events\n        skippedPlayers.forEach(player => {\n            if (player.parentPlayer) {\n                player.syncPlayerEvents(player.parentPlayer);\n            }\n            else {\n                player.destroy();\n            }\n        });\n        // run through all of the queued removals and see if they\n        // were picked up by a query. If not then perform the removal\n        // operation right away unless a parent animation is ongoing.\n        for (let i = 0; i < allLeaveNodes.length; i++) {\n            const element = allLeaveNodes[i];\n            const details = element[REMOVAL_FLAG];\n            removeClass(element, LEAVE_CLASSNAME);\n            // this means the element has a removal animation that is being\n            // taken care of and therefore the inner elements will hang around\n            // until that animation is over (or the parent queried animation)\n            if (details && details.hasAnimation)\n                continue;\n            let players = [];\n            // if this element is queried or if it contains queried children\n            // then we want for the element not to be removed from the page\n            // until the queried animations have finished\n            if (queriedElements.size) {\n                let queriedPlayerResults = queriedElements.get(element);\n                if (queriedPlayerResults && queriedPlayerResults.length) {\n                    players.push(...queriedPlayerResults);\n                }\n                let queriedInnerElements = this.driver.query(element, NG_ANIMATING_SELECTOR, true);\n                for (let j = 0; j < queriedInnerElements.length; j++) {\n                    let queriedPlayers = queriedElements.get(queriedInnerElements[j]);\n                    if (queriedPlayers && queriedPlayers.length) {\n                        players.push(...queriedPlayers);\n                    }\n                }\n            }\n            const activePlayers = players.filter(p => !p.destroyed);\n            if (activePlayers.length) {\n                removeNodesAfterAnimationDone(this, element, activePlayers);\n            }\n            else {\n                this.processLeaveNode(element);\n            }\n        }\n        // this is required so the cleanup method doesn't remove them\n        allLeaveNodes.length = 0;\n        rootPlayers.forEach(player => {\n            this.players.push(player);\n            player.onDone(() => {\n                player.destroy();\n                const index = this.players.indexOf(player);\n                this.players.splice(index, 1);\n            });\n            player.play();\n        });\n        return rootPlayers;\n    }\n    elementContainsData(namespaceId, element) {\n        let containsData = false;\n        const details = element[REMOVAL_FLAG];\n        if (details && details.setForRemoval)\n            containsData = true;\n        if (this.playersByElement.has(element))\n            containsData = true;\n        if (this.playersByQueriedElement.has(element))\n            containsData = true;\n        if (this.statesByElement.has(element))\n            containsData = true;\n        return this._fetchNamespace(namespaceId).elementContainsData(element) || containsData;\n    }\n    afterFlush(callback) {\n        this._flushFns.push(callback);\n    }\n    afterFlushAnimationsDone(callback) {\n        this._whenQuietFns.push(callback);\n    }\n    _getPreviousPlayers(element, isQueriedElement, namespaceId, triggerName, toStateValue) {\n        let players = [];\n        if (isQueriedElement) {\n            const queriedElementPlayers = this.playersByQueriedElement.get(element);\n            if (queriedElementPlayers) {\n                players = queriedElementPlayers;\n            }\n        }\n        else {\n            const elementPlayers = this.playersByElement.get(element);\n            if (elementPlayers) {\n                const isRemovalAnimation = !toStateValue || toStateValue == VOID_VALUE;\n                elementPlayers.forEach(player => {\n                    if (player.queued)\n                        return;\n                    if (!isRemovalAnimation && player.triggerName != triggerName)\n                        return;\n                    players.push(player);\n                });\n            }\n        }\n        if (namespaceId || triggerName) {\n            players = players.filter(player => {\n                if (namespaceId && namespaceId != player.namespaceId)\n                    return false;\n                if (triggerName && triggerName != player.triggerName)\n                    return false;\n                return true;\n            });\n        }\n        return players;\n    }\n    _beforeAnimationBuild(namespaceId, instruction, allPreviousPlayersMap) {\n        const triggerName = instruction.triggerName;\n        const rootElement = instruction.element;\n        // when a removal animation occurs, ALL previous players are collected\n        // and destroyed (even if they are outside of the current namespace)\n        const targetNameSpaceId = instruction.isRemovalTransition ? undefined : namespaceId;\n        const targetTriggerName = instruction.isRemovalTransition ? undefined : triggerName;\n        for (const timelineInstruction of instruction.timelines) {\n            const element = timelineInstruction.element;\n            const isQueriedElement = element !== rootElement;\n            const players = getOrSetAsInMap(allPreviousPlayersMap, element, []);\n            const previousPlayers = this._getPreviousPlayers(element, isQueriedElement, targetNameSpaceId, targetTriggerName, instruction.toState);\n            previousPlayers.forEach(player => {\n                const realPlayer = player.getRealPlayer();\n                if (realPlayer.beforeDestroy) {\n                    realPlayer.beforeDestroy();\n                }\n                player.destroy();\n                players.push(player);\n            });\n        }\n        // this needs to be done so that the PRE/POST styles can be\n        // computed properly without interfering with the previous animation\n        eraseStyles(rootElement, instruction.fromStyles);\n    }\n    _buildAnimation(namespaceId, instruction, allPreviousPlayersMap, skippedPlayersMap, preStylesMap, postStylesMap) {\n        const triggerName = instruction.triggerName;\n        const rootElement = instruction.element;\n        // we first run this so that the previous animation player\n        // data can be passed into the successive animation players\n        const allQueriedPlayers = [];\n        const allConsumedElements = new Set();\n        const allSubElements = new Set();\n        const allNewPlayers = instruction.timelines.map(timelineInstruction => {\n            const element = timelineInstruction.element;\n            allConsumedElements.add(element);\n            // FIXME (matsko): make sure to-be-removed animations are removed properly\n            const details = element[REMOVAL_FLAG];\n            if (details && details.removedBeforeQueried)\n                return new NoopAnimationPlayer(timelineInstruction.duration, timelineInstruction.delay);\n            const isQueriedElement = element !== rootElement;\n            const previousPlayers = flattenGroupPlayers((allPreviousPlayersMap.get(element) || EMPTY_PLAYER_ARRAY)\n                .map(p => p.getRealPlayer()))\n                .filter(p => {\n                // the `element` is not apart of the AnimationPlayer definition, but\n                // Mock/WebAnimations\n                // use the element within their implementation. This will be added in Angular5 to\n                // AnimationPlayer\n                const pp = p;\n                return pp.element ? pp.element === element : false;\n            });\n            const preStyles = preStylesMap.get(element);\n            const postStyles = postStylesMap.get(element);\n            const keyframes = normalizeKeyframes(this.driver, this._normalizer, element, timelineInstruction.keyframes, preStyles, postStyles);\n            const player = this._buildPlayer(timelineInstruction, keyframes, previousPlayers);\n            // this means that this particular player belongs to a sub trigger. It is\n            // important that we match this player up with the corresponding (@trigger.listener)\n            if (timelineInstruction.subTimeline && skippedPlayersMap) {\n                allSubElements.add(element);\n            }\n            if (isQueriedElement) {\n                const wrappedPlayer = new TransitionAnimationPlayer(namespaceId, triggerName, element);\n                wrappedPlayer.setRealPlayer(player);\n                allQueriedPlayers.push(wrappedPlayer);\n            }\n            return player;\n        });\n        allQueriedPlayers.forEach(player => {\n            getOrSetAsInMap(this.playersByQueriedElement, player.element, []).push(player);\n            player.onDone(() => deleteOrUnsetInMap(this.playersByQueriedElement, player.element, player));\n        });\n        allConsumedElements.forEach(element => addClass(element, NG_ANIMATING_CLASSNAME));\n        const player = optimizeGroupPlayer(allNewPlayers);\n        player.onDestroy(() => {\n            allConsumedElements.forEach(element => removeClass(element, NG_ANIMATING_CLASSNAME));\n            setStyles(rootElement, instruction.toStyles);\n        });\n        // this basically makes all of the callbacks for sub element animations\n        // be dependent on the upper players for when they finish\n        allSubElements.forEach(element => {\n            getOrSetAsInMap(skippedPlayersMap, element, []).push(player);\n        });\n        return player;\n    }\n    _buildPlayer(instruction, keyframes, previousPlayers) {\n        if (keyframes.length > 0) {\n            return this.driver.animate(instruction.element, keyframes, instruction.duration, instruction.delay, instruction.easing, previousPlayers);\n        }\n        // special case for when an empty transition|definition is provided\n        // ... there is no point in rendering an empty animation\n        return new NoopAnimationPlayer(instruction.duration, instruction.delay);\n    }\n}\nclass TransitionAnimationPlayer {\n    constructor(namespaceId, triggerName, element) {\n        this.namespaceId = namespaceId;\n        this.triggerName = triggerName;\n        this.element = element;\n        this._player = new NoopAnimationPlayer();\n        this._containsRealPlayer = false;\n        this._queuedCallbacks = {};\n        this.destroyed = false;\n        this.markedForDestroy = false;\n        this.disabled = false;\n        this.queued = true;\n        this.totalTime = 0;\n    }\n    setRealPlayer(player) {\n        if (this._containsRealPlayer)\n            return;\n        this._player = player;\n        Object.keys(this._queuedCallbacks).forEach(phase => {\n            this._queuedCallbacks[phase].forEach(callback => listenOnPlayer(player, phase, undefined, callback));\n        });\n        this._queuedCallbacks = {};\n        this._containsRealPlayer = true;\n        this.overrideTotalTime(player.totalTime);\n        this.queued = false;\n    }\n    getRealPlayer() {\n        return this._player;\n    }\n    overrideTotalTime(totalTime) {\n        this.totalTime = totalTime;\n    }\n    syncPlayerEvents(player) {\n        const p = this._player;\n        if (p.triggerCallback) {\n            player.onStart(() => p.triggerCallback('start'));\n        }\n        player.onDone(() => this.finish());\n        player.onDestroy(() => this.destroy());\n    }\n    _queueEvent(name, callback) {\n        getOrSetAsInMap(this._queuedCallbacks, name, []).push(callback);\n    }\n    onDone(fn) {\n        if (this.queued) {\n            this._queueEvent('done', fn);\n        }\n        this._player.onDone(fn);\n    }\n    onStart(fn) {\n        if (this.queued) {\n            this._queueEvent('start', fn);\n        }\n        this._player.onStart(fn);\n    }\n    onDestroy(fn) {\n        if (this.queued) {\n            this._queueEvent('destroy', fn);\n        }\n        this._player.onDestroy(fn);\n    }\n    init() {\n        this._player.init();\n    }\n    hasStarted() {\n        return this.queued ? false : this._player.hasStarted();\n    }\n    play() {\n        !this.queued && this._player.play();\n    }\n    pause() {\n        !this.queued && this._player.pause();\n    }\n    restart() {\n        !this.queued && this._player.restart();\n    }\n    finish() {\n        this._player.finish();\n    }\n    destroy() {\n        this.destroyed = true;\n        this._player.destroy();\n    }\n    reset() {\n        !this.queued && this._player.reset();\n    }\n    setPosition(p) {\n        if (!this.queued) {\n            this._player.setPosition(p);\n        }\n    }\n    getPosition() {\n        return this.queued ? 0 : this._player.getPosition();\n    }\n    /** @internal */\n    triggerCallback(phaseName) {\n        const p = this._player;\n        if (p.triggerCallback) {\n            p.triggerCallback(phaseName);\n        }\n    }\n}\nfunction deleteOrUnsetInMap(map, key, value) {\n    let currentValues;\n    if (map instanceof Map) {\n        currentValues = map.get(key);\n        if (currentValues) {\n            if (currentValues.length) {\n                const index = currentValues.indexOf(value);\n                currentValues.splice(index, 1);\n            }\n            if (currentValues.length == 0) {\n                map.delete(key);\n            }\n        }\n    }\n    else {\n        currentValues = map[key];\n        if (currentValues) {\n            if (currentValues.length) {\n                const index = currentValues.indexOf(value);\n                currentValues.splice(index, 1);\n            }\n            if (currentValues.length == 0) {\n                delete map[key];\n            }\n        }\n    }\n    return currentValues;\n}\nfunction normalizeTriggerValue(value) {\n    // we use `!= null` here because it's the most simple\n    // way to test against a \"falsy\" value without mixing\n    // in empty strings or a zero value. DO NOT OPTIMIZE.\n    return value != null ? value : null;\n}\nfunction isElementNode(node) {\n    return node && node['nodeType'] === 1;\n}\nfunction isTriggerEventValid(eventName) {\n    return eventName == 'start' || eventName == 'done';\n}\nfunction cloakElement(element, value) {\n    const oldValue = element.style.display;\n    element.style.display = value != null ? value : 'none';\n    return oldValue;\n}\nfunction cloakAndComputeStyles(valuesMap, driver, elements, elementPropsMap, defaultStyle) {\n    const cloakVals = [];\n    elements.forEach(element => cloakVals.push(cloakElement(element)));\n    const failedElements = [];\n    elementPropsMap.forEach((props, element) => {\n        const styles = {};\n        props.forEach(prop => {\n            const value = styles[prop] = driver.computeStyle(element, prop, defaultStyle);\n            // there is no easy way to detect this because a sub element could be removed\n            // by a parent animation element being detached.\n            if (!value || value.length == 0) {\n                element[REMOVAL_FLAG] = NULL_REMOVED_QUERIED_STATE;\n                failedElements.push(element);\n            }\n        });\n        valuesMap.set(element, styles);\n    });\n    // we use a index variable here since Set.forEach(a, i) does not return\n    // an index value for the closure (but instead just the value)\n    let i = 0;\n    elements.forEach(element => cloakElement(element, cloakVals[i++]));\n    return failedElements;\n}\n/*\nSince the Angular renderer code will return a collection of inserted\nnodes in all areas of a DOM tree, it's up to this algorithm to figure\nout which nodes are roots for each animation @trigger.\n\nBy placing each inserted node into a Set and traversing upwards, it\nis possible to find the @trigger elements and well any direct *star\ninsertion nodes, if a @trigger root is found then the enter element\nis placed into the Map[@trigger] spot.\n */\nfunction buildRootMap(roots, nodes) {\n    const rootMap = new Map();\n    roots.forEach(root => rootMap.set(root, []));\n    if (nodes.length == 0)\n        return rootMap;\n    const NULL_NODE = 1;\n    const nodeSet = new Set(nodes);\n    const localRootMap = new Map();\n    function getRoot(node) {\n        if (!node)\n            return NULL_NODE;\n        let root = localRootMap.get(node);\n        if (root)\n            return root;\n        const parent = node.parentNode;\n        if (rootMap.has(parent)) { // ngIf inside @trigger\n            root = parent;\n        }\n        else if (nodeSet.has(parent)) { // ngIf inside ngIf\n            root = NULL_NODE;\n        }\n        else { // recurse upwards\n            root = getRoot(parent);\n        }\n        localRootMap.set(node, root);\n        return root;\n    }\n    nodes.forEach(node => {\n        const root = getRoot(node);\n        if (root !== NULL_NODE) {\n            rootMap.get(root).push(node);\n        }\n    });\n    return rootMap;\n}\nconst CLASSES_CACHE_KEY = '$$classes';\nfunction containsClass(element, className) {\n    if (element.classList) {\n        return element.classList.contains(className);\n    }\n    else {\n        const classes = element[CLASSES_CACHE_KEY];\n        return classes && classes[className];\n    }\n}\nfunction addClass(element, className) {\n    if (element.classList) {\n        element.classList.add(className);\n    }\n    else {\n        let classes = element[CLASSES_CACHE_KEY];\n        if (!classes) {\n            classes = element[CLASSES_CACHE_KEY] = {};\n        }\n        classes[className] = true;\n    }\n}\nfunction removeClass(element, className) {\n    if (element.classList) {\n        element.classList.remove(className);\n    }\n    else {\n        let classes = element[CLASSES_CACHE_KEY];\n        if (classes) {\n            delete classes[className];\n        }\n    }\n}\nfunction removeNodesAfterAnimationDone(engine, element, players) {\n    optimizeGroupPlayer(players).onDone(() => engine.processLeaveNode(element));\n}\nfunction flattenGroupPlayers(players) {\n    const finalPlayers = [];\n    _flattenGroupPlayersRecur(players, finalPlayers);\n    return finalPlayers;\n}\nfunction _flattenGroupPlayersRecur(players, finalPlayers) {\n    for (let i = 0; i < players.length; i++) {\n        const player = players[i];\n        if (player instanceof ɵAnimationGroupPlayer) {\n            _flattenGroupPlayersRecur(player.players, finalPlayers);\n        }\n        else {\n            finalPlayers.push(player);\n        }\n    }\n}\nfunction objEquals(a, b) {\n    const k1 = Object.keys(a);\n    const k2 = Object.keys(b);\n    if (k1.length != k2.length)\n        return false;\n    for (let i = 0; i < k1.length; i++) {\n        const prop = k1[i];\n        if (!b.hasOwnProperty(prop) || a[prop] !== b[prop])\n            return false;\n    }\n    return true;\n}\nfunction replacePostStylesAsPre(element, allPreStyleElements, allPostStyleElements) {\n    const postEntry = allPostStyleElements.get(element);\n    if (!postEntry)\n        return false;\n    let preEntry = allPreStyleElements.get(element);\n    if (preEntry) {\n        postEntry.forEach(data => preEntry.add(data));\n    }\n    else {\n        allPreStyleElements.set(element, postEntry);\n    }\n    allPostStyleElements.delete(element);\n    return true;\n}\n\nclass AnimationEngine {\n    constructor(bodyNode, _driver, _normalizer) {\n        this.bodyNode = bodyNode;\n        this._driver = _driver;\n        this._normalizer = _normalizer;\n        this._triggerCache = {};\n        // this method is designed to be overridden by the code that uses this engine\n        this.onRemovalComplete = (element, context) => { };\n        this._transitionEngine = new TransitionAnimationEngine(bodyNode, _driver, _normalizer);\n        this._timelineEngine = new TimelineAnimationEngine(bodyNode, _driver, _normalizer);\n        this._transitionEngine.onRemovalComplete = (element, context) => this.onRemovalComplete(element, context);\n    }\n    registerTrigger(componentId, namespaceId, hostElement, name, metadata) {\n        const cacheKey = componentId + '-' + name;\n        let trigger = this._triggerCache[cacheKey];\n        if (!trigger) {\n            const errors = [];\n            const ast = buildAnimationAst(this._driver, metadata, errors);\n            if (errors.length) {\n                throw new Error(`The animation trigger \"${name}\" has failed to build due to the following errors:\\n - ${errors.join('\\n - ')}`);\n            }\n            trigger = buildTrigger(name, ast, this._normalizer);\n            this._triggerCache[cacheKey] = trigger;\n        }\n        this._transitionEngine.registerTrigger(namespaceId, name, trigger);\n    }\n    register(namespaceId, hostElement) {\n        this._transitionEngine.register(namespaceId, hostElement);\n    }\n    destroy(namespaceId, context) {\n        this._transitionEngine.destroy(namespaceId, context);\n    }\n    onInsert(namespaceId, element, parent, insertBefore) {\n        this._transitionEngine.insertNode(namespaceId, element, parent, insertBefore);\n    }\n    onRemove(namespaceId, element, context, isHostElement) {\n        this._transitionEngine.removeNode(namespaceId, element, isHostElement || false, context);\n    }\n    disableAnimations(element, disable) {\n        this._transitionEngine.markElementAsDisabled(element, disable);\n    }\n    process(namespaceId, element, property, value) {\n        if (property.charAt(0) == '@') {\n            const [id, action] = parseTimelineCommand(property);\n            const args = value;\n            this._timelineEngine.command(id, element, action, args);\n        }\n        else {\n            this._transitionEngine.trigger(namespaceId, element, property, value);\n        }\n    }\n    listen(namespaceId, element, eventName, eventPhase, callback) {\n        // @@listen\n        if (eventName.charAt(0) == '@') {\n            const [id, action] = parseTimelineCommand(eventName);\n            return this._timelineEngine.listen(id, element, action, callback);\n        }\n        return this._transitionEngine.listen(namespaceId, element, eventName, eventPhase, callback);\n    }\n    flush(microtaskId = -1) {\n        this._transitionEngine.flush(microtaskId);\n    }\n    get players() {\n        return this._transitionEngine.players\n            .concat(this._timelineEngine.players);\n    }\n    whenRenderingDone() {\n        return this._transitionEngine.whenRenderingDone();\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an instance of `SpecialCasedStyles` if and when any special (non animateable) styles are\n * detected.\n *\n * In CSS there exist properties that cannot be animated within a keyframe animation\n * (whether it be via CSS keyframes or web-animations) and the animation implementation\n * will ignore them. This function is designed to detect those special cased styles and\n * return a container that will be executed at the start and end of the animation.\n *\n * @returns an instance of `SpecialCasedStyles` if any special styles are detected otherwise `null`\n */\nfunction packageNonAnimatableStyles(element, styles) {\n    let startStyles = null;\n    let endStyles = null;\n    if (Array.isArray(styles) && styles.length) {\n        startStyles = filterNonAnimatableStyles(styles[0]);\n        if (styles.length > 1) {\n            endStyles = filterNonAnimatableStyles(styles[styles.length - 1]);\n        }\n    }\n    else if (styles) {\n        startStyles = filterNonAnimatableStyles(styles);\n    }\n    return (startStyles || endStyles) ? new SpecialCasedStyles(element, startStyles, endStyles) :\n        null;\n}\n/**\n * Designed to be executed during a keyframe-based animation to apply any special-cased styles.\n *\n * When started (when the `start()` method is run) then the provided `startStyles`\n * will be applied. When finished (when the `finish()` method is called) the\n * `endStyles` will be applied as well any any starting styles. Finally when\n * `destroy()` is called then all styles will be removed.\n */\nclass SpecialCasedStyles {\n    constructor(_element, _startStyles, _endStyles) {\n        this._element = _element;\n        this._startStyles = _startStyles;\n        this._endStyles = _endStyles;\n        this._state = 0 /* Pending */;\n        let initialStyles = SpecialCasedStyles.initialStylesByElement.get(_element);\n        if (!initialStyles) {\n            SpecialCasedStyles.initialStylesByElement.set(_element, initialStyles = {});\n        }\n        this._initialStyles = initialStyles;\n    }\n    start() {\n        if (this._state < 1 /* Started */) {\n            if (this._startStyles) {\n                setStyles(this._element, this._startStyles, this._initialStyles);\n            }\n            this._state = 1 /* Started */;\n        }\n    }\n    finish() {\n        this.start();\n        if (this._state < 2 /* Finished */) {\n            setStyles(this._element, this._initialStyles);\n            if (this._endStyles) {\n                setStyles(this._element, this._endStyles);\n                this._endStyles = null;\n            }\n            this._state = 1 /* Started */;\n        }\n    }\n    destroy() {\n        this.finish();\n        if (this._state < 3 /* Destroyed */) {\n            SpecialCasedStyles.initialStylesByElement.delete(this._element);\n            if (this._startStyles) {\n                eraseStyles(this._element, this._startStyles);\n                this._endStyles = null;\n            }\n            if (this._endStyles) {\n                eraseStyles(this._element, this._endStyles);\n                this._endStyles = null;\n            }\n            setStyles(this._element, this._initialStyles);\n            this._state = 3 /* Destroyed */;\n        }\n    }\n}\nSpecialCasedStyles.initialStylesByElement = ( /* @__PURE__ */new WeakMap());\nfunction filterNonAnimatableStyles(styles) {\n    let result = null;\n    const props = Object.keys(styles);\n    for (let i = 0; i < props.length; i++) {\n        const prop = props[i];\n        if (isNonAnimatableStyle(prop)) {\n            result = result || {};\n            result[prop] = styles[prop];\n        }\n    }\n    return result;\n}\nfunction isNonAnimatableStyle(prop) {\n    return prop === 'display' || prop === 'position';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ELAPSED_TIME_MAX_DECIMAL_PLACES = 3;\nconst ANIMATION_PROP = 'animation';\nconst ANIMATIONEND_EVENT = 'animationend';\nconst ONE_SECOND = 1000;\nclass ElementAnimationStyleHandler {\n    constructor(_element, _name, _duration, _delay, _easing, _fillMode, _onDoneFn) {\n        this._element = _element;\n        this._name = _name;\n        this._duration = _duration;\n        this._delay = _delay;\n        this._easing = _easing;\n        this._fillMode = _fillMode;\n        this._onDoneFn = _onDoneFn;\n        this._finished = false;\n        this._destroyed = false;\n        this._startTime = 0;\n        this._position = 0;\n        this._eventFn = (e) => this._handleCallback(e);\n    }\n    apply() {\n        applyKeyframeAnimation(this._element, `${this._duration}ms ${this._easing} ${this._delay}ms 1 normal ${this._fillMode} ${this._name}`);\n        addRemoveAnimationEvent(this._element, this._eventFn, false);\n        this._startTime = Date.now();\n    }\n    pause() {\n        playPauseAnimation(this._element, this._name, 'paused');\n    }\n    resume() {\n        playPauseAnimation(this._element, this._name, 'running');\n    }\n    setPosition(position) {\n        const index = findIndexForAnimation(this._element, this._name);\n        this._position = position * this._duration;\n        setAnimationStyle(this._element, 'Delay', `-${this._position}ms`, index);\n    }\n    getPosition() {\n        return this._position;\n    }\n    _handleCallback(event) {\n        const timestamp = event._ngTestManualTimestamp || Date.now();\n        const elapsedTime = parseFloat(event.elapsedTime.toFixed(ELAPSED_TIME_MAX_DECIMAL_PLACES)) * ONE_SECOND;\n        if (event.animationName == this._name &&\n            Math.max(timestamp - this._startTime, 0) >= this._delay && elapsedTime >= this._duration) {\n            this.finish();\n        }\n    }\n    finish() {\n        if (this._finished)\n            return;\n        this._finished = true;\n        this._onDoneFn();\n        addRemoveAnimationEvent(this._element, this._eventFn, true);\n    }\n    destroy() {\n        if (this._destroyed)\n            return;\n        this._destroyed = true;\n        this.finish();\n        removeKeyframeAnimation(this._element, this._name);\n    }\n}\nfunction playPauseAnimation(element, name, status) {\n    const index = findIndexForAnimation(element, name);\n    setAnimationStyle(element, 'PlayState', status, index);\n}\nfunction applyKeyframeAnimation(element, value) {\n    const anim = getAnimationStyle(element, '').trim();\n    let index = 0;\n    if (anim.length) {\n        index = countChars(anim, ',') + 1;\n        value = `${anim}, ${value}`;\n    }\n    setAnimationStyle(element, '', value);\n    return index;\n}\nfunction removeKeyframeAnimation(element, name) {\n    const anim = getAnimationStyle(element, '');\n    const tokens = anim.split(',');\n    const index = findMatchingTokenIndex(tokens, name);\n    if (index >= 0) {\n        tokens.splice(index, 1);\n        const newValue = tokens.join(',');\n        setAnimationStyle(element, '', newValue);\n    }\n}\nfunction findIndexForAnimation(element, value) {\n    const anim = getAnimationStyle(element, '');\n    if (anim.indexOf(',') > 0) {\n        const tokens = anim.split(',');\n        return findMatchingTokenIndex(tokens, value);\n    }\n    return findMatchingTokenIndex([anim], value);\n}\nfunction findMatchingTokenIndex(tokens, searchToken) {\n    for (let i = 0; i < tokens.length; i++) {\n        if (tokens[i].indexOf(searchToken) >= 0) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction addRemoveAnimationEvent(element, fn, doRemove) {\n    doRemove ? element.removeEventListener(ANIMATIONEND_EVENT, fn) :\n        element.addEventListener(ANIMATIONEND_EVENT, fn);\n}\nfunction setAnimationStyle(element, name, value, index) {\n    const prop = ANIMATION_PROP + name;\n    if (index != null) {\n        const oldValue = element.style[prop];\n        if (oldValue.length) {\n            const tokens = oldValue.split(',');\n            tokens[index] = value;\n            value = tokens.join(',');\n        }\n    }\n    element.style[prop] = value;\n}\nfunction getAnimationStyle(element, name) {\n    return element.style[ANIMATION_PROP + name] || '';\n}\nfunction countChars(value, char) {\n    let count = 0;\n    for (let i = 0; i < value.length; i++) {\n        const c = value.charAt(i);\n        if (c === char)\n            count++;\n    }\n    return count;\n}\n\nconst DEFAULT_FILL_MODE = 'forwards';\nconst DEFAULT_EASING = 'linear';\nclass CssKeyframesPlayer {\n    constructor(element, keyframes, animationName, _duration, _delay, easing, _finalStyles, _specialStyles) {\n        this.element = element;\n        this.keyframes = keyframes;\n        this.animationName = animationName;\n        this._duration = _duration;\n        this._delay = _delay;\n        this._finalStyles = _finalStyles;\n        this._specialStyles = _specialStyles;\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._onDestroyFns = [];\n        this.currentSnapshot = {};\n        this._state = 0;\n        this.easing = easing || DEFAULT_EASING;\n        this.totalTime = _duration + _delay;\n        this._buildStyler();\n    }\n    onStart(fn) {\n        this._onStartFns.push(fn);\n    }\n    onDone(fn) {\n        this._onDoneFns.push(fn);\n    }\n    onDestroy(fn) {\n        this._onDestroyFns.push(fn);\n    }\n    destroy() {\n        this.init();\n        if (this._state >= 4 /* DESTROYED */)\n            return;\n        this._state = 4 /* DESTROYED */;\n        this._styler.destroy();\n        this._flushStartFns();\n        this._flushDoneFns();\n        if (this._specialStyles) {\n            this._specialStyles.destroy();\n        }\n        this._onDestroyFns.forEach(fn => fn());\n        this._onDestroyFns = [];\n    }\n    _flushDoneFns() {\n        this._onDoneFns.forEach(fn => fn());\n        this._onDoneFns = [];\n    }\n    _flushStartFns() {\n        this._onStartFns.forEach(fn => fn());\n        this._onStartFns = [];\n    }\n    finish() {\n        this.init();\n        if (this._state >= 3 /* FINISHED */)\n            return;\n        this._state = 3 /* FINISHED */;\n        this._styler.finish();\n        this._flushStartFns();\n        if (this._specialStyles) {\n            this._specialStyles.finish();\n        }\n        this._flushDoneFns();\n    }\n    setPosition(value) {\n        this._styler.setPosition(value);\n    }\n    getPosition() {\n        return this._styler.getPosition();\n    }\n    hasStarted() {\n        return this._state >= 2 /* STARTED */;\n    }\n    init() {\n        if (this._state >= 1 /* INITIALIZED */)\n            return;\n        this._state = 1 /* INITIALIZED */;\n        const elm = this.element;\n        this._styler.apply();\n        if (this._delay) {\n            this._styler.pause();\n        }\n    }\n    play() {\n        this.init();\n        if (!this.hasStarted()) {\n            this._flushStartFns();\n            this._state = 2 /* STARTED */;\n            if (this._specialStyles) {\n                this._specialStyles.start();\n            }\n        }\n        this._styler.resume();\n    }\n    pause() {\n        this.init();\n        this._styler.pause();\n    }\n    restart() {\n        this.reset();\n        this.play();\n    }\n    reset() {\n        this._state = 0 /* RESET */;\n        this._styler.destroy();\n        this._buildStyler();\n        this._styler.apply();\n    }\n    _buildStyler() {\n        this._styler = new ElementAnimationStyleHandler(this.element, this.animationName, this._duration, this._delay, this.easing, DEFAULT_FILL_MODE, () => this.finish());\n    }\n    /** @internal */\n    triggerCallback(phaseName) {\n        const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n        methods.forEach(fn => fn());\n        methods.length = 0;\n    }\n    beforeDestroy() {\n        this.init();\n        const styles = {};\n        if (this.hasStarted()) {\n            const finished = this._state >= 3 /* FINISHED */;\n            Object.keys(this._finalStyles).forEach(prop => {\n                if (prop != 'offset') {\n                    styles[prop] = finished ? this._finalStyles[prop] : computeStyle(this.element, prop);\n                }\n            });\n        }\n        this.currentSnapshot = styles;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DirectStylePlayer extends NoopAnimationPlayer {\n    constructor(element, styles) {\n        super();\n        this.element = element;\n        this._startingStyles = {};\n        this.__initialized = false;\n        this._styles = hypenatePropsObject(styles);\n    }\n    init() {\n        if (this.__initialized || !this._startingStyles)\n            return;\n        this.__initialized = true;\n        Object.keys(this._styles).forEach(prop => {\n            this._startingStyles[prop] = this.element.style[prop];\n        });\n        super.init();\n    }\n    play() {\n        if (!this._startingStyles)\n            return;\n        this.init();\n        Object.keys(this._styles)\n            .forEach(prop => this.element.style.setProperty(prop, this._styles[prop]));\n        super.play();\n    }\n    destroy() {\n        if (!this._startingStyles)\n            return;\n        Object.keys(this._startingStyles).forEach(prop => {\n            const value = this._startingStyles[prop];\n            if (value) {\n                this.element.style.setProperty(prop, value);\n            }\n            else {\n                this.element.style.removeProperty(prop);\n            }\n        });\n        this._startingStyles = null;\n        super.destroy();\n    }\n}\n\nconst KEYFRAMES_NAME_PREFIX = 'gen_css_kf_';\nconst TAB_SPACE = ' ';\nclass CssKeyframesDriver {\n    constructor() {\n        this._count = 0;\n    }\n    validateStyleProperty(prop) {\n        return validateStyleProperty(prop);\n    }\n    matchesElement(element, selector) {\n        return matchesElement(element, selector);\n    }\n    containsElement(elm1, elm2) {\n        return containsElement(elm1, elm2);\n    }\n    query(element, selector, multi) {\n        return invokeQuery(element, selector, multi);\n    }\n    computeStyle(element, prop, defaultValue) {\n        return window.getComputedStyle(element)[prop];\n    }\n    buildKeyframeElement(element, name, keyframes) {\n        keyframes = keyframes.map(kf => hypenatePropsObject(kf));\n        let keyframeStr = `@keyframes ${name} {\\n`;\n        let tab = '';\n        keyframes.forEach(kf => {\n            tab = TAB_SPACE;\n            const offset = parseFloat(kf['offset']);\n            keyframeStr += `${tab}${offset * 100}% {\\n`;\n            tab += TAB_SPACE;\n            Object.keys(kf).forEach(prop => {\n                const value = kf[prop];\n                switch (prop) {\n                    case 'offset':\n                        return;\n                    case 'easing':\n                        if (value) {\n                            keyframeStr += `${tab}animation-timing-function: ${value};\\n`;\n                        }\n                        return;\n                    default:\n                        keyframeStr += `${tab}${prop}: ${value};\\n`;\n                        return;\n                }\n            });\n            keyframeStr += `${tab}}\\n`;\n        });\n        keyframeStr += `}\\n`;\n        const kfElm = document.createElement('style');\n        kfElm.textContent = keyframeStr;\n        return kfElm;\n    }\n    animate(element, keyframes, duration, delay, easing, previousPlayers = [], scrubberAccessRequested) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && scrubberAccessRequested) {\n            notifyFaultyScrubber();\n        }\n        const previousCssKeyframePlayers = previousPlayers.filter(player => player instanceof CssKeyframesPlayer);\n        const previousStyles = {};\n        if (allowPreviousPlayerStylesMerge(duration, delay)) {\n            previousCssKeyframePlayers.forEach(player => {\n                let styles = player.currentSnapshot;\n                Object.keys(styles).forEach(prop => previousStyles[prop] = styles[prop]);\n            });\n        }\n        keyframes = balancePreviousStylesIntoKeyframes(element, keyframes, previousStyles);\n        const finalStyles = flattenKeyframesIntoStyles(keyframes);\n        // if there is no animation then there is no point in applying\n        // styles and waiting for an event to get fired. This causes lag.\n        // It's better to just directly apply the styles to the element\n        // via the direct styling animation player.\n        if (duration == 0) {\n            return new DirectStylePlayer(element, finalStyles);\n        }\n        const animationName = `${KEYFRAMES_NAME_PREFIX}${this._count++}`;\n        const kfElm = this.buildKeyframeElement(element, animationName, keyframes);\n        const nodeToAppendKfElm = findNodeToAppendKeyframeElement(element);\n        nodeToAppendKfElm.appendChild(kfElm);\n        const specialStyles = packageNonAnimatableStyles(element, keyframes);\n        const player = new CssKeyframesPlayer(element, keyframes, animationName, duration, delay, easing, finalStyles, specialStyles);\n        player.onDestroy(() => removeElement(kfElm));\n        return player;\n    }\n}\nfunction findNodeToAppendKeyframeElement(element) {\n    const rootNode = element.getRootNode?.();\n    if (typeof ShadowRoot !== 'undefined' && rootNode instanceof ShadowRoot) {\n        return rootNode;\n    }\n    return document.head;\n}\nfunction flattenKeyframesIntoStyles(keyframes) {\n    let flatKeyframes = {};\n    if (keyframes) {\n        const kfs = Array.isArray(keyframes) ? keyframes : [keyframes];\n        kfs.forEach(kf => {\n            Object.keys(kf).forEach(prop => {\n                if (prop == 'offset' || prop == 'easing')\n                    return;\n                flatKeyframes[prop] = kf[prop];\n            });\n        });\n    }\n    return flatKeyframes;\n}\nfunction removeElement(node) {\n    node.parentNode.removeChild(node);\n}\nlet warningIssued = false;\nfunction notifyFaultyScrubber() {\n    if (warningIssued)\n        return;\n    console.warn('@angular/animations: please load the web-animations.js polyfill to allow programmatic access...\\n', '  visit https://bit.ly/IWukam to learn more about using the web-animation-js polyfill.');\n    warningIssued = true;\n}\n\nclass WebAnimationsPlayer {\n    constructor(element, keyframes, options, _specialStyles) {\n        this.element = element;\n        this.keyframes = keyframes;\n        this.options = options;\n        this._specialStyles = _specialStyles;\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._onDestroyFns = [];\n        this._initialized = false;\n        this._finished = false;\n        this._started = false;\n        this._destroyed = false;\n        this.time = 0;\n        this.parentPlayer = null;\n        this.currentSnapshot = {};\n        this._duration = options['duration'];\n        this._delay = options['delay'] || 0;\n        this.time = this._duration + this._delay;\n    }\n    _onFinish() {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(fn => fn());\n            this._onDoneFns = [];\n        }\n    }\n    init() {\n        this._buildPlayer();\n        this._preparePlayerBeforeStart();\n    }\n    _buildPlayer() {\n        if (this._initialized)\n            return;\n        this._initialized = true;\n        const keyframes = this.keyframes;\n        this.domPlayer =\n            this._triggerWebAnimation(this.element, keyframes, this.options);\n        this._finalKeyframe = keyframes.length ? keyframes[keyframes.length - 1] : {};\n        this.domPlayer.addEventListener('finish', () => this._onFinish());\n    }\n    _preparePlayerBeforeStart() {\n        // this is required so that the player doesn't start to animate right away\n        if (this._delay) {\n            this._resetDomPlayerState();\n        }\n        else {\n            this.domPlayer.pause();\n        }\n    }\n    /** @internal */\n    _triggerWebAnimation(element, keyframes, options) {\n        // jscompiler doesn't seem to know animate is a native property because it's not fully\n        // supported yet across common browsers (we polyfill it for Edge/Safari) [CL #143630929]\n        return element['animate'](keyframes, options);\n    }\n    onStart(fn) {\n        this._onStartFns.push(fn);\n    }\n    onDone(fn) {\n        this._onDoneFns.push(fn);\n    }\n    onDestroy(fn) {\n        this._onDestroyFns.push(fn);\n    }\n    play() {\n        this._buildPlayer();\n        if (!this.hasStarted()) {\n            this._onStartFns.forEach(fn => fn());\n            this._onStartFns = [];\n            this._started = true;\n            if (this._specialStyles) {\n                this._specialStyles.start();\n            }\n        }\n        this.domPlayer.play();\n    }\n    pause() {\n        this.init();\n        this.domPlayer.pause();\n    }\n    finish() {\n        this.init();\n        if (this._specialStyles) {\n            this._specialStyles.finish();\n        }\n        this._onFinish();\n        this.domPlayer.finish();\n    }\n    reset() {\n        this._resetDomPlayerState();\n        this._destroyed = false;\n        this._finished = false;\n        this._started = false;\n    }\n    _resetDomPlayerState() {\n        if (this.domPlayer) {\n            this.domPlayer.cancel();\n        }\n    }\n    restart() {\n        this.reset();\n        this.play();\n    }\n    hasStarted() {\n        return this._started;\n    }\n    destroy() {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            this._resetDomPlayerState();\n            this._onFinish();\n            if (this._specialStyles) {\n                this._specialStyles.destroy();\n            }\n            this._onDestroyFns.forEach(fn => fn());\n            this._onDestroyFns = [];\n        }\n    }\n    setPosition(p) {\n        if (this.domPlayer === undefined) {\n            this.init();\n        }\n        this.domPlayer.currentTime = p * this.time;\n    }\n    getPosition() {\n        return this.domPlayer.currentTime / this.time;\n    }\n    get totalTime() {\n        return this._delay + this._duration;\n    }\n    beforeDestroy() {\n        const styles = {};\n        if (this.hasStarted()) {\n            Object.keys(this._finalKeyframe).forEach(prop => {\n                if (prop != 'offset') {\n                    styles[prop] =\n                        this._finished ? this._finalKeyframe[prop] : computeStyle(this.element, prop);\n                }\n            });\n        }\n        this.currentSnapshot = styles;\n    }\n    /** @internal */\n    triggerCallback(phaseName) {\n        const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n        methods.forEach(fn => fn());\n        methods.length = 0;\n    }\n}\n\nclass WebAnimationsDriver {\n    constructor() {\n        this._isNativeImpl = /\\{\\s*\\[native\\s+code\\]\\s*\\}/.test(getElementAnimateFn().toString());\n        this._cssKeyframesDriver = new CssKeyframesDriver();\n    }\n    validateStyleProperty(prop) {\n        return validateStyleProperty(prop);\n    }\n    matchesElement(element, selector) {\n        return matchesElement(element, selector);\n    }\n    containsElement(elm1, elm2) {\n        return containsElement(elm1, elm2);\n    }\n    query(element, selector, multi) {\n        return invokeQuery(element, selector, multi);\n    }\n    computeStyle(element, prop, defaultValue) {\n        return window.getComputedStyle(element)[prop];\n    }\n    overrideWebAnimationsSupport(supported) {\n        this._isNativeImpl = supported;\n    }\n    animate(element, keyframes, duration, delay, easing, previousPlayers = [], scrubberAccessRequested) {\n        const useKeyframes = !scrubberAccessRequested && !this._isNativeImpl;\n        if (useKeyframes) {\n            return this._cssKeyframesDriver.animate(element, keyframes, duration, delay, easing, previousPlayers);\n        }\n        const fill = delay == 0 ? 'both' : 'forwards';\n        const playerOptions = { duration, delay, fill };\n        // we check for this to avoid having a null|undefined value be present\n        // for the easing (which results in an error for certain browsers #9752)\n        if (easing) {\n            playerOptions['easing'] = easing;\n        }\n        const previousStyles = {};\n        const previousWebAnimationPlayers = previousPlayers.filter(player => player instanceof WebAnimationsPlayer);\n        if (allowPreviousPlayerStylesMerge(duration, delay)) {\n            previousWebAnimationPlayers.forEach(player => {\n                let styles = player.currentSnapshot;\n                Object.keys(styles).forEach(prop => previousStyles[prop] = styles[prop]);\n            });\n        }\n        keyframes = keyframes.map(styles => copyStyles(styles, false));\n        keyframes = balancePreviousStylesIntoKeyframes(element, keyframes, previousStyles);\n        const specialStyles = packageNonAnimatableStyles(element, keyframes);\n        return new WebAnimationsPlayer(element, keyframes, playerOptions, specialStyles);\n    }\n}\nfunction supportsWebAnimations() {\n    return typeof getElementAnimateFn() === 'function';\n}\nfunction getElementAnimateFn() {\n    return (isBrowser() && Element.prototype['animate']) || {};\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationDriver, Animation as ɵAnimation, AnimationEngine as ɵAnimationEngine, AnimationStyleNormalizer as ɵAnimationStyleNormalizer, CssKeyframesDriver as ɵCssKeyframesDriver, CssKeyframesPlayer as ɵCssKeyframesPlayer, NoopAnimationDriver as ɵNoopAnimationDriver, NoopAnimationStyleNormalizer as ɵNoopAnimationStyleNormalizer, WebAnimationsDriver as ɵWebAnimationsDriver, WebAnimationsPlayer as ɵWebAnimationsPlayer, WebAnimationsStyleNormalizer as ɵWebAnimationsStyleNormalizer, allowPreviousPlayerStylesMerge as ɵallowPreviousPlayerStylesMerge, containsElement as ɵcontainsElement, invokeQuery as ɵinvokeQuery, matchesElement as ɵmatchesElement, supportsWebAnimations as ɵsupportsWebAnimations, validateStyleProperty as ɵvalidateStyleProperty };\n","/**\n * @license Angular v13.0.3\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { ViewEncapsulation, Injectable, Inject, InjectionToken, RendererFactory2, NgZone, NgModule } from '@angular/core';\nimport { ɵDomRendererFactory2, BrowserModule } from '@angular/platform-browser';\nimport { AnimationBuilder, sequence, AnimationFactory } from '@angular/animations';\nimport * as i1 from '@angular/animations/browser';\nimport { ɵAnimationEngine, ɵsupportsWebAnimations, ɵWebAnimationsDriver, ɵCssKeyframesDriver, ɵWebAnimationsStyleNormalizer, ɵAnimationStyleNormalizer, AnimationDriver, ɵNoopAnimationDriver } from '@angular/animations/browser';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BrowserAnimationBuilder extends AnimationBuilder {\n    constructor(rootRenderer, doc) {\n        super();\n        this._nextAnimationId = 0;\n        const typeData = { id: '0', encapsulation: ViewEncapsulation.None, styles: [], data: { animation: [] } };\n        this._renderer = rootRenderer.createRenderer(doc.body, typeData);\n    }\n    build(animation) {\n        const id = this._nextAnimationId.toString();\n        this._nextAnimationId++;\n        const entry = Array.isArray(animation) ? sequence(animation) : animation;\n        issueAnimationCommand(this._renderer, null, id, 'register', [entry]);\n        return new BrowserAnimationFactory(id, this._renderer);\n    }\n}\nBrowserAnimationBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BrowserAnimationBuilder, deps: [{ token: i0.RendererFactory2 }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nBrowserAnimationBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BrowserAnimationBuilder });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BrowserAnimationBuilder, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.RendererFactory2 }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\nclass BrowserAnimationFactory extends AnimationFactory {\n    constructor(_id, _renderer) {\n        super();\n        this._id = _id;\n        this._renderer = _renderer;\n    }\n    create(element, options) {\n        return new RendererAnimationPlayer(this._id, element, options || {}, this._renderer);\n    }\n}\nclass RendererAnimationPlayer {\n    constructor(id, element, options, _renderer) {\n        this.id = id;\n        this.element = element;\n        this._renderer = _renderer;\n        this.parentPlayer = null;\n        this._started = false;\n        this.totalTime = 0;\n        this._command('create', options);\n    }\n    _listen(eventName, callback) {\n        return this._renderer.listen(this.element, `@@${this.id}:${eventName}`, callback);\n    }\n    _command(command, ...args) {\n        return issueAnimationCommand(this._renderer, this.element, this.id, command, args);\n    }\n    onDone(fn) {\n        this._listen('done', fn);\n    }\n    onStart(fn) {\n        this._listen('start', fn);\n    }\n    onDestroy(fn) {\n        this._listen('destroy', fn);\n    }\n    init() {\n        this._command('init');\n    }\n    hasStarted() {\n        return this._started;\n    }\n    play() {\n        this._command('play');\n        this._started = true;\n    }\n    pause() {\n        this._command('pause');\n    }\n    restart() {\n        this._command('restart');\n    }\n    finish() {\n        this._command('finish');\n    }\n    destroy() {\n        this._command('destroy');\n    }\n    reset() {\n        this._command('reset');\n        this._started = false;\n    }\n    setPosition(p) {\n        this._command('setPosition', p);\n    }\n    getPosition() {\n        return this._renderer.engine.players[+this.id]?.getPosition() ?? 0;\n    }\n}\nfunction issueAnimationCommand(renderer, element, id, command, args) {\n    return renderer.setProperty(element, `@@${id}:${command}`, args);\n}\n\nconst ANIMATION_PREFIX = '@';\nconst DISABLE_ANIMATIONS_FLAG = '@.disabled';\nclass AnimationRendererFactory {\n    constructor(delegate, engine, _zone) {\n        this.delegate = delegate;\n        this.engine = engine;\n        this._zone = _zone;\n        this._currentId = 0;\n        this._microtaskId = 1;\n        this._animationCallbacksBuffer = [];\n        this._rendererCache = new Map();\n        this._cdRecurDepth = 0;\n        this.promise = Promise.resolve(0);\n        engine.onRemovalComplete = (element, delegate) => {\n            // Note: if a component element has a leave animation, and a host leave animation,\n            // the view engine will call `removeChild` for the parent\n            // component renderer as well as for the child component renderer.\n            // Therefore, we need to check if we already removed the element.\n            const parentNode = delegate?.parentNode(element);\n            if (parentNode) {\n                delegate.removeChild(parentNode, element);\n            }\n        };\n    }\n    createRenderer(hostElement, type) {\n        const EMPTY_NAMESPACE_ID = '';\n        // cache the delegates to find out which cached delegate can\n        // be used by which cached renderer\n        const delegate = this.delegate.createRenderer(hostElement, type);\n        if (!hostElement || !type || !type.data || !type.data['animation']) {\n            let renderer = this._rendererCache.get(delegate);\n            if (!renderer) {\n                renderer = new BaseAnimationRenderer(EMPTY_NAMESPACE_ID, delegate, this.engine);\n                // only cache this result when the base renderer is used\n                this._rendererCache.set(delegate, renderer);\n            }\n            return renderer;\n        }\n        const componentId = type.id;\n        const namespaceId = type.id + '-' + this._currentId;\n        this._currentId++;\n        this.engine.register(namespaceId, hostElement);\n        const registerTrigger = (trigger) => {\n            if (Array.isArray(trigger)) {\n                trigger.forEach(registerTrigger);\n            }\n            else {\n                this.engine.registerTrigger(componentId, namespaceId, hostElement, trigger.name, trigger);\n            }\n        };\n        const animationTriggers = type.data['animation'];\n        animationTriggers.forEach(registerTrigger);\n        return new AnimationRenderer(this, namespaceId, delegate, this.engine);\n    }\n    begin() {\n        this._cdRecurDepth++;\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    }\n    _scheduleCountTask() {\n        // always use promise to schedule microtask instead of use Zone\n        this.promise.then(() => {\n            this._microtaskId++;\n        });\n    }\n    /** @internal */\n    scheduleListenerCallback(count, fn, data) {\n        if (count >= 0 && count < this._microtaskId) {\n            this._zone.run(() => fn(data));\n            return;\n        }\n        if (this._animationCallbacksBuffer.length == 0) {\n            Promise.resolve(null).then(() => {\n                this._zone.run(() => {\n                    this._animationCallbacksBuffer.forEach(tuple => {\n                        const [fn, data] = tuple;\n                        fn(data);\n                    });\n                    this._animationCallbacksBuffer = [];\n                });\n            });\n        }\n        this._animationCallbacksBuffer.push([fn, data]);\n    }\n    end() {\n        this._cdRecurDepth--;\n        // this is to prevent animations from running twice when an inner\n        // component does CD when a parent component instead has inserted it\n        if (this._cdRecurDepth == 0) {\n            this._zone.runOutsideAngular(() => {\n                this._scheduleCountTask();\n                this.engine.flush(this._microtaskId);\n            });\n        }\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    }\n    whenRenderingDone() {\n        return this.engine.whenRenderingDone();\n    }\n}\nAnimationRendererFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: AnimationRendererFactory, deps: [{ token: i0.RendererFactory2 }, { token: i1.ɵAnimationEngine }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nAnimationRendererFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: AnimationRendererFactory });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: AnimationRendererFactory, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.RendererFactory2 }, { type: i1.ɵAnimationEngine }, { type: i0.NgZone }]; } });\nclass BaseAnimationRenderer {\n    constructor(namespaceId, delegate, engine) {\n        this.namespaceId = namespaceId;\n        this.delegate = delegate;\n        this.engine = engine;\n        this.destroyNode = this.delegate.destroyNode ? (n) => delegate.destroyNode(n) : null;\n    }\n    get data() {\n        return this.delegate.data;\n    }\n    destroy() {\n        this.engine.destroy(this.namespaceId, this.delegate);\n        this.delegate.destroy();\n    }\n    createElement(name, namespace) {\n        return this.delegate.createElement(name, namespace);\n    }\n    createComment(value) {\n        return this.delegate.createComment(value);\n    }\n    createText(value) {\n        return this.delegate.createText(value);\n    }\n    appendChild(parent, newChild) {\n        this.delegate.appendChild(parent, newChild);\n        this.engine.onInsert(this.namespaceId, newChild, parent, false);\n    }\n    insertBefore(parent, newChild, refChild, isMove = true) {\n        this.delegate.insertBefore(parent, newChild, refChild);\n        // If `isMove` true than we should animate this insert.\n        this.engine.onInsert(this.namespaceId, newChild, parent, isMove);\n    }\n    removeChild(parent, oldChild, isHostElement) {\n        this.engine.onRemove(this.namespaceId, oldChild, this.delegate, isHostElement);\n    }\n    selectRootElement(selectorOrNode, preserveContent) {\n        return this.delegate.selectRootElement(selectorOrNode, preserveContent);\n    }\n    parentNode(node) {\n        return this.delegate.parentNode(node);\n    }\n    nextSibling(node) {\n        return this.delegate.nextSibling(node);\n    }\n    setAttribute(el, name, value, namespace) {\n        this.delegate.setAttribute(el, name, value, namespace);\n    }\n    removeAttribute(el, name, namespace) {\n        this.delegate.removeAttribute(el, name, namespace);\n    }\n    addClass(el, name) {\n        this.delegate.addClass(el, name);\n    }\n    removeClass(el, name) {\n        this.delegate.removeClass(el, name);\n    }\n    setStyle(el, style, value, flags) {\n        this.delegate.setStyle(el, style, value, flags);\n    }\n    removeStyle(el, style, flags) {\n        this.delegate.removeStyle(el, style, flags);\n    }\n    setProperty(el, name, value) {\n        if (name.charAt(0) == ANIMATION_PREFIX && name == DISABLE_ANIMATIONS_FLAG) {\n            this.disableAnimations(el, !!value);\n        }\n        else {\n            this.delegate.setProperty(el, name, value);\n        }\n    }\n    setValue(node, value) {\n        this.delegate.setValue(node, value);\n    }\n    listen(target, eventName, callback) {\n        return this.delegate.listen(target, eventName, callback);\n    }\n    disableAnimations(element, value) {\n        this.engine.disableAnimations(element, value);\n    }\n}\nclass AnimationRenderer extends BaseAnimationRenderer {\n    constructor(factory, namespaceId, delegate, engine) {\n        super(namespaceId, delegate, engine);\n        this.factory = factory;\n        this.namespaceId = namespaceId;\n    }\n    setProperty(el, name, value) {\n        if (name.charAt(0) == ANIMATION_PREFIX) {\n            if (name.charAt(1) == '.' && name == DISABLE_ANIMATIONS_FLAG) {\n                value = value === undefined ? true : !!value;\n                this.disableAnimations(el, value);\n            }\n            else {\n                this.engine.process(this.namespaceId, el, name.substr(1), value);\n            }\n        }\n        else {\n            this.delegate.setProperty(el, name, value);\n        }\n    }\n    listen(target, eventName, callback) {\n        if (eventName.charAt(0) == ANIMATION_PREFIX) {\n            const element = resolveElementFromTarget(target);\n            let name = eventName.substr(1);\n            let phase = '';\n            // @listener.phase is for trigger animation callbacks\n            // @@listener is for animation builder callbacks\n            if (name.charAt(0) != ANIMATION_PREFIX) {\n                [name, phase] = parseTriggerCallbackName(name);\n            }\n            return this.engine.listen(this.namespaceId, element, name, phase, event => {\n                const countId = event['_data'] || -1;\n                this.factory.scheduleListenerCallback(countId, callback, event);\n            });\n        }\n        return this.delegate.listen(target, eventName, callback);\n    }\n}\nfunction resolveElementFromTarget(target) {\n    switch (target) {\n        case 'body':\n            return document.body;\n        case 'document':\n            return document;\n        case 'window':\n            return window;\n        default:\n            return target;\n    }\n}\nfunction parseTriggerCallbackName(triggerName) {\n    const dotIndex = triggerName.indexOf('.');\n    const trigger = triggerName.substring(0, dotIndex);\n    const phase = triggerName.substr(dotIndex + 1);\n    return [trigger, phase];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass InjectableAnimationEngine extends ɵAnimationEngine {\n    constructor(doc, driver, normalizer) {\n        super(doc.body, driver, normalizer);\n    }\n    ngOnDestroy() {\n        this.flush();\n    }\n}\nInjectableAnimationEngine.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: InjectableAnimationEngine, deps: [{ token: DOCUMENT }, { token: i1.AnimationDriver }, { token: i1.ɵAnimationStyleNormalizer }], target: i0.ɵɵFactoryTarget.Injectable });\nInjectableAnimationEngine.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: InjectableAnimationEngine });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: InjectableAnimationEngine, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1.AnimationDriver }, { type: i1.ɵAnimationStyleNormalizer }]; } });\nfunction instantiateSupportedAnimationDriver() {\n    return ɵsupportsWebAnimations() ? new ɵWebAnimationsDriver() : new ɵCssKeyframesDriver();\n}\nfunction instantiateDefaultStyleNormalizer() {\n    return new ɵWebAnimationsStyleNormalizer();\n}\nfunction instantiateRendererFactory(renderer, engine, zone) {\n    return new AnimationRendererFactory(renderer, engine, zone);\n}\n/**\n * @publicApi\n */\nconst ANIMATION_MODULE_TYPE = new InjectionToken('AnimationModuleType');\nconst SHARED_ANIMATION_PROVIDERS = [\n    { provide: AnimationBuilder, useClass: BrowserAnimationBuilder },\n    { provide: ɵAnimationStyleNormalizer, useFactory: instantiateDefaultStyleNormalizer },\n    { provide: ɵAnimationEngine, useClass: InjectableAnimationEngine }, {\n        provide: RendererFactory2,\n        useFactory: instantiateRendererFactory,\n        deps: [ɵDomRendererFactory2, ɵAnimationEngine, NgZone]\n    }\n];\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserModule.\n */\nconst BROWSER_ANIMATIONS_PROVIDERS = [\n    { provide: AnimationDriver, useFactory: instantiateSupportedAnimationDriver },\n    { provide: ANIMATION_MODULE_TYPE, useValue: 'BrowserAnimations' }, ...SHARED_ANIMATION_PROVIDERS\n];\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserTestingModule.\n */\nconst BROWSER_NOOP_ANIMATIONS_PROVIDERS = [\n    { provide: AnimationDriver, useClass: ɵNoopAnimationDriver },\n    { provide: ANIMATION_MODULE_TYPE, useValue: 'NoopAnimations' }, ...SHARED_ANIMATION_PROVIDERS\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Exports `BrowserModule` with additional [dependency-injection providers](guide/glossary#provider)\n * for use with animations. See [Animations](guide/animations).\n * @publicApi\n */\nclass BrowserAnimationsModule {\n    /**\n     * Configures the module based on the specified object.\n     *\n     * @param config Object used to configure the behavior of the `BrowserAnimationsModule`.\n     * @see `BrowserAnimationsModuleConfig`\n     *\n     * @usageNotes\n     * When registering the `BrowserAnimationsModule`, you can use the `withConfig`\n     * function as follows:\n     * ```\n     * @NgModule({\n     *   imports: [BrowserAnimationsModule.withConfig(config)]\n     * })\n     * class MyNgModule {}\n     * ```\n     */\n    static withConfig(config) {\n        return {\n            ngModule: BrowserAnimationsModule,\n            providers: config.disableAnimations ? BROWSER_NOOP_ANIMATIONS_PROVIDERS :\n                BROWSER_ANIMATIONS_PROVIDERS\n        };\n    }\n}\nBrowserAnimationsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BrowserAnimationsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBrowserAnimationsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BrowserAnimationsModule, exports: [BrowserModule] });\nBrowserAnimationsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BrowserAnimationsModule, providers: BROWSER_ANIMATIONS_PROVIDERS, imports: [BrowserModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BrowserAnimationsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [BrowserModule],\n                    providers: BROWSER_ANIMATIONS_PROVIDERS,\n                }]\n        }] });\n/**\n * A null player that must be imported to allow disabling of animations.\n * @publicApi\n */\nclass NoopAnimationsModule {\n}\nNoopAnimationsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NoopAnimationsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNoopAnimationsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NoopAnimationsModule, exports: [BrowserModule] });\nNoopAnimationsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NoopAnimationsModule, providers: BROWSER_NOOP_ANIMATIONS_PROVIDERS, imports: [BrowserModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NoopAnimationsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [BrowserModule],\n                    providers: BROWSER_NOOP_ANIMATIONS_PROVIDERS,\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ANIMATION_MODULE_TYPE, BrowserAnimationsModule, NoopAnimationsModule, AnimationRenderer as ɵAnimationRenderer, AnimationRendererFactory as ɵAnimationRendererFactory, BrowserAnimationBuilder as ɵBrowserAnimationBuilder, BrowserAnimationFactory as ɵBrowserAnimationFactory, InjectableAnimationEngine as ɵInjectableAnimationEngine };\n","import { Subject, Subscription, from, EMPTY } from 'rxjs';\nimport { ɵNG_PIPE_DEF, ɵgetLContext, ɵglobal } from '@angular/core';\nimport { mergeMap, takeUntil } from 'rxjs/operators';\n\nconst NG_PIPE_DEF = ɵNG_PIPE_DEF;\nfunction isPipe(target) {\n    return !!target[NG_PIPE_DEF];\n}\n\n/**\n * Applied to instances and stores `Subject` instance when\n * no custom destroy method is provided.\n */\nconst DESTROY = Symbol('__destroy');\n/**\n * Applied to definitions and informs that class is decorated\n */\nconst DECORATOR_APPLIED = Symbol('__decoratorApplied');\n/**\n * If we use the `untilDestroyed` operator multiple times inside the single\n * instance providing different `destroyMethodName`, then all streams will\n * subscribe to the single subject. If any method is invoked, the subject will\n * emit and all streams will be unsubscribed. We wan't to prevent this behavior,\n * thus we store subjects under different symbols.\n */\nfunction getSymbol(destroyMethodName) {\n    if (typeof destroyMethodName === 'string') {\n        return Symbol(`__destroy__${destroyMethodName}`);\n    }\n    else {\n        return DESTROY;\n    }\n}\nfunction markAsDecorated(type) {\n    // Store this property on the prototype if it's an injectable class, component or directive.\n    // We will be able to handle class extension this way.\n    type.prototype[DECORATOR_APPLIED] = true;\n}\nfunction createSubjectOnTheInstance(instance, symbol) {\n    if (!instance[symbol]) {\n        instance[symbol] = new Subject();\n    }\n}\nfunction completeSubjectOnTheInstance(instance, symbol) {\n    if (instance[symbol]) {\n        instance[symbol].next();\n        instance[symbol].complete();\n        // We also have to re-assign this property thus in the future\n        // we will be able to create new subject on the same instance.\n        instance[symbol] = null;\n    }\n}\n\nfunction unsubscribe(property) {\n    if (property instanceof Subscription) {\n        property.unsubscribe();\n    }\n}\nfunction unsubscribeIfPropertyIsArrayLike(property) {\n    Array.isArray(property) && property.forEach(unsubscribe);\n}\nfunction decorateNgOnDestroy(ngOnDestroy, options) {\n    return function () {\n        // Invoke the original `ngOnDestroy` if it exists\n        ngOnDestroy && ngOnDestroy.call(this);\n        // It's important to use `this` instead of caching instance\n        // that may lead to memory leaks\n        completeSubjectOnTheInstance(this, getSymbol());\n        // Check if subscriptions are pushed to some array\n        if (options.arrayName) {\n            unsubscribeIfPropertyIsArrayLike(this[options.arrayName]);\n        }\n        // Loop through the properties and find subscriptions\n        if (options.checkProperties) {\n            for (const property in this) {\n                if (options.blackList?.includes(property)) {\n                    continue;\n                }\n                unsubscribe(this[property]);\n            }\n        }\n    };\n}\nfunction decorateProviderDirectiveOrComponent(type, options) {\n    type.prototype.ngOnDestroy = decorateNgOnDestroy(type.prototype.ngOnDestroy, options);\n}\nfunction decoratePipe(type, options) {\n    const def = type.ɵpipe;\n    def.onDestroy = decorateNgOnDestroy(def.onDestroy, options);\n}\nfunction UntilDestroy(options = {}) {\n    return (type) => {\n        if (isPipe(type)) {\n            decoratePipe(type, options);\n        }\n        else {\n            decorateProviderDirectiveOrComponent(type, options);\n        }\n        markAsDecorated(type);\n    };\n}\n\n// `LView` is an array where each index matches the specific data structure.\n// The 7th element in an `LView` is an array of cleanup listeners. They are\n// invoked when the view is removed (similar to `ComponentRef.onDestroy`).\nconst CLEANUP = 7;\nconst CheckerHasBeenSet = Symbol('CheckerHasBeenSet');\nfunction setupSubjectUnsubscribedChecker(instance, destroy$) {\n    // This function is used within the `untilDestroyed` operator and setups a function that\n    // listens for the view removal and checks if the `destroy$` subject has any observers (usually `takeUntil`).\n    // Note: this code will not be shipped into production since it's guarded with `ngDevMode`,\n    // this means it'll exist only in development mode.\n    if (instance[CheckerHasBeenSet] || isAngularInTestMode()) {\n        return;\n    }\n    runOutsideAngular(() => from(Promise.resolve())\n        .pipe(mergeMap(() => {\n        let lContext;\n        try {\n            // The `ɵgetLContext` might not work for a pipe, because it's not a component nor a directive,\n            // which means there's no `RNode` for an instance.\n            lContext = ɵgetLContext(instance);\n        }\n        catch {\n            lContext = null;\n        }\n        const lView = lContext?.lView;\n        if (lView == null) {\n            return EMPTY;\n        }\n        const lCleanup = lView[CLEANUP] || (lView[CLEANUP] = []);\n        const cleanupHasBeenExecuted$ = new Subject();\n        // Note: this function is named for debugging purposes.\n        lCleanup.push(function untilDestroyedLCleanup() {\n            // We leave the Angular zone, so RxJS will also call subsequent `next` functions\n            // outside of the Angular zone, which is done to avoid scheduling a microtask (through\n            // `asapScheduler`) within the Angular zone.\n            runOutsideAngular(() => {\n                cleanupHasBeenExecuted$.next();\n                cleanupHasBeenExecuted$.complete();\n            });\n        });\n        return cleanupHasBeenExecuted$;\n    }), \n    // We can't use `observeOn(asapScheduler)` because this might break the app's change detection.\n    // RxJS schedulers coalesce tasks and then flush the queue, which means our task might be scheduled\n    // within the root zone, and then all of the tasks (that were set up by developers in the Angular zone)\n    // will also be flushed in the root zone.\n    mergeMap(() => Promise.resolve()))\n        .subscribe(() => {\n        // Note: The `observed` property is available only in RxJS@7.2.0, which will throw\n        // an error in lower versions. We have integration test with RxJS@6 to ensure we don't\n        // import operators from `rxjs`; that's why it's wrapped into braces. The `observers`\n        // property is also being deprecated.\n        const observed = destroy$['observed'] ?? destroy$['observers'].length > 0;\n        if (observed) {\n            console.warn(createMessage(instance));\n        }\n    }));\n    instance[CheckerHasBeenSet] = true;\n}\nfunction isAngularInTestMode() {\n    // Gets whether the code is currently running in a test environment.\n    // We don't use `declare const` because it might cause conflicts with the real typings.\n    return (\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    (typeof __karma__ !== 'undefined' && !!__karma__) ||\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        (typeof jasmine !== 'undefined' && !!jasmine) ||\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        (typeof jest !== 'undefined' && !!jest) ||\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        (typeof Mocha !== 'undefined' && !!Mocha) ||\n        // Jest is not defined in ESM mode since it must be access only by importing from `@jest/globals`.\n        // There's no way to check if we're in Jest ESM mode or not, but we can check if the `process` is defined.\n        // Note: it's required to check for `[object process]` because someone might be running unit tests with\n        // Webpack and shimming `process`.\n        (typeof process !== 'undefined' &&\n            Object.prototype.toString.call(process) === '[object process]'));\n}\nfunction runOutsideAngular(fn) {\n    // We cannot inject the `NgZone` class when running the checker. The `__ngContext__` is read\n    // for the first time within a microtask which triggers change detection; we want to avoid that.\n    // The `Zone` is always available globally when the `zone.js` is imported. Otherwise, it may be\n    // nooped through bootstrap options. The `NgZone.runOutsideAngular` calls `Zone.root.run`, so we're\n    // safe calling that function directly.\n    const Zone = ɵglobal.Zone;\n    const isNgZoneEnabled = !!Zone && typeof Zone.root?.run === 'function';\n    return isNgZoneEnabled ? Zone.root.run(fn) : fn();\n}\nfunction createMessage(instance) {\n    return `\n  The ${instance.constructor.name} still has subscriptions that haven't been unsubscribed.\n  This may happen if the class extends another class decorated with @UntilDestroy().\n  The child class implements its own ngOnDestroy() method but doesn't call super.ngOnDestroy().\n  Let's look at the following example:\n  @UntilDestroy()\n  @Directive()\n  export abstract class BaseDirective {}\n  @Component({ template: '' })\n  export class ConcreteComponent extends BaseDirective implements OnDestroy {\n    constructor() {\n      super();\n      someObservable$.pipe(untilDestroyed(this)).subscribe();\n    }\n    ngOnDestroy(): void {\n      // Some logic here...\n    }\n  }\n  The BaseDirective.ngOnDestroy() will not be called since Angular will call ngOnDestroy()\n  on the ConcreteComponent, but not on the BaseDirective.\n  One of the solutions is to declare an empty ngOnDestroy method on the BaseDirective:\n  @UntilDestroy()\n  @Directive()\n  export abstract class BaseDirective {\n    ngOnDestroy(): void {}\n  }\n  @Component({ template: '' })\n  export class ConcreteComponent extends BaseDirective implements OnDestroy {\n    constructor() {\n      super();\n      someObservable$.pipe(untilDestroyed(this)).subscribe();\n    }\n    ngOnDestroy(): void {\n      // Some logic here...\n      super.ngOnDestroy();\n    }\n  }\n  `;\n}\n\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || ngDevMode;\nfunction overrideNonDirectiveInstanceMethod(instance, destroyMethodName, symbol) {\n    const originalDestroy = instance[destroyMethodName];\n    if (NG_DEV_MODE && typeof originalDestroy !== 'function') {\n        throw new Error(`${instance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`);\n    }\n    createSubjectOnTheInstance(instance, symbol);\n    instance[destroyMethodName] = function () {\n        // eslint-disable-next-line prefer-rest-params\n        originalDestroy.apply(this, arguments);\n        completeSubjectOnTheInstance(this, symbol);\n        // We have to re-assign this property back to the original value.\n        // If the `untilDestroyed` operator is called for the same instance\n        // multiple times, then we will be able to get the original\n        // method again and not the patched one.\n        instance[destroyMethodName] = originalDestroy;\n    };\n}\nfunction untilDestroyed(instance, destroyMethodName) {\n    return (source) => {\n        const symbol = getSymbol(destroyMethodName);\n        // If `destroyMethodName` is passed then the developer applies\n        // this operator to something non-related to Angular DI system\n        if (typeof destroyMethodName === 'string') {\n            overrideNonDirectiveInstanceMethod(instance, destroyMethodName, symbol);\n        }\n        else {\n            NG_DEV_MODE && ensureClassIsDecorated(instance);\n            createSubjectOnTheInstance(instance, symbol);\n        }\n        const destroy$ = instance[symbol];\n        NG_DEV_MODE && setupSubjectUnsubscribedChecker(instance, destroy$);\n        return source.pipe(takeUntil(destroy$));\n    };\n}\nfunction ensureClassIsDecorated(instance) {\n    const prototype = Object.getPrototypeOf(instance);\n    const missingDecorator = !(DECORATOR_APPLIED in prototype);\n    if (missingDecorator) {\n        throw new Error('untilDestroyed operator cannot be used inside directives or ' +\n            'components or providers that are not decorated with UntilDestroy decorator');\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { UntilDestroy, untilDestroyed };\n"],"sourceRoot":"webpack:///","file":"default-projects_browser-extension_src_app_components_ext-header_ext-header_component_ts-proj-ac64ab.js"}